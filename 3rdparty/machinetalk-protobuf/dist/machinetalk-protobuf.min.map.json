{"version":3,"sources":["node_modules/browser-pack/_prelude.js","build/js/machinetalk/protobuf/canon.js","build/js/machinetalk/protobuf/config.js","build/js/machinetalk/protobuf/emcclass.js","build/js/machinetalk/protobuf/firmware.js","build/js/machinetalk/protobuf/jplan.js","build/js/machinetalk/protobuf/log.js","build/js/machinetalk/protobuf/message.js","build/js/machinetalk/protobuf/motcmds.js","build/js/machinetalk/protobuf/nanopb.js","build/js/machinetalk/protobuf/object.js","build/js/machinetalk/protobuf/preview.js","build/js/machinetalk/protobuf/ros.js","build/js/machinetalk/protobuf/rtapi_message.js","build/js/machinetalk/protobuf/rtapicommand.js","build/js/machinetalk/protobuf/status.js","build/js/machinetalk/protobuf/task.js","build/js/machinetalk/protobuf/test.js","build/js/machinetalk/protobuf/types.js","build/js/machinetalk/protobuf/value.js","build/js/protoexport.js","node_modules/bytebuffer/dist/bytebuffer.js","node_modules/bytebuffer/node_modules/long/dist/long.js","node_modules/process/browser.js","node_modules/protobufjs/dist/protobuf.js"],"names":["module","exports","require","newBuilder","package","syntax","options","java_package","messages","name","fields","rule","type","id","default","(nanopb_msgopt).msgid","enums","values","isNamespace","build","(nanopb).max_size","(nanopb).max_count","(nanopb).type","pb","global","factory","define","Long","e","this","stringSource","s","i","length","charCodeAt","stringDestination","cs","ps","arguments","join","stringFromCharCode","apply","String","push","Array","prototype","ieee754_read","buffer","offset","isLE","mLen","nBytes","m","eLen","eMax","eBias","nBits","d","NaN","Infinity","Math","pow","ieee754_write","value","c","rt","abs","isNaN","floor","log","LN2","ByteBuffer","capacity","littleEndian","noAssert","DEFAULT_CAPACITY","DEFAULT_ENDIAN","DEFAULT_NOASSERT","RangeError","EMPTY_BUFFER","ArrayBuffer","view","Uint8Array","markedOffset","limit","VERSION","LITTLE_ENDIAN","BIG_ENDIAN","ByteBufferPrototype","__isByteBuffer__","Object","defineProperty","enumerable","configurable","fromCharCode","accessor","allocate","concat","buffers","encoding","undefined","k","isByteBuffer","wrap","bi","bb","set","subarray","fromBase64","fromHex","fromBinary","fromUTF8","fromDebug","Error","TypeError","clone","call","byteOffset","byteLength","toString","writeBitSet","relative","start","bits","bytes","bit","writeVarint32","writeByte","readBitSet","ret","readVarint32","readByte","readBytes","slice","writeBytes","append","writeInt8","capacity0","resize","readInt8","writeUint8","capacity1","writeUInt8","readUint8","readUInt8","writeInt16","capacity2","writeShort","readInt16","readShort","writeUint16","capacity3","writeUInt16","readUint16","readUInt16","writeInt32","capacity4","writeInt","readInt32","readInt","writeUint32","capacity5","writeUInt32","readUint32","readUInt32","writeInt64","fromNumber","fromString","capacity6","lo","low","hi","high","writeLong","readInt64","readLong","writeUint64","capacity7","writeUInt64","readUint64","readUInt64","writeFloat32","capacity8","writeFloat","readFloat32","readFloat","writeFloat64","capacity9","writeDouble","readFloat64","readDouble","MAX_VARINT32_BYTES","calculateVarint32","zigZagEncode32","n","zigZagDecode32","b","size","capacity10","writeVarint32ZigZag","err","readVarint32ZigZag","val","MAX_VARINT64_BYTES","calculateVarint64","part0","toInt","part1","shiftRightUnsigned","part2","zigZagEncode64","unsigned","toSigned","shiftLeft","xor","shiftRight","toUnsigned","zigZagDecode64","and","ONE","negate","writeVarint64","capacity11","writeVarint64ZigZag","readVarint64","fromBits","readVarint64ZigZag","writeCString","str","utfx","calculateUTF16asUTF8","capacity12","encodeUTF16toUTF8","bind","readCString","sd","decodeUTF8toUTF16","string","writeIString","capacity13","readIString","len","readUTF8String","METRICS_BYTES","METRICS_CHARS","writeUTF8String","capacity14","writeString","calculateUTF8Chars","calculateUTF8Bytes","calculateString","metrics","decodeUTF8","cp","UTF8toUTF16","readString","writeVString","l","capacity15","readVString","source","capacity16","appendTo","target","assert","clear","copy","compact","begin","end","copyTo","targetOffset","sourceOffset","sourceLimit","targetRelative","ensureCapacity","current","fill","flip","mark","order","LE","BE","bigEndian","prepend","diff","prependTo","printDebug","out","console","toDebug","remaining","reset","reverse","skip","toBuffer","forceCopy","toArrayBuffer","toUTF8","toBase64","toHex","toBinary","toColumns","lxiv","aout","ain","encode","src","dst","t","decode","fail","t1","t2","test","btoa","atob","b64","chars","parts","charCode","columns","hex","asc","toUpperCase","ch","j","rs","ho","hm","hl","charAt","parseInt","substring","isFinite","MAX_CODEPOINT","encodeUTF8","a","indexOf","UTF16toUTF8","c1","c2","calculateCodePoint","calculateUTF8","isLong","obj","fromInt","cachedObj","cache","UINT_CACHE","INT_CACHE","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","radix","p","radixToPower","pow_dbl","result","min","power","mul","add","fromValue","__isLong__","TWO_PWR_16_DBL","TWO_PWR_24","UONE","NEG_ONE","LongPrototype","toNumber","isZero","isNegative","eq","radixLong","div","rem1","sub","rem","remDiv","intval","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","isPositive","isOdd","isEven","equals","other","notEquals","neq","lessThan","comp","lt","lessThanOrEqual","lte","greaterThan","gt","greaterThanOrEqual","gte","compare","thisNeg","otherNeg","not","addend","a48","a32","a16","a00","b48","b32","b16","b00","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","divide","divisor","approx","res","shru","shr","shl","max","log2","ceil","delta","approxRes","approxRem","modulo","mod","or","numBits","toBytes","le","toBytesLE","toBytesBE","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","run","Item","array","noop","process","nextTick","args","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","isCommonJS","ProtoBuf","WIRE_TYPES","VARINT","BITS64","LDELIM","STARTGROUP","ENDGROUP","BITS32","PACKABLE_WIRE_TYPES","TYPES","int32","wireType","defaultValue","uint32","sint32","int64","uint64","sint64","bool","double","fixed32","sfixed32","fixed64","sfixed64","float","enum","message","group","MAP_KEY_TYPES","ID_MIN","ID_MAX","convertFieldsToCamelCase","populateAccessors","populateDefaults","Util","IS_NODE","XHR","XMLHttpFactories","XMLHttpRequest","ActiveXObject","xhr","fetch","path","callback","fs","readFile","data","readFileSync","open","setRequestHeader","overrideMimeType","send","status","responseText","onreadystatechange","readyState","toCamelCase","replace","$0","$1","Lang","DELIM","RULE","TYPE","NAME","TYPEDEF","TYPEREF","FQTYPEREF","NUMBER","NUMBER_DEC","NUMBER_HEX","NUMBER_OCT","NUMBER_FLT","BOOL","ID","NEGID","WHITESPACE","STRING","STRING_DQ","STRING_SQ","DotProto","mkId","mayBeNegative","sign","mkNumber","parseFloat","setOption","isArray","Tokenizer","proto","index","line","stack","_stringOpen","TokenizerPrototype","_readString","re","lastIndex","match","exec","next","shift","repeat","prev","token","peek","expected","actual","omit","Parser","tn","proto3","ParserPrototype","parse","weak","topLevel","imports","services","head","_parseMessage","_parseEnum","_parseOption","_parseService","_parseExtend","delim","_readValue","mayBeTypeRef","toLowerCase","parent","isList","custom","_parseOptionValue","svc","rpc","_parseServiceRPC","method","request","response","request_stream","response_stream","fld","isGroup","msg","oneofs","_parseFieldOptions","_parseMessageField","_parseMessageOneOf","hasOwnProperty","_parseExtensionRanges","_parseIgnored","grp","first","enm","range","ranges","ext","ref","Reflect","mkDefault","mkLong","skipTillGroupEnd","expectedId","buf","tag","T","builder","className","TPrototype","fqn","ptr","includeClass","Namespace","children","NamespacePrototype","create","getChildren","addChild","child","getChild","Message","Field","originalName","nameOrId","key","resolve","qn","excludeNonNamespace","part","split","unshift","ns","buildOpt","opt","keys","getOption","Element","resolvedType","isMapKey","ElementPrototype","defaultFieldValue","verifyValue","self","Enum","Value","clazz","Builder","calculateLength","calculate","encodeValue","prevOffset","valueFromString","valueToString","extensions","_fields","_fieldsById","_fieldsByName","MessagePrototype","rebuild","cloneRaw","binaryAsBase64","longsAsStrings","getName","object","forEach","v","Map","it","entries","done","keyElem","valueElem","$type","field","OneOf","var_args","repeated","map","required","$set","$add","keyOrObj","ikey","_oneofsByName","oneof","currentField","get","$get","ExtensionField","Name","setter","getter","noVerify","isNew","encodeDelimited","enc","encodeAB","encodeNB","encode64","encodeHex","toRaw","encodeJSON","JSON","stringify","decodeDelimited","decode64","decodeHex","decodeJSON","Service","Extension","fieldMissing","expectedGroupEndId","keyval","keytype","keyType","element","keyElement","FieldPrototype","skipRepeated","hasWirePresence","varintLen","contents","ni","msgbuf","extension","root","rpcImpl","ServicePrototype","RPCMethod","req","resolvedRequestType","resolvedResponseType","notABuffer","Method","requestName","responseName","requestStream","responseStream","propagateSyntax","resolved","files","importRoot","BuilderPrototype","isMessage","def","isMessageField","isEnum","isService","isExtend","namespace","defs","pop","subObj","mtd","valid","json","filename","file","fname","resetRoot","importFilename","$2","base","resolveAll","packed","lookup","arrayIterator","arr","idx","MapPrototype","keyValue","hadKey","entry","strKeys","cb","thisArg","valValue","has","loadProto","loadJson","protoFromString","loadProtoFile","protoFromFile","loadJsonFile"],"mappings":"AAAA;ACAAA,OAAOC,QAAUC,QAAQ,cAAcC,eAAuB,QAC1DC,QAAW,KACXC,OAAU,SACVC,SACIC,aAAgB,4BAEpBC,WAEQC,KAAQ,gBACRJ,OAAU,SACVK,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,YACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,WACRI,GAAM,EACNP,SACIQ,QAAW,gBAIfH,KAAQ,WACRC,KAAQ,YACRH,KAAQ,OACRI,GAAM,EACNP,SACIQ,QAAW,gBAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,aACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,gBACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,eACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,YACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,MAKdJ,KAAQ,cACRC,UACAL,OAAU,SACVG,WAEQC,KAAQ,cACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,OAKdJ,KAAQ,UACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,cACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,OAKdJ,KAAQ,gBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,aACRH,KAAQ,UACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,aACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,eACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,cACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,cACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,MACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,aACRH,KAAQ,cACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,cACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,MACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,KACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,WACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,YACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,OACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,SACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,iBACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,YACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,QACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,gBACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,gBACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,YACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,YACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,QACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,MACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,MACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,MACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,OACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,eACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,eACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,eACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,aACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,cACRI,GAAM,QAKdJ,KAAQ,eACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,aACRH,KAAQ,cACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,iBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,eACRH,KAAQ,gBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,eACRI,GAAM,OAKdJ,KAAQ,mBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,cACRH,KAAQ,YACRI,GAAM,OAKdJ,KAAQ,mBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,OAKdJ,KAAQ,wBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,OAKdJ,KAAQ,uBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,aACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,YACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,cACRI,GAAM,OAKdJ,KAAQ,iBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,aACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,OAKdJ,KAAQ,yBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,aACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,cACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,cACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,YACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,OACRI,GAAM,OAKdJ,KAAQ,qBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,UACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,MACRI,GAAM,OAKdJ,KAAQ,yBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,oBACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,YACRI,GAAM,OAKdJ,KAAQ,2BACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,sBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,gBACRI,GAAM,OAKdJ,KAAQ,iBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,OAKdJ,KAAQ,iBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,GACNP,SACIQ,QAAW,KAIfH,KAAQ,WACRC,KAAQ,SACRH,KAAQ,SACRI,GAAM,GACNP,SACIQ,QAAW,KAIfH,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,GACNP,SACIQ,QAAW,OAMvBL,KAAQ,oBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,OAKdJ,KAAQ,qBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,cACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,iBACRH,KAAQ,OACRI,GAAM,OAKdJ,KAAQ,mCACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,OAKdJ,KAAQ,sBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,YACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,cACRI,GAAM,OAKdJ,KAAQ,sBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,OAKdJ,KAAQ,mBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,OACRI,GAAM,OAKdJ,KAAQ,sBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,OACRI,GAAM,OAKdJ,KAAQ,yBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,OACRH,KAAQ,OACRI,GAAM,OAKdJ,KAAQ,yBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,OACRH,KAAQ,OACRI,GAAM,OAKdJ,KAAQ,yBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,OACRH,KAAQ,OACRI,GAAM,OAKdJ,KAAQ,sBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,OACRH,KAAQ,SACRI,GAAM,OAKdJ,KAAQ,uBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,KACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,OAKdJ,KAAQ,oBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,KACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,OAKdJ,KAAQ,qBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,KACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,OAKdJ,KAAQ,sBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,MACRI,GAAM,OAKdJ,KAAQ,sBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,MACRI,GAAM,OAKdJ,KAAQ,qBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,YACRH,KAAQ,aACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,YACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,OAKdJ,KAAQ,uBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,OACRI,GAAM,OAKdJ,KAAQ,qBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,OACRI,GAAM,OAKtBG,QAEQP,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,IAGNJ,KAAQ,QACRI,GAAM,IAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,OACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,OACRI,GAAM,MAGNJ,KAAQ,cACRI,GAAM,QAKdJ,KAAQ,kBACRJ,OAAU,SACVY,SAEQR,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,UACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,OAKdJ,KAAQ,oBACRJ,OAAU,SACVY,SAEQR,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,QAKdJ,KAAQ,eACRJ,OAAU,SACVY,SAEQR,KAAQ,uBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,MAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,qBACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,aACRI,GAAM,KAGNJ,KAAQ,WACRI,GAAM,OAKdJ,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,aACRI,GAAM,OAGNJ,KAAQ,eACRI,GAAM,OAGNJ,KAAQ,YACRI,GAAM,SAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,OAKdJ,KAAQ,oBACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,IAAO,IAGPJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,MAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,uBACRI,IAAO,IAGPJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,MAKdJ,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,MAKdJ,KAAQ,WACRJ,OAAU,SACVY,SAEQR,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,MAKdJ,KAAQ,eACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,oBACRI,GAAM,KAGNJ,KAAQ,aACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,WACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,QAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,UACRI,GAAM,KAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,kBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,MACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,QAKdJ,KAAQ,WACRJ,OAAU,SACVY,SAEQR,KAAQ,kBACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,MAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,MAKdJ,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,QAKdJ,KAAQ,cACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,kBACRI,GAAM,IAGNJ,KAAQ,kBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,kBACRI,GAAM,KAGNJ,KAAQ,kBACRI,GAAM,KAGNJ,KAAQ,oBACRI,GAAM,KAGNJ,KAAQ,wBACRI,GAAM,KAGNJ,KAAQ,yBACRI,GAAM,OAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,kBACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,MAKdJ,KAAQ,gBACRJ,OAAU,SACVY,SAEQR,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,sBACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,aACRI,GAAM,KAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,sBACRI,GAAM,KAGNJ,KAAQ,qBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,sBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,WACRI,GAAM,MAGNJ,KAAQ,aACRI,GAAM,MAGNJ,KAAQ,WACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,SACRI,GAAM,MAGNJ,KAAQ,SACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,SACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,gBACRI,GAAM,MAGNJ,KAAQ,SACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,sBACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,+BACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,2BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,kBACRI,GAAM,MAGNJ,KAAQ,yBACRI,GAAM,MAGNJ,KAAQ,kBACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,4BACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,4BACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,+BACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,+BACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,uBACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,6BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,iCACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,2BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,iCACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,MAGNJ,KAAQ,sBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,uBACRI,GAAM,MAGNJ,KAAQ,yBACRI,GAAM,MAGNJ,KAAQ,yBACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,uBACRI,GAAM,MAGNJ,KAAQ,uBACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,WACRI,GAAM,MAGNJ,KAAQ,iBACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,gBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,kBACRI,GAAM,MAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,4BACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,4BACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,gCACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,gCACRI,GAAM,OAGNJ,KAAQ,gCACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,4BACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,iCACRI,GAAM,OAGNJ,KAAQ,kCACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,oCACRI,GAAM,OAGNJ,KAAQ,oCACRI,GAAM,OAGNJ,KAAQ,mCACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,4BACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,WACRI,GAAM,OAGNJ,KAAQ,WACRI,GAAM,OAGNJ,KAAQ,WACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,cACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,qCACRI,GAAM,QAGNJ,KAAQ,qCACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,6BACRI,GAAM,QAGNJ,KAAQ,+BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,6BACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,+BACRI,GAAM,QAGNJ,KAAQ,+BACRI,GAAM,QAGNJ,KAAQ,mCACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,uCACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,sCACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,qCACRI,GAAM,QAGNJ,KAAQ,oCACRI,GAAM,QAGNJ,KAAQ,iCACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,+BACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,iBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,iBACRI,GAAM,QAGNJ,KAAQ,iBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,iBACRI,GAAM,QAGNJ,KAAQ,cACRI,GAAM,QAGNJ,KAAQ,cACRI,GAAM,QAGNJ,KAAQ,eACRI,GAAM,QAGNJ,KAAQ,cACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,iCACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,UAKdJ,KAAQ,cACRJ,OAAU,SACVY,SAEQR,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,MAKdJ,KAAQ,oBACRJ,OAAU,SACVY,SAEQR,KAAQ,2BACRI,GAAM,IAGNJ,KAAQ,4BACRI,GAAM,MAKdJ,KAAQ,iBACRJ,OAAU,SACVY,SAEQR,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,0BACRI,GAAM,MAKdJ,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,MAKdJ,KAAQ,WACRJ,OAAU,SACVY,SAEQR,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,MAKdJ,KAAQ,uBACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,oBACRI,GAAM,IAGNJ,KAAQ,oBACRI,GAAM,IAGNJ,KAAQ,qBACRI,GAAM,OAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,wBACRI,GAAM,IAGNJ,KAAQ,4BACRI,GAAM,IAGNJ,KAAQ,wBACRI,GAAM,IAGNJ,KAAQ,uBACRI,GAAM,IAGNJ,KAAQ,8BACRI,GAAM,IAGNJ,KAAQ,2BACRI,GAAM,IAGNJ,KAAQ,+BACRI,GAAM,MAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,eACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,gBACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,eACRI,GAAM,OAGNJ,KAAQ,gBACRI,GAAM,OAGNJ,KAAQ,cACRI,GAAM,OAGNJ,KAAQ,cACRI,GAAM,OAGNJ,KAAQ,eACRI,GAAM,OAGNJ,KAAQ,gBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,cACRI,GAAM,OAGNJ,KAAQ,gBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,eACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,+BACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,SAKdJ,KAAQ,eACRJ,OAAU,SACVY,SAEQR,KAAQ,oBACRI,GAAM,IAGNJ,KAAQ,iCACRI,GAAM,IAGNJ,KAAQ,iCACRI,GAAM,IAGNJ,KAAQ,gCACRI,GAAM,IAGNJ,KAAQ;+BACRI,GAAM,MAKtBK,aAAe,IAGvBF,QAEQP,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,MAKdJ,KAAQ,UACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,OAKtBK,aAAe,IAChBC;;AC5nHHnB,OAAOC,QAAUC,QAAQ,cAAcC,eAAuB,QAC1DC,QAAW,KACXC,OAAU,SACVC,SACIC,aAAgB,4BAEpBC,WAEQC,KAAQ,gBACRJ,OAAU,SACVK,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,YACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,WACRI,GAAM,EACNP,SACIQ,QAAW,gBAIfH,KAAQ,WACRC,KAAQ,YACRH,KAAQ,OACRI,GAAM,EACNP,SACIQ,QAAW,gBAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,aACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,gBACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,eACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,YACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,MAKdJ,KAAQ,cACRC,UACAL,OAAU,SACVG,WAEQC,KAAQ,OACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,cACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,OACRI,GAAM,MAKdJ,KAAQ,cACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,cACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,kBACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,OACRI,GAAM,MAKdJ,KAAQ,aACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,MAKdJ,KAAQ,cACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,eACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,MAKdJ,KAAQ,WACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,cACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,cACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,UACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,cACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,aACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,aACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,OAKtBG,QAEQP,KAAQ,kBACRJ,OAAU,SACVY,SAEQR,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,MAKdJ,KAAQ,cACRJ,OAAU,SACVY,SAEQR,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,MAKtBK,aAAe,IAGvBF,QAEQP,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,MAKdJ,KAAQ,UACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,OAKtBK,aAAe,IAChBC;;AC5YHnB,OAAOC,QAAUC,QAAQ,cAAcC,eAAuB,QAC1DC,QAAW,KACXC,OAAU,SACVC,SACIC,aAAgB,4BAEpBC,WAEQC,KAAQ,gBACRJ,OAAU,SACVK,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,YACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,WACRI,GAAM,EACNP,SACIQ,QAAW,gBAIfH,KAAQ,WACRC,KAAQ,YACRH,KAAQ,OACRI,GAAM,EACNP,SACIQ,QAAW,gBAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,aACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,gBACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,eACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,YACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,MAKdJ,KAAQ,cACRC,UACAL,OAAU,SACVG,WAEQC,KAAQ,cACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,OAKdJ,KAAQ,UACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,cACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,OAKtBK,aAAe,IAGvBF,QAEQP,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,MAKdJ,KAAQ,UACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,OAKtBK,aAAe,IAChBC;;ACnOHnB,OAAOC,QAAUC,QAAQ,cAAcC,eAAuB,QAC1DC,QAAW,KACXC,OAAU,SACVC,SACIC,aAAgB,4BAEpBC,WAEQC,KAAQ,gBACRJ,OAAU,SACVK,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,YACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,WACRI,GAAM,EACNP,SACIQ,QAAW,gBAIfH,KAAQ,WACRC,KAAQ,YACRH,KAAQ,OACRI,GAAM,EACNP,SACIQ,QAAW,gBAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,aACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,gBACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,eACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,YACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,MAKdJ,KAAQ,cACRC,UACAL,OAAU,SACVG,WAEQC,KAAQ,YACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,EACNP,SACIc,oBAAqB,MAIzBT,KAAQ,WACRC,KAAQ,WACRH,KAAQ,OACRI,GAAM,MAKdJ,KAAQ,WACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,YACRI,GAAM,EACNP,SACIc,oBAAqB,MAIzBT,KAAQ,WACRC,KAAQ,SACRH,KAAQ,mBACRI,GAAM,EACNP,SACIc,oBAAqB,MAIzBT,KAAQ,WACRC,KAAQ,YACRH,KAAQ,YACRI,GAAM,EACNP,SACIe,qBAAsB,MAI1BV,KAAQ,WACRC,KAAQ,WACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,EACNP,SACIc,oBAAqB,MAIzBT,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,EACNP,SACIc,oBAAqB,QAMzCF,aAAe,IAGvBF,QAEQP,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,MAKdJ,KAAQ,UACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,OAKtBK,aAAe,IAChBC;;ACzOHnB,OAAOC,QAAUC,QAAQ,cAAcC,eAAuB,QAC1DC,QAAW,KACXC,OAAU,SACVC,SACIC,aAAgB,4BAEpBC,WAEQC,KAAQ,gBACRJ,OAAU,SACVK,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,YACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,WACRI,GAAM,EACNP,SACIQ,QAAW,gBAIfH,KAAQ,WACRC,KAAQ,YACRH,KAAQ,OACRI,GAAM,EACNP,SACIQ,QAAW,gBAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,aACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,gBACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,eACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,YACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,MAKdJ,KAAQ,cACRC,UACAL,OAAU,SACVG,WAEQC,KAAQ,aACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,SACRI,GAAM,MAKdJ,KAAQ,eACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,aACRH,KAAQ,QACRI,GAAM,EACNP,SACIe,qBAAsB,QAM1CH,aAAe,IAGvBF,QAEQP,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,MAKdJ,KAAQ,UACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,OAKtBK,aAAe,IAChBC;;ACxMHnB,OAAOC,QAAUC,QAAQ,cAAcC,eAAuB,QAC1DC,QAAW,KACXC,OAAU,SACVC,SACIC,aAAgB,4BAEpBC,WAEQC,KAAQ,gBACRJ,OAAU,SACVK,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,YACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,WACRI,GAAM,EACNP,SACIQ,QAAW,gBAIfH,KAAQ,WACRC,KAAQ,YACRH,KAAQ,OACRI,GAAM,EACNP,SACIQ,QAAW,gBAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,aACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,gBACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,eACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,YACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,MAKdJ,KAAQ,cACRC,UACAL,OAAU,SACVG,WAEQC,KAAQ,aACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,YACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,OAKtBG,QAEQP,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,IAGNJ,KAAQ,QACRI,GAAM,IAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,OACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,OACRI,GAAM,MAGNJ,KAAQ,cACRI,GAAM,QAKdJ,KAAQ,kBACRJ,OAAU,SACVY,SAEQR,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,UACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,OAKdJ,KAAQ,oBACRJ,OAAU,SACVY,SAEQR,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,QAKdJ,KAAQ,eACRJ,OAAU,SACVY,SAEQR,KAAQ,uBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,MAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,qBACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,aACRI,GAAM,KAGNJ,KAAQ,WACRI,GAAM,OAKdJ,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,aACRI,GAAM,OAGNJ,KAAQ,eACRI,GAAM,OAGNJ,KAAQ,YACRI,GAAM,SAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,OAKdJ,KAAQ,oBACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,IAAO,IAGPJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,MAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,uBACRI,IAAO,IAGPJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,MAKdJ,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,MAKdJ,KAAQ,WACRJ,OAAU,SACVY,SAEQR,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,MAKdJ,KAAQ,eACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,oBACRI,GAAM,KAGNJ,KAAQ,aACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,WACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,QAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,UACRI,GAAM,KAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,kBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,MACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,QAKdJ,KAAQ,WACRJ,OAAU,SACVY,SAEQR,KAAQ,kBACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,MAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,MAKdJ,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,QAKdJ,KAAQ,cACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,kBACRI,GAAM,IAGNJ,KAAQ,kBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,kBACRI,GAAM,KAGNJ,KAAQ,kBACRI,GAAM,KAGNJ,KAAQ,oBACRI,GAAM,KAGNJ,KAAQ,wBACRI,GAAM,KAGNJ,KAAQ,yBACRI,GAAM,OAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,kBACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,MAKdJ,KAAQ,gBACRJ,OAAU,SACVY,SAEQR,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,sBACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,aACRI,GAAM,KAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,sBACRI,GAAM,KAGNJ,KAAQ,qBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,sBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,WACRI,GAAM,MAGNJ,KAAQ,aACRI,GAAM,MAGNJ,KAAQ,WACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,SACRI,GAAM,MAGNJ,KAAQ,SACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,SACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,gBACRI,GAAM,MAGNJ,KAAQ,SACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,sBACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,+BACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,2BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,kBACRI,GAAM,MAGNJ,KAAQ,yBACRI,GAAM,MAGNJ,KAAQ,kBACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,4BACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,4BACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,+BACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,+BACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,uBACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,6BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,iCACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,2BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,iCACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,MAGNJ,KAAQ,sBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,uBACRI,GAAM,MAGNJ,KAAQ,yBACRI,GAAM,MAGNJ,KAAQ,yBACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,uBACRI,GAAM,MAGNJ,KAAQ,uBACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,WACRI,GAAM,MAGNJ,KAAQ,iBACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,gBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,kBACRI,GAAM,MAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,4BACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,4BACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,gCACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,gCACRI,GAAM,OAGNJ,KAAQ,gCACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,4BACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,iCACRI,GAAM,OAGNJ,KAAQ,kCACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,oCACRI,GAAM,OAGNJ,KAAQ,oCACRI,GAAM,OAGNJ,KAAQ,mCACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,4BACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,WACRI,GAAM,OAGNJ,KAAQ,WACRI,GAAM,OAGNJ,KAAQ,WACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,cACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,qCACRI,GAAM,QAGNJ,KAAQ,qCACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,6BACRI,GAAM,QAGNJ,KAAQ,+BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,6BACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,+BACRI,GAAM,QAGNJ,KAAQ,+BACRI,GAAM,QAGNJ,KAAQ,mCACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,uCACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,sCACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,qCACRI,GAAM,QAGNJ,KAAQ,oCACRI,GAAM,QAGNJ,KAAQ,iCACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,+BACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,iBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,iBACRI,GAAM,QAGNJ,KAAQ,iBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,iBACRI,GAAM,QAGNJ,KAAQ,cACRI,GAAM,QAGNJ,KAAQ,cACRI,GAAM,QAGNJ,KAAQ,eACRI,GAAM,QAGNJ,KAAQ,cACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,iCACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,UAKdJ,KAAQ,cACRJ,OAAU,SACVY,SAEQR,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,MAKdJ,KAAQ,oBACRJ,OAAU,SACVY,SAEQR,KAAQ,2BACRI,GAAM,IAGNJ,KAAQ,4BACRI,GAAM,MAKdJ,KAAQ,iBACRJ,OAAU,SACVY,SAEQR,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,0BACRI,GAAM,MAKdJ,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,MAKdJ,KAAQ,WACRJ,OAAU,SACVY,SAEQR,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,MAKdJ,KAAQ,uBACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,oBACRI,GAAM,IAGNJ,KAAQ,oBACRI,GAAM,IAGNJ,KAAQ,qBACRI,GAAM,OAKtBK,aAAe,IAGvBF,QAEQP,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,MAKdJ,KAAQ,UACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,OAKtBK,aAAe,IAChBC;;AC5wEHnB,OAAOC,QAAUC,QAAQ,cAAcC,eAAuB,QAC1DC,QAAW,KACXC,OAAU,SACVC,SACIC,aAAgB,4BAEpBC,WAEQC,KAAQ,gBACRJ,OAAU,SACVK,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,YACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,WACRI,GAAM,EACNP,SACIQ,QAAW,gBAIfH,KAAQ,WACRC,KAAQ,YACRH,KAAQ,OACRI,GAAM,EACNP,SACIQ,QAAW,gBAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,aACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,gBACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,eACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,YACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,MAKdJ,KAAQ,cACRC,UACAL,OAAU,SACVG,WAEQC,KAAQ,WACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,KACRI,GAAM,MAKdJ,KAAQ,sBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,cACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,UACRI,GAAM,EACNP,SACIQ,QAAW,KAIfH,KAAQ,WACRC,KAAQ,UACRH,KAAQ,WACRI,GAAM,EACNP,SACIQ,QAAW,KAIfH,KAAQ,WACRC,KAAQ,aACRH,KAAQ,MACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,MACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,cACRI,GAAM,MAKdJ,KAAQ,aACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,aACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,eACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,KACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,WACRI,GAAM,MAKdJ,KAAQ,UACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,WACRH,KAAQ,aACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,aACRH,KAAQ,SACRI,GAAM,MAKdJ,KAAQ,MACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,YACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,kBACRH,KAAQ,MACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,QACRI,GAAM,OAKdJ,KAAQ,SACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,YACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,UACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,UACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,OAKdJ,KAAQ,QACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,YACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,oBACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,UACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,UACRI,GAAM,OAKdJ,KAAQ,WACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,UACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,UACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,YACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,eACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,oBACRI,GAAM,MAKdJ,KAAQ,SACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,UACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,UACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,MAKdJ,KAAQ,YACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,UACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,cACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,aACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,eACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,WACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,WACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,MACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,YACRI,GAAM,OAKdJ,KAAQ,OACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,YACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,aACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,aACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,cACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,YACRI,GAAM,OAKdJ,KAAQ,SACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,aACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,YACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,MACRH,KAAQ,MACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,MAKdJ,KAAQ,QACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,SACRI,GAAM,MAKdJ,KAAQ,qBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,WACRH,KAAQ,kBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,cACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,cACRI,GAAM,MAKdJ,KAAQ,SACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,UACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,UACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,MAKdJ,KAAQ,OACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,UACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,UACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,YACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,MACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,QACRI,GAAM,OAKdJ,KAAQ,aACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,YACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,OAKdJ,KAAQ,cACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,OAKdJ,KAAQ,UACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,cACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,OAKdJ,KAAQ,gBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,aACRH,KAAQ,UACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,aACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,eACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,cACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,cACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,MACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,aACRH,KAAQ,cACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,cACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,MACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,KACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,WACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,YACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,OACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,SACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,iBACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,YACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,QACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,gBACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,gBACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,YACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,YACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,QACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,MACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,MACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,MACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,OACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,eACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,eACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,eACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,aACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,cACRI,GAAM,QAKdJ,KAAQ,eACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,aACRH,KAAQ,cACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,iBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,eACRH,KAAQ,gBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,eACRI,GAAM,OAKdJ,KAAQ,kBACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,OACRI,GAAM,OAKdJ,KAAQ,sBACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,OACRH,KAAQ,QACRI,GAAM,OAKdJ,KAAQ,uBACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,OACRH,KAAQ,QACRI,GAAM,OAKdJ,KAAQ,eACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,OAKdJ,KAAQ,gBACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,gBACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,OAKdJ,KAAQ,YACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,OAKdJ,KAAQ,eACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,UACRH,KAAQ,UACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,aACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,OAKdJ,KAAQ,mBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,cACRH,KAAQ,YACRI,GAAM,OAKdJ,KAAQ,mBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,OAKdJ,KAAQ,wBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,OAKdJ,KAAQ,uBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,aACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,YACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,cACRI,GAAM,OAKdJ,KAAQ,iBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,aACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,OAKdJ,KAAQ,yBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,aACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,cACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,cACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,YACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,OACRI,GAAM,OAKdJ,KAAQ,qBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,UACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,MACRI,GAAM,OAKdJ,KAAQ,yBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,oBACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,YACRI,GAAM,OAKdJ,KAAQ,2BACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,sBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,gBACRI,GAAM,OAKdJ,KAAQ,iBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,OAKdJ,KAAQ,iBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,GACNP,SACIQ,QAAW,KAIfH,KAAQ,WACRC,KAAQ,SACRH,KAAQ,SACRI,GAAM,GACNP,SACIQ,QAAW,KAIfH,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,GACNP,SACIQ,QAAW,OAMvBL,KAAQ,oBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,OAKdJ,KAAQ,qBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,cACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,iBACRH,KAAQ,OACRI,GAAM,OAKdJ,KAAQ,mCACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,OAKdJ,KAAQ,sBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,YACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,cACRI,GAAM,OAKdJ,KAAQ,sBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,OAKdJ,KAAQ,mBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,OACRI,GAAM,OAKdJ,KAAQ,sBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,OACRI,GAAM,OAKdJ,KAAQ,yBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,OACRH,KAAQ,OACRI,GAAM,OAKdJ,KAAQ,yBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,OACRH,KAAQ,OACRI,GAAM,OAKdJ,KAAQ,yBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,OACRH,KAAQ,OACRI,GAAM,OAKdJ,KAAQ,sBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,OACRH,KAAQ,SACRI,GAAM,OAKdJ,KAAQ,uBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,KACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,OAKdJ,KAAQ,oBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,KACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,OAKdJ,KAAQ,qBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,KACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,OAKdJ,KAAQ,sBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,MACRI,GAAM,OAKdJ,KAAQ,sBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,MACRI,GAAM,OAKdJ,KAAQ,qBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,YACRH,KAAQ,aACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,YACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,OAKdJ,KAAQ,uBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,OACRI,GAAM,OAKdJ,KAAQ,qBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,OACRI,GAAM,OAKdJ,KAAQ,QACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,YACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,SACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,SACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,UACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,UACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,UACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,WACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,WACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,IACNP,SACIc,oBAAqB,MAIzBT,KAAQ,WACRC,KAAQ,OACRH,KAAQ,SACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,cACRH,KAAQ,QACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,OACRI,GAAM,QAKdJ,KAAQ,eACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,cACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,gBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,eACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,MACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,OAKdJ,KAAQ,gBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,WACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,SACRI,GAAM,GACNP,SACIQ,QAAW,wBACXM,oBAAqB,OAIzBT,KAAQ,WACRC,KAAQ,QACRH,KAAQ,MACRI,GAAM,GACNP,SACIe,qBAAsB,QAMlCZ,KAAQ,OACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,cACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,OACRI,GAAM,MAKdJ,KAAQ,cACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,cACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,kBACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,OACRI,GAAM,MAKdJ,KAAQ,aACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,MAKdJ,KAAQ,cACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,eACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,MAKdJ,KAAQ,WACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,cACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,cACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,UACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,cACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,aACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,aACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,OAKdJ,KAAQ,WACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,OAKdJ,KAAQ,UACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,gBACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,cACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,MACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,YACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,cACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,iBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,cACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,YACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,gBACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,eACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,YACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,iBACRH,KAAQ,OACRI,GAAM,IACNP,SACIQ,QAAW,cAIfH,KAAQ,WACRC,KAAQ,QACRH,KAAQ,WACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,WACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,SACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,aACRH,KAAQ,QACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,YACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,aACRI,GAAM,QAKdJ,KAAQ,cACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,KACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,YACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,cACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,SACRI,GAAM,OAKdJ,KAAQ,sBACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,UACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,iBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,kBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,iBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,iBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,iBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,iBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,kBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,OAKdJ,KAAQ,sBACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,cACRH,KAAQ,YACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,qBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,qBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,gBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,mBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,eACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,OAKdJ,KAAQ,sBACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,YACRI,GAAM,MAKdJ,KAAQ,oBACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,MAKdJ,KAAQ,qBACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,QACRI,GAAM,MAKdJ,KAAQ,iBACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,MAKdJ,KAAQ,iBACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,MAKdJ,KAAQ,iBACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,MAKdJ,KAAQ,mBACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,MAKdJ,KAAQ,kBACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,uBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,sBACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,YACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,oBACRH,KAAQ,kBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,mBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,eACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,qBACRH,KAAQ,eACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,mBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,sBACRH,KAAQ,oBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,wBACRH,KAAQ,kBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,0BACRH,KAAQ,oBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,oBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,oBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,uBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,uBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,wBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,0BACRI,GAAM;GAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,eACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,sBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,sBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,2BACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,uBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,uBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,cACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,kBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,cACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,mBACRH,KAAQ,aACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,uBACRH,KAAQ,eACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,sBACRH,KAAQ,gBACRI,GAAM,OAKdJ,KAAQ,kBACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,eACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,kBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,wBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,oBACRH,KAAQ,MACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,oBACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,sBACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,eACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,eACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,cACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,qBACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,iBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,qBACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,UACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,oBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,wBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,cACRH,KAAQ,YACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,aACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,aACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,KACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,wBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,iBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,iBACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,cACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,aACRH,KAAQ,cACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,wBACRH,KAAQ,cACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,WACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,gBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,YACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,kBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,UACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,aACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,cACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,gBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,oBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,kBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,qBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,2BACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,gBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,cACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,aACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,eACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,mBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,YACRI,GAAM,OAKdJ,KAAQ,cACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,OACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,aACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,cACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,cACRH,KAAQ,aACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,iBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,kBACRI,GAAM,OAKdJ,KAAQ,gBACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,qBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,uBACRH,KAAQ,aACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,gBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,gBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,YACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,kBACRH,KAAQ,YACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,cACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,mBACRH,KAAQ,aACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,cACRI,GAAM,OAKdJ,KAAQ,kBACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,iBACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,qBACRH,KAAQ,eACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,wBACRH,KAAQ,sBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,iBACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,mBACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,oBACRH,KAAQ,gBACRI,GAAM,MAKdJ,KAAQ,uBACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,cACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,cACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,kBACRH,KAAQ,YACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,mBACRH,KAAQ,aACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,wBACRH,KAAQ,YACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,OACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,cACRH,KAAQ,YACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,cACRH,KAAQ,aACRI,GAAM,QAKdJ,KAAQ,uBACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,MAKdJ,KAAQ,cACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,OACRH,KAAQ,wBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,qBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,sBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,uBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,uBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,wBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,2BACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,wBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,uBACRI,GAAM,MAKdJ,KAAQ,YACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,gBACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,MACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,UACRI,GAAM,EACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,gBACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,eACRH,KAAQ,UACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,gBACRI,GAAM,GACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,QACRH,KAAQ,iBACRI,GAAM,GACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,gBACRH,KAAQ,gBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,YACRH,KAAQ,aACRI,GAAM,GACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,eACRH,KAAQ,gBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,SACRI,GAAM,GACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,QACRH,KAAQ,aACRI,GAAM,GACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,QACRH,KAAQ,mBACRI,GAAM,GACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,QACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,UACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,iBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,uBACRH,KAAQ,eACRI,GAAM,GACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,SACRH,KAAQ,cACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,gBACRH,KAAQ,cACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,aACRH,KAAQ,aACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,aACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,eACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,eACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,WACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,cACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,GACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,UACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,OACRI,GAAM,GACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,OACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,WACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,GACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,eACRH,KAAQ,WACRI,GAAM,GACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,sBACRH,KAAQ,uBACRI,GAAM,GACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,YACRH,KAAQ,OACRI,GAAM,IACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,MACRH,KAAQ,MACRI,GAAM,EACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,SACRH,KAAQ,SACRI,GAAM,EACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,IACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,SACRH,KAAQ,SACRI,GAAM,IACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,OACRH,KAAQ,OACRI,GAAM,IACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,IACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,SACRH,KAAQ,SACRI,GAAM,IACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,WACRH,KAAQ,WACRI,GAAM,IACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,qBACRH,KAAQ,UACRI,GAAM,IACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,SACRH,KAAQ,SACRI,GAAM,IACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,OACRH,KAAQ,OACRI,GAAM,IACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,cACRH,KAAQ,MACRI,GAAM,IACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,WACRH,KAAQ,WACRI,GAAM,IACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,IACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,aACRH,KAAQ,cACRI,GAAM,GACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,kBACRH,KAAQ,YACRI,GAAM,IACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,sBACRH,KAAQ,gBACRI,GAAM,IACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,uBACRH,KAAQ,iBACRI,GAAM,IACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,eACRH,KAAQ,SACRI,GAAM,IACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,gBACRH,KAAQ,iBACRI,GAAM,IACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,mBACRH,KAAQ,eACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,mBACRH,KAAQ,eACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,wBACRH,KAAQ,oBACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,uBACRH,KAAQ,mBACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,iBACRH,KAAQ,aACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,yBACRH,KAAQ,qBACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,qBACRH,KAAQ,iBACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,yBACRH,KAAQ,qBACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,2BACRH,KAAQ,uBACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,iBACRH,KAAQ,aACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,iBACRH,KAAQ,aACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,oBACRH,KAAQ,gBACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,qBACRH,KAAQ,iBACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,mCACRH,KAAQ,+BACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,sBACRH,KAAQ,iBACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,sBACRH,KAAQ,kBACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,mBACRH,KAAQ,eACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,sBACRH,KAAQ,kBACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,yBACRH,KAAQ,qBACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,yBACRH,KAAQ,qBACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,yBACRH,KAAQ,qBACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,sBACRH,KAAQ,kBACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,uBACRH,KAAQ,mBACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,oBACRH,KAAQ,gBACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,qBACRH,KAAQ,iBACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,sBACRH,KAAQ,kBACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,sBACRH,KAAQ,kBACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,qBACRH,KAAQ,iBACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,uBACRH,KAAQ,mBACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,qBACRH,KAAQ,iBACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,kBACRH,KAAQ,oBACRI,GAAM,IACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,kBACRH,KAAQ,oBACRI,GAAM,IACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,cACRH,KAAQ,gBACRI,GAAM,IACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,gBACRH,KAAQ,kBACRI,GAAM,IACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,kBACRH,KAAQ,oBACRI,GAAM,IACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,cACRH,KAAQ,gBACRI,GAAM,IACNP,SACIgB,gBAAiB,eAIrBX,KAAQ,WACRC,KAAQ,uBACRH,KAAQ,qBACRI,GAAM,IACNP,SACIgB,gBAAiB,iBAMrCN,QAEQP,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,IAGNJ,KAAQ,QACRI,GAAM,IAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,OACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,OACRI,GAAM,MAGNJ,KAAQ,cACRI,GAAM,QAKdJ,KAAQ,kBACRJ,OAAU,SACVY,SAEQR,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,UACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,OAKdJ,KAAQ,oBACRJ,OAAU,SACVY,SAEQR,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,QAKdJ,KAAQ,eACRJ,OAAU,SACVY,SAEQR,KAAQ,uBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,MAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,qBACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,aACRI,GAAM,KAGNJ,KAAQ,WACRI,GAAM,OAKdJ,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,aACRI,GAAM,OAGNJ,KAAQ,eACRI,GAAM,OAGNJ,KAAQ,YACRI,GAAM,SAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,OAKdJ,KAAQ,oBACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,IAAO,IAGPJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,MAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,uBACRI,IAAO,IAGPJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,MAKdJ,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,MAKdJ,KAAQ,WACRJ,OAAU,SACVY,SAEQR,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,MAKdJ,KAAQ,eACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,oBACRI,GAAM,KAGNJ,KAAQ,aACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,WACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,QAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,UACRI,GAAM,KAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,kBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,MACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,QAKdJ,KAAQ,WACRJ,OAAU,SACVY,SAEQR,KAAQ,kBACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,MAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,MAKdJ,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,QAKdJ,KAAQ,cACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,kBACRI,GAAM,IAGNJ,KAAQ,kBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,kBACRI,GAAM,KAGNJ,KAAQ,kBACRI,GAAM,KAGNJ,KAAQ,oBACRI,GAAM,KAGNJ,KAAQ,wBACRI,GAAM,KAGNJ,KAAQ,yBACRI,GAAM,OAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,kBACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,MAKdJ,KAAQ,gBACRJ,OAAU,SACVY,SAEQR,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,sBACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,aACRI,GAAM,KAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,sBACRI,GAAM,KAGNJ,KAAQ,qBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,sBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,WACRI,GAAM,MAGNJ,KAAQ,aACRI,GAAM,MAGNJ,KAAQ,WACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,SACRI,GAAM,MAGNJ,KAAQ,SACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,SACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,gBACRI,GAAM,MAGNJ,KAAQ,SACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,sBACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,+BACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,2BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,kBACRI,GAAM,MAGNJ,KAAQ,yBACRI,GAAM,MAGNJ,KAAQ,kBACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,4BACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,4BACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,+BACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,+BACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,uBACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,6BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,iCACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,2BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,iCACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,MAGNJ,KAAQ,sBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,uBACRI,GAAM,MAGNJ,KAAQ,yBACRI,GAAM,MAGNJ,KAAQ,yBACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,uBACRI,GAAM,MAGNJ,KAAQ,uBACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,WACRI,GAAM,MAGNJ,KAAQ,iBACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,gBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,kBACRI,GAAM,MAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,4BACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,4BACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,gCACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,gCACRI,GAAM,OAGNJ,KAAQ,gCACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,4BACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,iCACRI,GAAM,OAGNJ,KAAQ,kCACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,oCACRI,GAAM,OAGNJ,KAAQ,oCACRI,GAAM,OAGNJ,KAAQ,mCACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,4BACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,WACRI,GAAM,OAGNJ,KAAQ,WACRI,GAAM,OAGNJ,KAAQ,WACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,cACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,qCACRI,GAAM,QAGNJ,KAAQ,qCACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,6BACRI,GAAM,QAGNJ,KAAQ,+BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,6BACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,+BACRI,GAAM,QAGNJ,KAAQ,+BACRI,GAAM,QAGNJ,KAAQ,mCACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,uCACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,sCACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,qCACRI,GAAM,QAGNJ,KAAQ,oCACRI,GAAM,QAGNJ,KAAQ,iCACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,+BACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,iBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,iBACRI,GAAM,QAGNJ,KAAQ,iBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,iBACRI,GAAM,QAGNJ,KAAQ,cACRI,GAAM,QAGNJ,KAAQ,cACRI,GAAM,QAGNJ,KAAQ,eACRI,GAAM,QAGNJ,KAAQ,cACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,iCACRI,GAAM;WAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,UAKdJ,KAAQ,cACRJ,OAAU,SACVY,SAEQR,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,MAKdJ,KAAQ,oBACRJ,OAAU,SACVY,SAEQR,KAAQ,2BACRI,GAAM,IAGNJ,KAAQ,4BACRI,GAAM,MAKdJ,KAAQ,iBACRJ,OAAU,SACVY,SAEQR,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,0BACRI,GAAM,MAKdJ,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,MAKdJ,KAAQ,WACRJ,OAAU,SACVY,SAEQR,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,MAKdJ,KAAQ,uBACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,oBACRI,GAAM,IAGNJ,KAAQ,oBACRI,GAAM,IAGNJ,KAAQ,qBACRI,GAAM,OAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,wBACRI,GAAM,IAGNJ,KAAQ,4BACRI,GAAM,IAGNJ,KAAQ,wBACRI,GAAM,IAGNJ,KAAQ,uBACRI,GAAM,IAGNJ,KAAQ,8BACRI,GAAM,IAGNJ,KAAQ,2BACRI,GAAM,IAGNJ,KAAQ,+BACRI,GAAM,MAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,eACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,gBACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,eACRI,GAAM,OAGNJ,KAAQ,gBACRI,GAAM,OAGNJ,KAAQ,cACRI,GAAM,OAGNJ,KAAQ,cACRI,GAAM,OAGNJ,KAAQ,eACRI,GAAM,OAGNJ,KAAQ,gBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,cACRI,GAAM,OAGNJ,KAAQ,gBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,eACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,+BACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,SAKdJ,KAAQ,eACRJ,OAAU,SACVY,SAEQR,KAAQ,oBACRI,GAAM,IAGNJ,KAAQ,iCACRI,GAAM,IAGNJ,KAAQ,iCACRI,GAAM,IAGNJ,KAAQ,gCACRI,GAAM,IAGNJ,KAAQ,0BACRI,GAAM,MAKdJ,KAAQ,kBACRJ,OAAU,SACVY,SAEQR,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,MAKdJ,KAAQ,cACRJ,OAAU,SACVY,SAEQR,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,MAKdJ,KAAQ,iBACRJ,OAAU,SACVY,SAEQR,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,MAKdJ,KAAQ,gBACRJ,OAAU,SACVY,SAEQR,KAAQ,oBACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,uBACRI,GAAM,IAGNJ,KAAQ,oBACRI,GAAM,IAGNJ,KAAQ,oBACRI,GAAM,IAGNJ,KAAQ,qBACRI,GAAM,IAGNJ,KAAQ,kBACRI,GAAM,IAGNJ,KAAQ,uBACRI,GAAM,KAGNJ,KAAQ,mBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,wBACRI,GAAM,KAGNJ,KAAQ,WACRI,GAAM,KAGNJ,KAAQ,aACRI,GAAM,KAGNJ,KAAQ,aACRI,GAAM,KAGNJ,KAAQ,qBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,mBACRI,GAAM,KAGNJ,KAAQ,oBACRI,GAAM,KAGNJ,KAAQ,mBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,OAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,MAKdJ,KAAQ,uBACRJ,OAAU,SACVY,SAEQR,KAAQ,sBACRI,GAAM,IAGNJ,KAAQ,qBACRI,GAAM,IAGNJ,KAAQ,mCACRI,GAAM,IAGNJ,KAAQ,yCACRI,GAAM,IAGNJ,KAAQ,+BACRI,GAAM,IAGNJ,KAAQ,0CACRI,GAAM,IAGNJ,KAAQ,kCACRI,GAAM,IAGNJ,KAAQ,uCACRI,GAAM,IAGNJ,KAAQ,6CACRI,GAAM,OAKdJ,KAAQ,qBACRJ,OAAU,SACVY,SAEQR,KAAQ,uBACRI,GAAM,IAGNJ,KAAQ,0BACRI,GAAM,IAGNJ,KAAQ,yBACRI,GAAM,IAGNJ,KAAQ,0BACRI,GAAM,MAKdJ,KAAQ,wBACRJ,OAAU,SACVY,SAEQR,KAAQ,qBACRI,GAAM,IAGNJ,KAAQ,uBACRI,GAAM,IAGNJ,KAAQ,iCACRI,GAAM,IAGNJ,KAAQ,0BACRI,GAAM,IAGNJ,KAAQ,gCACRI,GAAM,IAGNJ,KAAQ,wBACRI,GAAM,MAKdJ,KAAQ,oBACRJ,OAAU,SACVY,SAEQR,KAAQ,sBACRI,GAAM,IAGNJ,KAAQ,0BACRI,GAAM,IAGNJ,KAAQ,0BACRI,GAAM,IAGNJ,KAAQ,kBACRI,GAAM,MAKdJ,KAAQ,wBACRJ,OAAU,SACVY,SAEQR,KAAQ,qBACRI,GAAM,IAGNJ,KAAQ,sBACRI,GAAM,IAGNJ,KAAQ,uBACRI,GAAM,MAKdJ,KAAQ,oBACRJ,OAAU,SACVY,SAEQR,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,MAKdJ,KAAQ,qBACRJ,OAAU,SACVY,SAEQR,KAAQ,oBACRI,GAAM,IAGNJ,KAAQ,kBACRI,GAAM,IAGNJ,KAAQ,kBACRI,GAAM,MAKdJ,KAAQ,sBACRJ,OAAU,SACVY,SAEQR,KAAQ,wBACRI,GAAM,IAGNJ,KAAQ,uBACRI,GAAM,IAGNJ,KAAQ,qBACRI,GAAM,MAKdJ,KAAQ,mBACRJ,OAAU,SACVY,SAEQR,KAAQ,oBACRI,GAAM,IAGNJ,KAAQ,oBACRI,GAAM,MAKdJ,KAAQ,kBACRJ,OAAU,SACVY,SAEQR,KAAQ,uBACRI,GAAM,IAGNJ,KAAQ,qBACRI,GAAM,IAGNJ,KAAQ,oBACRI,GAAM,MAKdJ,KAAQ,mBACRJ,OAAU,SACVY,SAEQR,KAAQ,uBACRI,GAAM,IAGNJ,KAAQ,6BACRI,GAAM,IAGNJ,KAAQ,qBACRI,GAAM,IAGNJ,KAAQ,oBACRI,GAAM,MAKdJ,KAAQ,cACRJ,OAAU,SACVY,SAEQR,KAAQ,kBACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,MAKdJ,KAAQ,wBACRJ,OAAU,SACVY,SAEQR,KAAQ,6BACRI,GAAM,IAGNJ,KAAQ,4BACRI,GAAM,MAKdJ,KAAQ,0BACRJ,OAAU,SACVY,SAEQR,KAAQ,6BACRI,GAAM,IAGNJ,KAAQ,gCACRI,GAAM,MAKtBK,aAAe,IAGvBF,QAEQP,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,MAKdJ,KAAQ,UACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,OAKtBK,aAAe,IAChBC;;ACvxPHnB,OAAOC,QAAUC,QAAQ,cAAcC,eAAuB,QAC1DC,QAAW,KACXC,OAAU,SACVC,SACIC,aAAgB,4BAEpBC,WAEQC,KAAQ,gBACRJ,OAAU,SACVK,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,YACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,WACRI,GAAM,EACNP,SACIQ,QAAW,gBAIfH,KAAQ,WACRC,KAAQ,YACRH,KAAQ,OACRI,GAAM,EACNP,SACIQ,QAAW,gBAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,aACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,gBACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,eACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,YACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,MAKdJ,KAAQ,cACRC,UACAL,OAAU,SACVG,WAEQC,KAAQ,cACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,OAKdJ,KAAQ,UACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,cACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,OAKdJ,KAAQ,gBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,aACRH,KAAQ,UACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,aACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,eACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,cACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,cACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,MACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,aACRH,KAAQ,cACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,cACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,MACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,KACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,WACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,YACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,OACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,SACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,iBACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,YACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,QACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,gBACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,gBACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,YACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,YACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,QACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,MACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,MACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,MACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,OACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,eACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,eACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,eACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,aACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,cACRI,GAAM,QAKdJ,KAAQ,eACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,aACRH,KAAQ,cACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,iBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,eACRH,KAAQ,gBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,eACRI,GAAM,OAKtBG,QAEQP,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,wBACRI,GAAM,IAGNJ,KAAQ,4BACRI,GAAM,IAGNJ,KAAQ,wBACRI,GAAM,IAGNJ,KAAQ,uBACRI,GAAM,IAGNJ,KAAQ,8BACRI,GAAM,IAGNJ,KAAQ,2BACRI,GAAM,IAGNJ,KAAQ,+BACRI,GAAM,MAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,eACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,gBACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,eACRI,GAAM,OAGNJ,KAAQ,gBACRI,GAAM,OAGNJ,KAAQ,cACRI,GAAM,OAGNJ,KAAQ,cACRI,GAAM,OAGNJ,KAAQ,eACRI,GAAM,OAGNJ,KAAQ,gBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,cACRI,GAAM,OAGNJ,KAAQ,gBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,eACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,+BACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,SAKdJ,KAAQ,eACRJ,OAAU,SACVY,SAEQR,KAAQ,oBACRI,GAAM,IAGNJ,KAAQ,iCACRI,GAAM,IAGNJ,KAAQ,iCACRI,GAAM,IAGNJ,KAAQ,gCACRI,GAAM,IAGNJ,KAAQ,0BACRI,GAAM,MAKtBK,aAAe,IAGvBF,QAEQP,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,MAKdJ,KAAQ,UACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,OAKtBK,aAAe,IAChBC;;AC7zBHnB,OAAOC,QAAUC,QAAQ,cAAcC,eAAuB,QAC1DC,QAAW,KACXC,OAAU,SACVC,SACIC,aAAgB,4BAEpBC,WAEQC,KAAQ,gBACRJ,OAAU,SACVK,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,YACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,WACRI,GAAM,EACNP,SACIQ,QAAW,gBAIfH,KAAQ,WACRC,KAAQ,YACRH,KAAQ,OACRI,GAAM,EACNP,SACIQ,QAAW,gBAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,aACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,gBACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,eACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,YACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,MAKtBG,QAEQP,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,MAKdJ,KAAQ,UACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,OAKtBK,aAAe,IAChBC;;AC7IHnB,OAAOC,QAAUC,QAAQ,cAAcC,eAAuB,QAC1DC,QAAW,KACXC,OAAU,SACVC,SACIC,aAAgB,4BAEpBC,WAEQC,KAAQ,gBACRJ,OAAU,SACVK,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,YACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,WACRI,GAAM,EACNP,SACIQ,QAAW,gBAIfH,KAAQ,WACRC,KAAQ,YACRH,KAAQ,OACRI,GAAM,EACNP,SACIQ,QAAW,gBAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,aACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,gBACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,eACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,YACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,MAKdJ,KAAQ,cACRC,UACAL,OAAU,SACVG,WAEQC,KAAQ,WACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,KACRI,GAAM,MAKdJ,KAAQ,sBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,cACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,UACRI,GAAM,EACNP,SACIQ,QAAW,KAIfH,KAAQ,WACRC,KAAQ,UACRH,KAAQ,WACRI,GAAM,EACNP,SACIQ,QAAW,KAIfH,KAAQ,WACRC,KAAQ,aACRH,KAAQ,MACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,MACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,cACRI,GAAM,MAKdJ,KAAQ,aACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,aACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,eACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,KACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,WACRI,GAAM,MAKdJ,KAAQ,UACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,WACRH,KAAQ,aACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,aACRH,KAAQ,SACRI,GAAM,MAKdJ,KAAQ,MACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,YACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,kBACRH,KAAQ,MACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,QACRI,GAAM,OAKdJ,KAAQ,SACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,YACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,UACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,UACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,OAKdJ,KAAQ,QACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,YACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,oBACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,UACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,UACRI,GAAM,OAKdJ,KAAQ,WACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,UACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,UACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,YACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,eACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,oBACRI,GAAM,MAKdJ,KAAQ,SACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,UACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,UACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,MAKdJ,KAAQ,YACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,UACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,cACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,aACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,eACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,WACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,WACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,MACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,YACRI,GAAM,OAKdJ,KAAQ,OACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,YACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,aACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,aACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,cACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,YACRI,GAAM,OAKdJ,KAAQ,SACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,aACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,YACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,MACRH,KAAQ,MACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,MAKdJ,KAAQ,QACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,SACRI,GAAM,MAKdJ,KAAQ,qBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,WACRH,KAAQ,kBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,cACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,cACRI,GAAM,MAKdJ,KAAQ,SACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,UACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,UACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,MAKdJ,KAAQ,OACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,UACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,UACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,YACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,MACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,QACRI,GAAM,OAKtBG,QAEQP,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,IAGNJ,KAAQ,QACRI,GAAM,IAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,OACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,OACRI,GAAM,MAGNJ,KAAQ,cACRI,GAAM,QAKdJ,KAAQ,kBACRJ,OAAU,SACVY,SAEQR,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,UACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,OAKdJ,KAAQ,oBACRJ,OAAU,SACVY,SAEQR,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,QAKdJ,KAAQ,eACRJ,OAAU,SACVY,SAEQR,KAAQ,uBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,MAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,qBACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,aACRI,GAAM,KAGNJ,KAAQ,WACRI,GAAM,OAKdJ,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,aACRI,GAAM,OAGNJ,KAAQ,eACRI,GAAM,OAGNJ,KAAQ,YACRI,GAAM,SAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,OAKdJ,KAAQ,oBACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,IAAO,IAGPJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,MAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,uBACRI,IAAO,IAGPJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,MAKdJ,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,MAKdJ,KAAQ,WACRJ,OAAU,SACVY,SAEQR,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,MAKdJ,KAAQ,eACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,oBACRI,GAAM,KAGNJ,KAAQ,aACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,WACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,QAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,UACRI,GAAM,KAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,kBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,MACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,QAKdJ,KAAQ,WACRJ,OAAU,SACVY,SAEQR,KAAQ,kBACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,MAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,MAKdJ,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,QAKdJ,KAAQ,cACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,kBACRI,GAAM,IAGNJ,KAAQ,kBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,kBACRI,GAAM,KAGNJ,KAAQ,kBACRI,GAAM,KAGNJ,KAAQ,oBACRI,GAAM,KAGNJ,KAAQ,wBACRI,GAAM,KAGNJ,KAAQ,yBACRI,GAAM,OAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,kBACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,MAKdJ,KAAQ,gBACRJ,OAAU,SACVY,SAEQR,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,sBACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,aACRI,GAAM,KAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,sBACRI,GAAM,KAGNJ,KAAQ,qBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,sBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,WACRI,GAAM,MAGNJ,KAAQ,aACRI,GAAM,MAGNJ,KAAQ,WACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,SACRI,GAAM,MAGNJ,KAAQ,SACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,SACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,gBACRI,GAAM,MAGNJ,KAAQ,SACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,sBACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,+BACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,2BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,kBACRI,GAAM,MAGNJ,KAAQ,yBACRI,GAAM,MAGNJ,KAAQ,kBACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,4BACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,4BACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,+BACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,+BACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,uBACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,6BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,iCACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,2BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,iCACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,MAGNJ,KAAQ,sBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,uBACRI,GAAM,MAGNJ,KAAQ,yBACRI,GAAM,MAGNJ,KAAQ,yBACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,uBACRI,GAAM,MAGNJ,KAAQ,uBACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,WACRI,GAAM,MAGNJ,KAAQ,iBACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,gBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,kBACRI,GAAM,MAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,4BACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,4BACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,gCACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,gCACRI,GAAM,OAGNJ,KAAQ,gCACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,4BACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,iCACRI,GAAM,OAGNJ,KAAQ,kCACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,oCACRI,GAAM,OAGNJ,KAAQ,oCACRI,GAAM,OAGNJ,KAAQ,mCACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,4BACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,WACRI,GAAM,OAGNJ,KAAQ,WACRI,GAAM,OAGNJ,KAAQ,WACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,cACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,qCACRI,GAAM,QAGNJ,KAAQ,qCACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,6BACRI,GAAM,QAGNJ,KAAQ,+BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,6BACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,+BACRI,GAAM,QAGNJ,KAAQ,+BACRI,GAAM,QAGNJ,KAAQ,mCACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,uCACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,sCACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,qCACRI,GAAM,QAGNJ,KAAQ,oCACRI,GAAM,QAGNJ,KAAQ,iCACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,+BACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,iBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,iBACRI,GAAM,QAGNJ,KAAQ,iBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,iBACRI,GAAM,QAGNJ,KAAQ,cACRI,GAAM,QAGNJ,KAAQ,cACRI,GAAM,QAGNJ,KAAQ,eACRI,GAAM,QAGNJ,KAAQ,cACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,iCACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,UAKdJ,KAAQ,cACRJ,OAAU,SACVY,SAEQR,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,MAKdJ,KAAQ,oBACRJ,OAAU,SACVY,SAEQR,KAAQ,2BACRI,GAAM,IAGNJ,KAAQ,4BACRI,GAAM,MAKdJ,KAAQ,iBACRJ,OAAU,SACVY,SAEQR,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,0BACRI,GAAM,MAKdJ,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,MAKdJ,KAAQ,WACRJ,OAAU,SACVY,SAEQR,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,MAKdJ,KAAQ,uBACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,oBACRI,GAAM,IAGNJ,KAAQ,oBACRI,GAAM,IAGNJ,KAAQ,qBACRI,GAAM,OAKtBK,aAAe,IAGvBF,QAEQP,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,MAKdJ,KAAQ,UACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,OAKtBK,aAAe,IAChBC;;ACrqGHnB,OAAOC,QAAUC,QAAQ,cAAcC,eAAuB,QAC1DC,QAAW,KACXC,OAAU,SACVC,SACIC,aAAgB,4BAEpBC,WAEQC,KAAQ,gBACRJ,OAAU,SACVK,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,YACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,WACRI,GAAM,EACNP,SACIQ,QAAW,gBAIfH,KAAQ,WACRC,KAAQ,YACRH,KAAQ,OACRI,GAAM,EACNP,SACIQ,QAAW,gBAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,aACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,gBACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,eACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,YACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,MAKdJ,KAAQ,cACRC,UACAL,OAAU,SACVG,WAEQC,KAAQ,WACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,OAKdJ,KAAQ,UACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,gBACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,cACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,MACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,YACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,cACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,iBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,cACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,YACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,gBACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,eACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,YACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,iBACRH,KAAQ,OACRI,GAAM,IACNP,SACIQ,QAAW,cAIfH,KAAQ,WACRC,KAAQ,QACRH,KAAQ,WACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,WACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,SACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,aACRH,KAAQ,QACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,YACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,aACRI,GAAM,QAKtBG,QAEQP,KAAQ,iBACRJ,OAAU,SACVY,SAEQR,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,MAKdJ,KAAQ,gBACRJ,OAAU,SACVY,SAEQR,KAAQ,oBACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,uBACRI,GAAM,IAGNJ,KAAQ,oBACRI,GAAM,IAGNJ,KAAQ,oBACRI,GAAM,IAGNJ,KAAQ,qBACRI,GAAM,IAGNJ,KAAQ,kBACRI,GAAM,IAGNJ,KAAQ,uBACRI,GAAM,KAGNJ,KAAQ,mBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,wBACRI,GAAM,KAGNJ,KAAQ,WACRI,GAAM,KAGNJ,KAAQ,aACRI,GAAM,KAGNJ,KAAQ,aACRI,GAAM,KAGNJ,KAAQ,qBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,mBACRI,GAAM,KAGNJ,KAAQ,oBACRI,GAAM,KAGNJ,KAAQ,mBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,OAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,MAKtBK,aAAe,IAGvBF,QAEQP,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,MAKdJ,KAAQ,UACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,OAKtBK,aAAe,IAChBC;;AChgBHnB,OAAOC,QAAUC,QAAQ,cAAcC,eAAuB,QAC1DC,QAAW,KACXC,OAAU,SACVC,SACIC,aAAgB,4BAEpBC,WAEQC,KAAQ,gBACRJ,OAAU,SACVK,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,YACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,WACRI,GAAM,EACNP,SACIQ,QAAW,gBAIfH,KAAQ,WACRC,KAAQ,YACRH,KAAQ,OACRI,GAAM,EACNP,SACIQ,QAAW,gBAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,aACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,gBACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,eACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,YACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,MAKdJ,KAAQ,cACRC,UACAL,OAAU,SACVG,WAEQC,KAAQ,OACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,MAKdJ,KAAQ,SACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,MACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,EACNP,SACIc,oBAAqB,QAMjCX,KAAQ,uBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,YACRI,GAAM,EACNP,SACIe,qBAAsB,MAI1BV,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,EACNP,SACIe,qBAAsB,MAI1BV,KAAQ,WACRC,KAAQ,SACRH,KAAQ,gBACRI,GAAM,EACNP,SACIe,qBAAsB,MAI1BV,KAAQ,WACRC,KAAQ,SACRH,KAAQ,SACRI,GAAM,EACNP,SACIe,qBAAsB,MAI1BV,KAAQ,WACRC,KAAQ,SACRH,KAAQ,kBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,SACRI,GAAM,MAKdJ,KAAQ,kBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,cACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,uBACRH,KAAQ,SACRI,GAAM,MAKtBK,aAAe,IAGvBF,QAEQP,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,MAKdJ,KAAQ,UACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,OAKtBK,aAAe,IAChBC;;AClSHnB,OAAOC,QAAUC,QAAQ,cAAcC,eAAuB,QAC1DC,QAAW,KACXC,OAAU,SACVC,SACIC,aAAgB,4BAEpBC,WAEQC,KAAQ,gBACRJ,OAAU,SACVK,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,YACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,WACRI,GAAM,EACNP,SACIQ,QAAW,gBAIfH,KAAQ,WACRC,KAAQ,YACRH,KAAQ,OACRI,GAAM,EACNP,SACIQ,QAAW,gBAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,aACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,gBACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,eACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,YACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,MAKdJ,KAAQ,cACRC,UACAL,OAAU,SACVG,WAEQC,KAAQ,cACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,OAKdJ,KAAQ,UACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,cACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,OAKdJ,KAAQ,QACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,YACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,SACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,SACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,UACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,UACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,UACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,WACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,WACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,IACNP,SACIc,oBAAqB,MAIzBT,KAAQ,WACRC,KAAQ,OACRH,KAAQ,SACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,cACRH,KAAQ,QACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,OACRI,GAAM,QAKdJ,KAAQ,gBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,WACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,SACRI,GAAM,GACNP,SACIQ,QAAW,wBACXM,oBAAqB,OAIzBT,KAAQ,WACRC,KAAQ,QACRH,KAAQ,MACRI,GAAM,GACNP,SACIe,qBAAsB,QAM1CL,QAEQP,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,IAGNJ,KAAQ,QACRI,GAAM,IAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,OACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,OACRI,GAAM,MAGNJ,KAAQ,cACRI,GAAM,QAKdJ,KAAQ,kBACRJ,OAAU,SACVY,SAEQR,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,UACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,OAKdJ,KAAQ,oBACRJ,OAAU,SACVY,SAEQR,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,QAKdJ,KAAQ,eACRJ,OAAU,SACVY,SAEQR,KAAQ,uBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,MAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,qBACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,aACRI,GAAM,KAGNJ,KAAQ,WACRI,GAAM,OAKdJ,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,aACRI,GAAM,OAGNJ,KAAQ,eACRI,GAAM,OAGNJ,KAAQ,YACRI,GAAM,SAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,OAKdJ,KAAQ,oBACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,IAAO,IAGPJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,MAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,uBACRI,IAAO,IAGPJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,MAKdJ,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,MAKdJ,KAAQ,WACRJ,OAAU,SACVY,SAEQR,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,MAKdJ,KAAQ,eACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,oBACRI,GAAM,KAGNJ,KAAQ,aACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,WACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,QAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,UACRI,GAAM,KAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,kBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,MACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,QAKdJ,KAAQ,WACRJ,OAAU,SACVY,SAEQR,KAAQ,kBACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,MAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,MAKdJ,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,QAKdJ,KAAQ,cACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,kBACRI,GAAM,IAGNJ,KAAQ,kBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,kBACRI,GAAM,KAGNJ,KAAQ,kBACRI,GAAM,KAGNJ,KAAQ,oBACRI,GAAM,KAGNJ,KAAQ,wBACRI,GAAM,KAGNJ,KAAQ,yBACRI,GAAM,OAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,kBACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,MAKdJ,KAAQ,gBACRJ,OAAU,SACVY,SAEQR,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,sBACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,aACRI,GAAM,KAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,sBACRI,GAAM,KAGNJ,KAAQ,qBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,sBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,WACRI,GAAM,MAGNJ,KAAQ,aACRI,GAAM,MAGNJ,KAAQ,WACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,SACRI,GAAM,MAGNJ,KAAQ,SACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,SACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,gBACRI,GAAM,MAGNJ,KAAQ,SACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,sBACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,+BACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,2BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,kBACRI,GAAM,MAGNJ,KAAQ,yBACRI,GAAM,MAGNJ,KAAQ,kBACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,4BACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,4BACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,+BACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,+BACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,uBACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,6BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,iCACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,2BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,iCACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,MAGNJ,KAAQ,sBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,uBACRI,GAAM,MAGNJ,KAAQ,yBACRI,GAAM,MAGNJ,KAAQ,yBACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,uBACRI,GAAM,MAGNJ,KAAQ,uBACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,WACRI,GAAM,MAGNJ,KAAQ,iBACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,gBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,kBACRI,GAAM,MAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,4BACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,4BACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,gCACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,gCACRI,GAAM,OAGNJ,KAAQ,gCACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,4BACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,iCACRI,GAAM,OAGNJ,KAAQ,kCACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,oCACRI,GAAM,OAGNJ,KAAQ,oCACRI,GAAM,OAGNJ,KAAQ,mCACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,4BACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,WACRI,GAAM,OAGNJ,KAAQ,WACRI,GAAM,OAGNJ,KAAQ,WACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,cACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,qCACRI,GAAM,QAGNJ,KAAQ,qCACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,6BACRI,GAAM,QAGNJ,KAAQ,+BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,6BACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,+BACRI,GAAM,QAGNJ,KAAQ,+BACRI,GAAM,QAGNJ,KAAQ,mCACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,uCACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,sCACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,qCACRI,GAAM,QAGNJ,KAAQ,oCACRI,GAAM,QAGNJ,KAAQ,iCACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,+BACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,iBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,iBACRI,GAAM,QAGNJ,KAAQ,iBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,iBACRI,GAAM,QAGNJ,KAAQ,cACRI,GAAM,QAGNJ,KAAQ,cACRI,GAAM,QAGNJ,KAAQ,eACRI,GAAM,QAGNJ,KAAQ,cACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,iCACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,UAKdJ,KAAQ,cACRJ,OAAU,SACVY,SAEQR,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,MAKdJ,KAAQ,oBACRJ,OAAU,SACVY,SAEQR,KAAQ,2BACRI,GAAM,IAGNJ,KAAQ,4BACRI,GAAM,MAKdJ,KAAQ,iBACRJ,OAAU,SACVY,SAEQR,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,0BACRI,GAAM,MAKdJ,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,MAKdJ,KAAQ,WACRJ,OAAU,SACVY,SAEQR,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,MAKdJ,KAAQ,uBACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,oBACRI,GAAM,IAGNJ,KAAQ,oBACRI,GAAM,IAGNJ,KAAQ,qBACRI,GAAM,OAKtBK,aAAe,IAGvBF,QAEQP,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,MAKdJ,KAAQ,UACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,OAKtBK,aAAe,IAChBC;;AC37EHnB,OAAOC,QAAUC,QAAQ,cAAcC,eAAuB,QAC1DC,QAAW,KACXC,OAAU,SACVC,SACIC,aAAgB,4BAEpBC,WAEQC,KAAQ,gBACRJ,OAAU,SACVK,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,YACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,WACRI,GAAM,EACNP,SACIQ,QAAW,gBAIfH,KAAQ,WACRC,KAAQ,YACRH,KAAQ,OACRI,GAAM,EACNP,SACIQ,QAAW,gBAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,aACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,gBACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,eACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,YACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,MAKdJ,KAAQ,cACRC,UACAL,OAAU,SACVG,WAEQC,KAAQ,eACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,cACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,gBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,eACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,MACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,OAKtBK,aAAe,IAGvBF,QAEQP,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,MAKdJ,KAAQ,UACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,OAKtBK,aAAe,IAChBC;;AC5OHnB,OAAOC,QAAUC,QAAQ,cAAcC,eAAuB,QAC1DC,QAAW,KACXC,OAAU,SACVC,SACIC,aAAgB,4BAEpBC,WAEQC,KAAQ,gBACRJ,OAAU,SACVK,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,YACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,WACRI,GAAM,EACNP,SACIQ,QAAW,gBAIfH,KAAQ,WACRC,KAAQ,YACRH,KAAQ,OACRI,GAAM,EACNP,SACIQ,QAAW,gBAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,aACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,gBACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,eACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,YACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,MAKdJ,KAAQ,cACRC,UACAL,OAAU,SACVG,WAEQC,KAAQ,WACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,OAKdJ,KAAQ,UACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,gBACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,cACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,MACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,YACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,cACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,iBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,cACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,YACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,gBACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,eACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,YACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,iBACRH,KAAQ,OACRI,GAAM,IACNP,SACIQ,QAAW,cAIfH,KAAQ,WACRC,KAAQ,QACRH,KAAQ,WACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,WACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,SACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,aACRH,KAAQ,QACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,YACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,aACRI,GAAM,QAKdJ,KAAQ,cACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,OAKdJ,KAAQ,UACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,cACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,OAKdJ,KAAQ,gBACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,aACRH,KAAQ,UACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,aACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,eACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,cACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,cACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,MACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,aACRH,KAAQ,cACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,cACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,MACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,KACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,WACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,YACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,OACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,SACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,iBACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,YACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,QACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,gBACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,gBACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,YACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,YACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,QACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,MACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,MACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,MACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,OACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,eACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,eACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,eACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,aACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,cACRI,GAAM,QAKdJ,KAAQ,eACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,aACRH,KAAQ,cACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,iBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,eACRH,KAAQ,gBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,eACRI,GAAM,OAKdJ,KAAQ,cACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,KACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,YACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,cACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,SACRI,GAAM,OAKdJ,KAAQ,sBACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,UACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,iBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,kBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,iBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,iBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,iBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,iBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,kBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,OAKdJ,KAAQ,sBACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,cACRH,KAAQ,YACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,qBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,qBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,gBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,mBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,eACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,OAKdJ,KAAQ,sBACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,YACRI,GAAM,MAKdJ,KAAQ,oBACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,MAKdJ,KAAQ,qBACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,QACRI,GAAM,MAKdJ,KAAQ,iBACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,MAKdJ,KAAQ,iBACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,MAKdJ,KAAQ,iBACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,MAKdJ,KAAQ,mBACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,MAKdJ,KAAQ,kBACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,uBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,sBACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,YACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,oBACRH,KAAQ,kBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,mBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,eACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,qBACRH,KAAQ,eACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,mBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,sBACRH,KAAQ,oBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,wBACRH,KAAQ,kBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,0BACRH,KAAQ,oBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,oBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,oBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,uBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,uBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,wBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,0BACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,eACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,sBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,sBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,2BACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,uBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,uBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,cACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,kBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,cACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,mBACRH,KAAQ,aACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,uBACRH,KAAQ,eACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,sBACRH,KAAQ,gBACRI,GAAM,OAKdJ,KAAQ,kBACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,eACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,kBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,wBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,oBACRH,KAAQ,MACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,oBACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,sBACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,eACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,eACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,cACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,aACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,qBACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,iBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,qBACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,UACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,oBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,wBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,cACRH,KAAQ,YACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,aACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,aACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,KACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,wBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,iBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,iBACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,cACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,aACRH,KAAQ,cACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,wBACRH,KAAQ,cACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,WACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,gBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,YACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,kBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,UACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,aACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,cACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,gBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,oBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,kBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,qBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,2BACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,gBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,cACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,aACRH,KAAQ,QACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,eACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,mBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,YACRI,GAAM,OAKdJ,KAAQ,cACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,OACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,aACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,cACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,cACRH,KAAQ,aACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,iBACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,kBACRI,GAAM,OAKdJ,KAAQ,gBACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,qBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,uBACRH,KAAQ,aACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,gBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,gBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,YACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,kBACRH,KAAQ,YACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,cACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,mBACRH,KAAQ,aACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,cACRI,GAAM,OAKdJ,KAAQ,kBACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,iBACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,qBACRH,KAAQ,eACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,wBACRH,KAAQ,sBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,iBACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,mBACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,oBACRH,KAAQ,gBACRI,GAAM,MAKdJ,KAAQ,uBACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,cACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,cACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,SACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,kBACRH,KAAQ,YACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,mBACRH,KAAQ,aACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,wBACRH,KAAQ,YACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,OACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,cACRH,KAAQ,YACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,cACRH,KAAQ,aACRI,GAAM,QAKdJ,KAAQ,uBACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,QACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,MAKdJ,KAAQ,cACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,OACRH,KAAQ,wBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,qBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,sBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,uBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,uBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,wBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,2BACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,wBACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,uBACRI,GAAM,MAKtBG,QAEQP,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,IAGNJ,KAAQ,QACRI,GAAM,IAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,OACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,OACRI,GAAM,MAGNJ,KAAQ,cACRI,GAAM,QAKdJ,KAAQ,kBACRJ,OAAU,SACVY,SAEQR,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,UACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,OAKdJ,KAAQ,oBACRJ,OAAU,SACVY,SAEQR,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,QAKdJ,KAAQ,eACRJ,OAAU,SACVY,SAEQR,KAAQ,uBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,MAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,qBACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,aACRI,GAAM,KAGNJ,KAAQ,WACRI,GAAM,OAKdJ,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,aACRI,GAAM,OAGNJ,KAAQ,eACRI,GAAM,OAGNJ,KAAQ,YACRI,GAAM,SAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,OAKdJ,KAAQ,oBACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,IAAO,IAGPJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,MAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,uBACRI,IAAO,IAGPJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,MAKdJ,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,MAKdJ,KAAQ,WACRJ,OAAU,SACVY,SAEQR,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,MAKdJ,KAAQ,eACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,oBACRI,GAAM,KAGNJ,KAAQ,aACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,WACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,QAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,UACRI,GAAM,KAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,kBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,MACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,QAKdJ,KAAQ,WACRJ,OAAU,SACVY,SAEQR,KAAQ,kBACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,MAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,MAKdJ,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,QAKdJ,KAAQ,cACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,kBACRI,GAAM,IAGNJ,KAAQ,kBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,kBACRI,GAAM,KAGNJ,KAAQ,kBACRI,GAAM,KAGNJ,KAAQ,oBACRI,GAAM,KAGNJ,KAAQ,wBACRI,GAAM,KAGNJ,KAAQ,yBACRI,GAAM,OAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,kBACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,MAKdJ,KAAQ,gBACRJ,OAAU,SACVY,SAEQR,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,sBACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,aACRI,GAAM,KAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,sBACRI,GAAM,KAGNJ,KAAQ,qBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,sBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,WACRI,GAAM,MAGNJ,KAAQ,aACRI,GAAM,MAGNJ,KAAQ,WACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,SACRI,GAAM,MAGNJ,KAAQ,SACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,SACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,gBACRI,GAAM,MAGNJ,KAAQ,SACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,sBACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,+BACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,2BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,kBACRI,GAAM,MAGNJ,KAAQ,yBACRI,GAAM,MAGNJ,KAAQ,kBACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,4BACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,4BACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,+BACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,+BACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,uBACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,6BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,iCACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,2BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,iCACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,MAGNJ,KAAQ,sBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,uBACRI,GAAM,MAGNJ,KAAQ,yBACRI,GAAM,MAGNJ,KAAQ,yBACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,uBACRI,GAAM,MAGNJ,KAAQ,uBACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,WACRI,GAAM,MAGNJ,KAAQ,iBACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,gBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,kBACRI,GAAM,MAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,4BACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,4BACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,gCACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,gCACRI,GAAM,OAGNJ,KAAQ,gCACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,4BACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,iCACRI,GAAM,OAGNJ,KAAQ,kCACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,oCACRI,GAAM,OAGNJ,KAAQ,oCACRI,GAAM,OAGNJ,KAAQ,mCACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,4BACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,WACRI,GAAM,OAGNJ,KAAQ,WACRI,GAAM,OAGNJ,KAAQ,WACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,cACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,qCACRI,GAAM,QAGNJ,KAAQ,qCACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,6BACRI,GAAM,QAGNJ,KAAQ,+BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,6BACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,+BACRI,GAAM,QAGNJ,KAAQ,+BACRI,GAAM,QAGNJ,KAAQ,mCACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,uCACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ;iCACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,sCACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,qCACRI,GAAM,QAGNJ,KAAQ,oCACRI,GAAM,QAGNJ,KAAQ,iCACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,+BACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,iBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,iBACRI,GAAM,QAGNJ,KAAQ,iBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,iBACRI,GAAM,QAGNJ,KAAQ,cACRI,GAAM,QAGNJ,KAAQ,cACRI,GAAM,QAGNJ,KAAQ,eACRI,GAAM,QAGNJ,KAAQ,cACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,iCACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,UAKdJ,KAAQ,cACRJ,OAAU,SACVY,SAEQR,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,MAKdJ,KAAQ,oBACRJ,OAAU,SACVY,SAEQR,KAAQ,2BACRI,GAAM,IAGNJ,KAAQ,4BACRI,GAAM,MAKdJ,KAAQ,iBACRJ,OAAU,SACVY,SAEQR,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,0BACRI,GAAM,MAKdJ,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,MAKdJ,KAAQ,WACRJ,OAAU,SACVY,SAEQR,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,MAKdJ,KAAQ,uBACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,oBACRI,GAAM,IAGNJ,KAAQ,oBACRI,GAAM,IAGNJ,KAAQ,qBACRI,GAAM,OAKdJ,KAAQ,iBACRJ,OAAU,SACVY,SAEQR,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,MAKdJ,KAAQ,gBACRJ,OAAU,SACVY,SAEQR,KAAQ,oBACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,uBACRI,GAAM,IAGNJ,KAAQ,oBACRI,GAAM,IAGNJ,KAAQ,oBACRI,GAAM,IAGNJ,KAAQ,qBACRI,GAAM,IAGNJ,KAAQ,kBACRI,GAAM,IAGNJ,KAAQ,uBACRI,GAAM,KAGNJ,KAAQ,mBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,wBACRI,GAAM,KAGNJ,KAAQ,WACRI,GAAM,KAGNJ,KAAQ,aACRI,GAAM,KAGNJ,KAAQ,aACRI,GAAM,KAGNJ,KAAQ,qBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,mBACRI,GAAM,KAGNJ,KAAQ,oBACRI,GAAM,KAGNJ,KAAQ,mBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,OAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,MAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,wBACRI,GAAM,IAGNJ,KAAQ,4BACRI,GAAM,IAGNJ,KAAQ,wBACRI,GAAM,IAGNJ,KAAQ,uBACRI,GAAM,IAGNJ,KAAQ,8BACRI,GAAM,IAGNJ,KAAQ,2BACRI,GAAM,IAGNJ,KAAQ,+BACRI,GAAM,MAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,eACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,gBACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,eACRI,GAAM,OAGNJ,KAAQ,gBACRI,GAAM,OAGNJ,KAAQ,cACRI,GAAM,OAGNJ,KAAQ,cACRI,GAAM,OAGNJ,KAAQ,eACRI,GAAM,OAGNJ,KAAQ,gBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,cACRI,GAAM,OAGNJ,KAAQ,gBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,eACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,+BACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,SAKdJ,KAAQ,eACRJ,OAAU,SACVY,SAEQR,KAAQ,oBACRI,GAAM,IAGNJ,KAAQ,iCACRI,GAAM,IAGNJ,KAAQ,iCACRI,GAAM,IAGNJ,KAAQ,gCACRI,GAAM,IAGNJ,KAAQ,0BACRI,GAAM,MAKdJ,KAAQ,uBACRJ,OAAU,SACVY,SAEQR,KAAQ,sBACRI,GAAM,IAGNJ,KAAQ,qBACRI,GAAM,IAGNJ,KAAQ,mCACRI,GAAM,IAGNJ,KAAQ,yCACRI,GAAM,IAGNJ,KAAQ,+BACRI,GAAM,IAGNJ,KAAQ,0CACRI,GAAM,IAGNJ,KAAQ,kCACRI,GAAM,IAGNJ,KAAQ,uCACRI,GAAM,IAGNJ,KAAQ,6CACRI,GAAM,OAKdJ,KAAQ,qBACRJ,OAAU,SACVY,SAEQR,KAAQ,uBACRI,GAAM,IAGNJ,KAAQ,0BACRI,GAAM,IAGNJ,KAAQ,yBACRI,GAAM,IAGNJ,KAAQ,0BACRI,GAAM,MAKdJ,KAAQ,wBACRJ,OAAU,SACVY,SAEQR,KAAQ,qBACRI,GAAM,IAGNJ,KAAQ,uBACRI,GAAM,IAGNJ,KAAQ,iCACRI,GAAM,IAGNJ,KAAQ,0BACRI,GAAM,IAGNJ,KAAQ,gCACRI,GAAM,IAGNJ,KAAQ,wBACRI,GAAM,MAKdJ,KAAQ,oBACRJ,OAAU,SACVY,SAEQR,KAAQ,sBACRI,GAAM,IAGNJ,KAAQ,0BACRI,GAAM,IAGNJ,KAAQ,0BACRI,GAAM,IAGNJ,KAAQ,kBACRI,GAAM,MAKdJ,KAAQ,wBACRJ,OAAU,SACVY,SAEQR,KAAQ,qBACRI,GAAM,IAGNJ,KAAQ,sBACRI,GAAM,IAGNJ,KAAQ,uBACRI,GAAM,MAKdJ,KAAQ,oBACRJ,OAAU,SACVY,SAEQR,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,MAKdJ,KAAQ,qBACRJ,OAAU,SACVY,SAEQR,KAAQ,oBACRI,GAAM,IAGNJ,KAAQ,kBACRI,GAAM,IAGNJ,KAAQ,kBACRI,GAAM,MAKdJ,KAAQ,sBACRJ,OAAU,SACVY,SAEQR,KAAQ,wBACRI,GAAM,IAGNJ,KAAQ,uBACRI,GAAM,IAGNJ,KAAQ,qBACRI,GAAM,MAKdJ,KAAQ,mBACRJ,OAAU,SACVY,SAEQR,KAAQ,oBACRI,GAAM,IAGNJ,KAAQ,oBACRI,GAAM,MAKdJ,KAAQ,kBACRJ,OAAU,SACVY,SAEQR,KAAQ,uBACRI,GAAM,IAGNJ,KAAQ,qBACRI,GAAM,IAGNJ,KAAQ,oBACRI,GAAM,MAKdJ,KAAQ,mBACRJ,OAAU,SACVY,SAEQR,KAAQ,uBACRI,GAAM,IAGNJ,KAAQ,6BACRI,GAAM,IAGNJ,KAAQ,qBACRI,GAAM,IAGNJ,KAAQ,oBACRI,GAAM,MAKdJ,KAAQ,cACRJ,OAAU,SACVY,SAEQR,KAAQ,kBACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,MAKdJ,KAAQ,wBACRJ,OAAU,SACVY,SAEQR,KAAQ,6BACRI,GAAM,IAGNJ,KAAQ,4BACRI,GAAM,MAKdJ,KAAQ,0BACRJ,OAAU,SACVY,SAEQR,KAAQ,6BACRI,GAAM,IAGNJ,KAAQ,gCACRI,GAAM,MAKtBK,aAAe,IAGvBF,QAEQP,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,MAKdJ,KAAQ,UACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,OAKtBK,aAAe,IAChBC;;AChyJHnB,OAAOC,QAAUC,QAAQ,cAAcC,eAAuB,QAC1DC,QAAW,KACXC,OAAU,SACVC,SACIC,aAAgB,4BAEpBC,WAEQC,KAAQ,gBACRJ,OAAU,SACVK,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,YACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,WACRI,GAAM,EACNP,SACIQ,QAAW,gBAIfH,KAAQ,WACRC,KAAQ,YACRH,KAAQ,OACRI,GAAM,EACNP,SACIQ,QAAW,gBAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,aACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,gBACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,eACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,YACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,MAKdJ,KAAQ,cACRC,UACAL,OAAU,SACVG,WAEQC,KAAQ,kBACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,UACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,OACRI,GAAM,OAKdJ,KAAQ,sBACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,OACRH,KAAQ,QACRI,GAAM,OAKdJ,KAAQ,uBACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,OACRH,KAAQ,QACRI,GAAM,OAKdJ,KAAQ,eACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,OAKdJ,KAAQ,gBACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,gBACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,OAKdJ,KAAQ,YACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,OAKdJ,KAAQ,eACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,UACRH,KAAQ,UACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,aACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,OACRI,GAAM,OAKtBG,QAEQP,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,IAGNJ,KAAQ,QACRI,GAAM,IAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,OACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,OACRI,GAAM,MAGNJ,KAAQ,cACRI,GAAM,QAKdJ,KAAQ,kBACRJ,OAAU,SACVY,SAEQR,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,UACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,OAKdJ,KAAQ,oBACRJ,OAAU,SACVY,SAEQR,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,QAKdJ,KAAQ,eACRJ,OAAU,SACVY,SAEQR,KAAQ,uBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,MAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,qBACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,aACRI,GAAM,KAGNJ,KAAQ,WACRI,GAAM,OAKdJ,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,aACRI,GAAM,OAGNJ,KAAQ,eACRI,GAAM,OAGNJ,KAAQ,YACRI,GAAM,SAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,OAKdJ,KAAQ,oBACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,IAAO,IAGPJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,MAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,uBACRI,IAAO,IAGPJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,MAKdJ,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,MAKdJ,KAAQ,WACRJ,OAAU,SACVY,SAEQR,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,MAKdJ,KAAQ,eACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,oBACRI,GAAM,KAGNJ,KAAQ,aACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,WACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,QAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,UACRI,GAAM,KAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,kBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,MACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,QAKdJ,KAAQ,WACRJ,OAAU,SACVY,SAEQR,KAAQ,kBACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,MAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,MAKdJ,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,QAKdJ,KAAQ,cACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,kBACRI,GAAM,IAGNJ,KAAQ,kBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,kBACRI,GAAM,KAGNJ,KAAQ,kBACRI,GAAM,KAGNJ,KAAQ,oBACRI,GAAM,KAGNJ,KAAQ,wBACRI,GAAM,KAGNJ,KAAQ,yBACRI,GAAM,OAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,kBACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,MAKdJ,KAAQ,gBACRJ,OAAU,SACVY,SAEQR,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,sBACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,aACRI,GAAM,KAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,sBACRI,GAAM,KAGNJ,KAAQ,qBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,sBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,WACRI,GAAM,MAGNJ,KAAQ,aACRI,GAAM,MAGNJ,KAAQ,WACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,SACRI,GAAM,MAGNJ,KAAQ,SACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,SACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,gBACRI,GAAM,MAGNJ,KAAQ,SACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,sBACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,+BACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,2BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,kBACRI,GAAM,MAGNJ,KAAQ,yBACRI,GAAM,MAGNJ,KAAQ,kBACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,4BACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,4BACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,+BACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,+BACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,uBACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,6BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,iCACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,2BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,iCACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,MAGNJ,KAAQ,sBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,uBACRI,GAAM,MAGNJ,KAAQ,yBACRI,GAAM,MAGNJ,KAAQ,yBACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,uBACRI,GAAM,MAGNJ,KAAQ,uBACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,WACRI,GAAM,MAGNJ,KAAQ,iBACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,gBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,kBACRI,GAAM,MAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,4BACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,4BACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,gCACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,gCACRI,GAAM,OAGNJ,KAAQ,gCACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,4BACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,iCACRI,GAAM,OAGNJ,KAAQ,kCACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,oCACRI,GAAM,OAGNJ,KAAQ,oCACRI,GAAM,OAGNJ,KAAQ,mCACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,4BACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,WACRI,GAAM,OAGNJ,KAAQ,WACRI,GAAM,OAGNJ,KAAQ,WACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,cACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,qCACRI,GAAM,QAGNJ,KAAQ,qCACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,6BACRI,GAAM,QAGNJ,KAAQ,+BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,6BACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,+BACRI,GAAM,QAGNJ,KAAQ,+BACRI,GAAM,QAGNJ,KAAQ,mCACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,uCACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,sCACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,qCACRI,GAAM,QAGNJ,KAAQ,oCACRI,GAAM,QAGNJ,KAAQ,iCACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,+BACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,iBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,iBACRI,GAAM,QAGNJ,KAAQ,iBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,iBACRI,GAAM,QAGNJ,KAAQ,cACRI,GAAM,QAGNJ,KAAQ,cACRI,GAAM,QAGNJ,KAAQ,eACRI,GAAM,QAGNJ,KAAQ,cACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,iCACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,UAKdJ,KAAQ,cACRJ,OAAU,SACVY,SAEQR,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,MAKdJ,KAAQ,oBACRJ,OAAU,SACVY,SAEQR,KAAQ,2BACRI,GAAM,IAGNJ,KAAQ,4BACRI,GAAM,MAKdJ,KAAQ,iBACRJ,OAAU,SACVY,SAEQR,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,0BACRI,GAAM,MAKdJ,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,MAKdJ,KAAQ,WACRJ,OAAU,SACVY,SAEQR,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,MAKdJ,KAAQ,uBACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,oBACRI,GAAM,IAGNJ,KAAQ,oBACRI,GAAM,IAGNJ,KAAQ,qBACRI,GAAM,OAKtBK,aAAe,IAGvBF,QAEQP,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,MAKdJ,KAAQ,UACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,OAKtBK,aAAe,IAChBC;;ACt2EHnB,OAAOC,QAAUC,QAAQ,cAAcC,eAAuB,QAC1DC,QAAW,KACXC,OAAU,SACVC,SACIC,aAAgB,4BAEpBC,WAEQC,KAAQ,gBACRJ,OAAU,SACVK,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,YACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,WACRI,GAAM,EACNP,SACIQ,QAAW,gBAIfH,KAAQ,WACRC,KAAQ,YACRH,KAAQ,OACRI,GAAM,EACNP,SACIQ,QAAW,gBAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,aACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,gBACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,eACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,YACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,MAKdJ,KAAQ,cACRC,UACAL,OAAU,SACVG,WAEQC,KAAQ,cACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,OAKdJ,KAAQ,UACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,cACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,OAKdJ,KAAQ,QACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,aACRH,KAAQ,KACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,MACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,cACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,cACRH,KAAQ,SACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,OACRI,GAAM,OAKdJ,KAAQ,QACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,YAGAD,KAAQ,QACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,YAGRM,QAEQP,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,OACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,OAKtBK,aAAe,IAGvBF,QAEQP,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,MAKdJ,KAAQ,UACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,OAKtBK,aAAe,IAChBC;;AC1SHnB,OAAOC,QAAUC,QAAQ,cAAcC,eAAuB,QAC1DC,QAAW,KACXC,OAAU,SACVC,SACIC,aAAgB,4BAEpBC,WAEQC,KAAQ,gBACRJ,OAAU,SACVK,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,YACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,WACRI,GAAM,EACNP,SACIQ,QAAW,gBAIfH,KAAQ,WACRC,KAAQ,YACRH,KAAQ,OACRI,GAAM,EACNP,SACIQ,QAAW,gBAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,aACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,gBACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,eACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,YACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,MAKdJ,KAAQ,cACRC,UACAL,OAAU,SACVW,QAEQP,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,IAGNJ,KAAQ,QACRI,GAAM,IAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,OACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,OACRI,GAAM,MAGNJ,KAAQ,cACRI,GAAM,QAKdJ,KAAQ,kBACRJ,OAAU,SACVY,SAEQR,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,UACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,OAKdJ,KAAQ,oBACRJ,OAAU,SACVY,SAEQR,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,QAKdJ,KAAQ,eACRJ,OAAU,SACVY,SAEQR,KAAQ,uBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,MAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,qBACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,aACRI,GAAM,KAGNJ,KAAQ,WACRI,GAAM,OAKdJ,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,aACRI,GAAM,OAGNJ,KAAQ,eACRI,GAAM,OAGNJ,KAAQ,YACRI,GAAM,SAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,OAKdJ,KAAQ,oBACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,IAAO,IAGPJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,MAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,uBACRI,IAAO,IAGPJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,MAKdJ,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,MAKdJ,KAAQ,WACRJ,OAAU,SACVY,SAEQR,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,MAKdJ,KAAQ,eACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,oBACRI,GAAM,KAGNJ,KAAQ,aACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,WACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,QAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,UACRI,GAAM,KAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,kBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,MACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,QAKdJ,KAAQ,WACRJ,OAAU,SACVY,SAEQR,KAAQ,kBACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,MAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,MAKdJ,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,QAKdJ,KAAQ,cACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,kBACRI,GAAM,IAGNJ,KAAQ,kBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,kBACRI,GAAM,KAGNJ,KAAQ,kBACRI,GAAM,KAGNJ,KAAQ,oBACRI,GAAM,KAGNJ,KAAQ,wBACRI,GAAM,KAGNJ,KAAQ,yBACRI,GAAM,OAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,kBACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,MAKdJ,KAAQ,gBACRJ,OAAU,SACVY,SAEQR,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,sBACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,aACRI,GAAM,KAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,sBACRI,GAAM,KAGNJ,KAAQ,qBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,sBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,WACRI,GAAM,MAGNJ,KAAQ,aACRI,GAAM,MAGNJ,KAAQ,WACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,SACRI,GAAM,MAGNJ,KAAQ,SACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,SACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,gBACRI,GAAM,MAGNJ,KAAQ,SACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,sBACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,+BACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,2BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,kBACRI,GAAM,MAGNJ,KAAQ,yBACRI,GAAM,MAGNJ,KAAQ,kBACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,4BACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,4BACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,+BACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,+BACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,uBACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,6BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,iCACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,2BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,iCACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,MAGNJ,KAAQ,sBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,uBACRI,GAAM,MAGNJ,KAAQ,yBACRI,GAAM,MAGNJ,KAAQ,yBACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,uBACRI,GAAM,MAGNJ,KAAQ,uBACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,WACRI,GAAM,MAGNJ,KAAQ,iBACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,gBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,kBACRI,GAAM,MAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,4BACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,4BACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,gCACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,gCACRI,GAAM,OAGNJ,KAAQ,gCACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,4BACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,iCACRI,GAAM,OAGNJ,KAAQ,kCACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,oCACRI,GAAM,OAGNJ,KAAQ,oCACRI,GAAM,OAGNJ,KAAQ,mCACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,4BACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,WACRI,GAAM,OAGNJ,KAAQ,WACRI,GAAM,OAGNJ,KAAQ,WACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,cACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,qCACRI,GAAM,QAGNJ,KAAQ,qCACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,6BACRI,GAAM,QAGNJ,KAAQ,+BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,6BACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,+BACRI,GAAM,QAGNJ,KAAQ,+BACRI,GAAM,QAGNJ,KAAQ,mCACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,uCACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,sCACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,qCACRI,GAAM,QAGNJ,KAAQ,oCACRI,GAAM,QAGNJ,KAAQ,iCACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,+BACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,iBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,iBACRI,GAAM,QAGNJ,KAAQ,iBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,iBACRI,GAAM,QAGNJ,KAAQ,cACRI,GAAM,QAGNJ,KAAQ,cACRI,GAAM,QAGNJ,KAAQ,eACRI,GAAM,QAGNJ,KAAQ,cACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,iCACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,UAKdJ,KAAQ,cACRJ,OAAU,SACVY,SAEQR,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,MAKdJ,KAAQ,oBACRJ,OAAU,SACVY,SAEQR,KAAQ,2BACRI,GAAM,IAGNJ,KAAQ,4BACRI,GAAM,MAKdJ,KAAQ,iBACRJ,OAAU,SACVY,SAEQR,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,0BACRI,GAAM,MAKdJ,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,MAKdJ,KAAQ,WACRJ,OAAU,SACVY,SAEQR,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,MAKdJ,KAAQ,uBACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,oBACRI,GAAM,IAGNJ,KAAQ,oBACRI,GAAM,IAGNJ,KAAQ,qBACRI,GAAM,OAKtBK,aAAe,IAGvBF,QAEQP,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,MAKdJ,KAAQ,UACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,OAKtBK,aAAe,IAChBC;;ACnuEHnB,OAAOC,QAAUC,QAAQ,cAAcC,eAAuB,QAC1DC,QAAW,KACXC,OAAU,SACVC,SACIC,aAAgB,4BAEpBC,WAEQC,KAAQ,gBACRJ,OAAU,SACVK,SAEQC,KAAQ,WACRC,KAAQ,QACRH,KAAQ,WACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,YACRI,GAAM,IAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,WACRI,GAAM,EACNP,SACIQ,QAAW,gBAIfH,KAAQ,WACRC,KAAQ,YACRH,KAAQ,OACRI,GAAM,EACNP,SACIQ,QAAW,gBAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,aACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,gBACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,eACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,OACRH,KAAQ,YACRI,GAAM,EACNP,SACIQ,SAAW,KAIfH,KAAQ,WACRC,KAAQ,SACRH,KAAQ,QACRI,GAAM,MAKdJ,KAAQ,cACRC,UACAL,OAAU,SACVG,WAEQC,KAAQ,cACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,OAKdJ,KAAQ,UACRJ,OAAU,SACVC,SACIS,wBAAyB,KAE7BL,SAEQC,KAAQ,WACRC,KAAQ,cACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,IACRI,GAAM,OAKdJ,KAAQ,QACRJ,OAAU,SACVC,SACIS,wBAAyB,MAE7BL,SAEQC,KAAQ,WACRC,KAAQ,YACRH,KAAQ,OACRI,GAAM,KAGNF,KAAQ,WACRC,KAAQ,OACRH,KAAQ,SACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,SACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,SACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,QACRH,KAAQ,UACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,UACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,WACRH,KAAQ,UACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,WACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,WACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,SACRH,KAAQ,WACRI,GAAM,IACNP,SACIc,oBAAqB,MAIzBT,KAAQ,WACRC,KAAQ,OACRH,KAAQ,SACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,cACRH,KAAQ,QACRI,GAAM,MAGNF,KAAQ,WACRC,KAAQ,UACRH,KAAQ,OACRI,GAAM,QAKtBG,QAEQP,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,IAGNJ,KAAQ,QACRI,GAAM,IAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,OACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,OACRI,GAAM,MAGNJ,KAAQ,cACRI,GAAM,QAKdJ,KAAQ,kBACRJ,OAAU,SACVY,SAEQR,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,UACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,OAKdJ,KAAQ,oBACRJ,OAAU,SACVY,SAEQR,KAAQ,SACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,QAKdJ,KAAQ,eACRJ,OAAU,SACVY,SAEQR,KAAQ,uBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,MAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,qBACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,aACRI,GAAM,KAGNJ,KAAQ,WACRI,GAAM,OAKdJ,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,aACRI,GAAM,OAGNJ,KAAQ,eACRI,GAAM,OAGNJ,KAAQ,YACRI,GAAM,SAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,OAKdJ,KAAQ,oBACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,IAAO,IAGPJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,MAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,uBACRI,IAAO,IAGPJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,MAKdJ,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,MAKdJ,KAAQ,WACRJ,OAAU,SACVY,SAEQR,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,MAKdJ,KAAQ,eACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,oBACRI,GAAM,KAGNJ,KAAQ,aACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,WACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,QAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,UACRI,GAAM,KAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,kBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,MACRI,GAAM,KAGNJ,KAAQ,SACRI,GAAM,QAKdJ,KAAQ,WACRJ,OAAU,SACVY,SAEQR,KAAQ,kBACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,MAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,MAKdJ,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,QAKdJ,KAAQ,cACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,WACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,kBACRI,GAAM,IAGNJ,KAAQ,kBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,kBACRI,GAAM,KAGNJ,KAAQ,kBACRI,GAAM,KAGNJ,KAAQ,oBACRI,GAAM,KAGNJ,KAAQ,wBACRI,GAAM,KAGNJ,KAAQ,yBACRI,GAAM,OAKdJ,KAAQ,aACRJ,OAAU,SACVY,SAEQR,KAAQ,kBACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,MAKdJ,KAAQ,gBACRJ,OAAU,SACVY,SAEQR,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,sBACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,aACRI,GAAM,KAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,YACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,sBACRI,GAAM,KAGNJ,KAAQ,qBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,iBACRI,GAAM,KAGNJ,KAAQ,cACRI,GAAM,KAGNJ,KAAQ,sBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,gBACRI,GAAM,KAGNJ,KAAQ,WACRI,GAAM,MAGNJ,KAAQ,aACRI,GAAM,MAGNJ,KAAQ,WACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,SACRI,GAAM,MAGNJ,KAAQ,SACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,SACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,gBACRI,GAAM,MAGNJ,KAAQ,SACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,sBACRI,GAAM,MAGNJ,KAAQ,YACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,+BACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,2BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,kBACRI,GAAM,MAGNJ,KAAQ,yBACRI,GAAM,MAGNJ,KAAQ,kBACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,4BACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,4BACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,+BACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,+BACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,uBACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,6BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,iCACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,2BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,iCACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,MAGNJ,KAAQ,oBACRI,GAAM,MAGNJ,KAAQ,sBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,uBACRI,GAAM,MAGNJ,KAAQ,yBACRI,GAAM,MAGNJ,KAAQ,yBACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,qBACRI,GAAM,MAGNJ,KAAQ,uBACRI,GAAM,MAGNJ,KAAQ,uBACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,0BACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,WACRI,GAAM,MAGNJ,KAAQ,iBACRI,GAAM,MAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,gBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,kBACRI,GAAM,MAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,4BACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,4BACRI,GAAM,OAGNJ,KAAQ,iBACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,gCACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,gCACRI,GAAM,OAGNJ,KAAQ,gCACRI,GAAM,OAGNJ,KAAQ,oBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,8BACRI,GAAM,OAGNJ,KAAQ,sBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,qBACRI,GAAM,OAGNJ,KAAQ,4BACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,iCACRI,GAAM,OAGNJ,KAAQ,kCACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,oCACRI,GAAM,OAGNJ,KAAQ,oCACRI,GAAM,OAGNJ,KAAQ,mCACRI,GAAM,OAGNJ,KAAQ,6BACRI,GAAM,OAGNJ,KAAQ,4BACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,OAGNJ,KAAQ,uBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,kBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,MAGNJ,KAAQ,UACRI,GAAM,MAGNJ,KAAQ,WACRI,GAAM,OAGNJ,KAAQ,WACRI,GAAM,OAGNJ,KAAQ,WACRI,GAAM,OAGNJ,KAAQ,mBACRI,GAAM,MAGNJ,KAAQ,mBACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,cACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,qCACRI,GAAM,QAGNJ,KAAQ,qCACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,OAGNJ,KAAQ,0BACRI,GAAM,OAGNJ,KAAQ,wBACRI,GAAM,OAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,6BACRI,GAAM,QAGNJ,KAAQ,+BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,6BACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,+BACRI,GAAM,QAGNJ,KAAQ,+BACRI,GAAM,QAGNJ,KAAQ,mCACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,uCACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,4BACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,sCACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,qCACRI,GAAM,QAGNJ,KAAQ,oCACRI,GAAM,QAGNJ,KAAQ,iCACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,+BACRI,GAAM,QAGNJ,KAAQ,8BACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,iBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,iBACRI,GAAM,QAGNJ,KAAQ,iBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,2BACRI,GAAM,QAGNJ,KAAQ,iBACRI,GAAM,QAGNJ,KAAQ,cACRI,GAAM,QAGNJ,KAAQ,cACRI,GAAM,QAGNJ,KAAQ,eACRI,GAAM,QAGNJ,KAAQ,cACRI,GAAM,QAGNJ,KAAQ,yBACRI,GAAM,QAGNJ,KAAQ,gCACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,qBACRI,GAAM,QAGNJ,KAAQ,sBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,iCACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,oBACRI,GAAM,QAGNJ,KAAQ,wBACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,0BACRI,GAAM,QAGNJ,KAAQ,mBACRI,GAAM,QAGNJ,KAAQ,uBACRI,GAAM,QAGNJ,KAAQ,kBACRI,GAAM,UAKdJ,KAAQ,cACRJ,OAAU,SACVY,SAEQR,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,IAGNJ,KAAQ,eACRI,GAAM,MAKdJ,KAAQ,oBACRJ,OAAU,SACVY,SAEQR,KAAQ,2BACRI,GAAM,IAGNJ,KAAQ,4BACRI,GAAM,MAKdJ,KAAQ,iBACRJ,OAAU,SACVY,SAEQR,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,0BACRI,GAAM,MAKdJ,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,MAKdJ,KAAQ,WACRJ,OAAU,SACVY,SAEQR,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,UACRI,GAAM,IAGNJ,KAAQ,SACRI,GAAM,MAKdJ,KAAQ,uBACRJ,OAAU,SACVY,SAEQR,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,iBACRI,GAAM,IAGNJ,KAAQ,mBACRI,GAAM,IAGNJ,KAAQ,gBACRI,GAAM,IAGNJ,KAAQ,oBACRI,GAAM,IAGNJ,KAAQ,oBACRI,GAAM,IAGNJ,KAAQ,qBACRI,GAAM,OAKtBK,aAAe,IAGvBF,QAEQP,KAAQ,YACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,cACRI,GAAM,IAGNJ,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,IAGNJ,KAAQ,YACRI,GAAM,MAKdJ,KAAQ,UACRJ,OAAU,SACVY,SAEQR,KAAQ,aACRI,GAAM,IAGNJ,KAAQ,OACRI,GAAM,IAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,KAGNJ,KAAQ,QACRI,GAAM,OAKtBK,aAAe,IAChBC;;ACz5EHnB,OAAOC,QAAe,MAAIC,QAAQ,mCAAmCqB,GACrEvB,OAAOC,QAAgB,OAAIC,QAAQ,oCAAoCqB,GACvEvB,OAAOC,QAAkB,SAAIC,QAAQ,sCAAsCqB,GAC3EvB,OAAOC,QAAkB,SAAIC,QAAQ,sCAAsCqB,GAC3EvB,OAAOC,QAAe,MAAIC,QAAQ,mCAAmCqB,GACrEvB,OAAOC,QAAa,IAAIC,QAAQ,iCAAiCqB,GACjEvB,OAAOC,QAAiB,QAAIC,QAAQ,qCAAqCqB,GACzEvB,OAAOC,QAAiB,QAAIC,QAAQ,qCAAqCqB,GACzEvB,OAAOC,QAAgB,OAAIC,QAAQ,oCAAoCqB,GACvEvB,OAAOC,QAAgB,OAAIC,QAAQ,oCAAoCqB,GACvEvB,OAAOC,QAAiB,QAAIC,QAAQ,qCAAqCqB,GACzEvB,OAAOC,QAAa,IAAIC,QAAQ,iCAAiCqB,GACjEvB,OAAOC,QAAuB,cAAIC,QAAQ,2CAA2CqB,GACrFvB,OAAOC,QAAsB,aAAIC,QAAQ,0CAA0CqB,GACnFvB,OAAOC,QAAgB,OAAIC,QAAQ,oCAAoCqB,GACvEvB,OAAOC,QAAc,KAAIC,QAAQ,kCAAkCqB,GACnEvB,OAAOC,QAAc,KAAIC,QAAQ,kCAAkCqB,GACnEvB,OAAOC,QAAe,MAAIC,QAAQ,mCAAmCqB,GACrEvB,OAAOC,QAAe,MAAIC,QAAQ,mCAAmCqB;;;;CCIrE,SAAUC,EAAQC,GAEkB,kBAAXC,SAAyBA,OAAY,IACtDA,QAAQ,QAASD,GACsB,kBAAZvB,UAA4C,gBAAXF,SAAuBA,QAAUA,OAAgB,QAC7GA,OAAgB,QAAI,WAChB,GAAI2B,EAAM,KAAMA,EAAOzB,QAAQ,QAAW,MAAO0B,IACjD,MAAOH,GAAQE,OAGlBH,EAAgB,QAAIA,EAAgB,aAAqB,WAAIC,EAAQD,EAAgB,QAAQ,OAEnGK,KAAM,SAASF,GACd,YAwLA,SAASG,GAAaC,GAClB,GAAIC,GAAE,CAAG,OAAO,YACZ,MAAOA,GAAID,EAAEE,OAASF,EAAEG,WAAWF,KAAO,MAUlD,QAASG,KACL,GAAIC,MAASC,IAAS,OAAO,YACzB,GAAyB,IAArBC,UAAUL,OACV,MAAOI,GAAGE,KAAK,IAAIC,EAAmBC,MAAMC,OAAQN,EACpDA,GAAGH,OAASK,UAAUL,OAAS,OAC/BI,EAAGM,KAAKH,EAAmBC,MAAMC,OAAQN,IACrCA,EAAGH,OAAS,GACpBW,MAAMC,UAAUF,KAAKF,MAAML,EAAIE,YAmjCvC,QAASQ,GAAaC,EAAQC,EAAQC,EAAMC,EAAMC,GAC9C,GAAIvB,GAAGwB,EACHC,EAAgB,EAATF,EAAaD,EAAO,EAC3BI,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBE,GAAS,EACTxB,EAAIiB,EAAQE,EAAS,EAAK,EAC1BM,EAAIR,GAAQ,EAAI,EAChBlB,EAAIgB,EAAOC,EAAShB,EAOxB,KALAA,GAAKyB,EAEL7B,EAAIG,GAAM,IAAOyB,GAAU,EAC3BzB,KAAQyB,EACRA,GAASH,EACFG,EAAQ,EAAG5B,EAAQ,IAAJA,EAAUmB,EAAOC,EAAShB,GAAIA,GAAKyB,EAAGD,GAAS,GAKrE,IAHAJ,EAAIxB,GAAM,IAAO4B,GAAU,EAC3B5B,KAAQ4B,EACRA,GAASN,EACFM,EAAQ,EAAGJ,EAAQ,IAAJA,EAAUL,EAAOC,EAAShB,GAAIA,GAAKyB,EAAGD,GAAS,GAErE,GAAU,IAAN5B,EACAA,EAAI,EAAI2B,MACL,CAAA,GAAI3B,IAAM0B,EACb,MAAOF,GAAIM,IAAsBC,EAAAA,GAAd5B,GAAK,EAAI,EAE5BqB,IAAQQ,KAAKC,IAAI,EAAGX,GACpBtB,GAAQ2B,EAEZ,OAAQxB,GAAK,EAAI,GAAKqB,EAAIQ,KAAKC,IAAI,EAAGjC,EAAIsB,GAa9C,QAASY,GAAcf,EAAQgB,EAAOf,EAAQC,EAAMC,EAAMC,GACtD,GAAIvB,GAAGwB,EAAGY,EACNX,EAAgB,EAATF,EAAaD,EAAO,EAC3BI,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBW,EAAe,KAATf,EAAcU,KAAKC,IAAI,GAAI,IAAMD,KAAKC,IAAI,GAAI,IAAM,EAC1D7B,EAAIiB,EAAO,EAAKE,EAAS,EACzBM,EAAIR,EAAO,GAAK,EAChBlB,EAAIgC,EAAQ,GAAgB,IAAVA,GAAe,EAAIA,EAAQ,EAAK,EAAI,CAmC1D,KAjCAA,EAAQH,KAAKM,IAAIH,GAEbI,MAAMJ,IAAUA,IAAUJ,EAAAA,GAC1BP,EAAIe,MAAMJ,GAAS,EAAI,EACvBnC,EAAI0B,IAEJ1B,EAAIgC,KAAKQ,MAAMR,KAAKS,IAAIN,GAASH,KAAKU,KAClCP,GAASC,EAAIJ,KAAKC,IAAI,GAAIjC,IAAM,IAChCA,IACAoC,GAAK,GAGLD,GADAnC,EAAI2B,GAAS,EACJU,EAAKD,EAELC,EAAKL,KAAKC,IAAI,EAAG,EAAIN,GAE9BQ,EAAQC,GAAK,IACbpC,IACAoC,GAAK,GAGLpC,EAAI2B,GAASD,GACbF,EAAI,EACJxB,EAAI0B,GACG1B,EAAI2B,GAAS,GACpBH,GAAKW,EAAQC,EAAI,GAAKJ,KAAKC,IAAI,EAAGX,GAClCtB,GAAQ2B,IAERH,EAAIW,EAAQH,KAAKC,IAAI,EAAGN,EAAQ,GAAKK,KAAKC,IAAI,EAAGX,GACjDtB,EAAI,IAILsB,GAAQ,EAAGH,EAAOC,EAAShB,GAAS,IAAJoB,EAAUpB,GAAKyB,EAAGL,GAAK,IAAKF,GAAQ,GAI3E,IAFAtB,EAAKA,GAAKsB,EAAQE,EAClBC,GAAQH,EACDG,EAAO,EAAGN,EAAOC,EAAShB,GAAS,IAAJJ,EAAUI,GAAKyB,EAAG7B,GAAK,IAAKyB,GAAQ,GAE1EN,EAAOC,EAAShB,EAAIyB,IAAU,IAAJ1B,EA50C9B,GAAIwC,GAAa,SAASC,EAAUC,EAAcC,GAO9C,OANwB,KAAbF,IACPA,EAAWD,EAAWI,sBACE,KAAjBF,IACPA,EAAeF,EAAWK,oBACN,KAAbF,IACPA,EAAWH,EAAWM,mBACrBH,EAAU,CAEX,IADAF,GAAsB,GACP,EACX,KAAMM,YAAW,mBACrBL,KAAiBA,EACjBC,IAAaA,EAQjB7C,KAAKkB,OAAsB,IAAbyB,EAAiBO,EAAe,GAAIC,aAAYR,GAO9D3C,KAAKoD,KAAoB,IAAbT,EAAiB,KAAO,GAAIU,YAAWrD,KAAKkB,QASxDlB,KAAKmB,OAAS,EASdnB,KAAKsD,cAAgB,EASrBtD,KAAKuD,MAAQZ,EAOb3C,KAAK4C,aAAeA,EAOpB5C,KAAK6C,SAAWA,EASpBH,GAAWc,QAAU,QAQrBd,EAAWe,eAAgB,EAQ3Bf,EAAWgB,YAAa,EAOxBhB,EAAWI,iBAAmB,GAO9BJ,EAAWK,eAAiBL,EAAWgB,WAOvChB,EAAWM,kBAAmB,EAU9BN,EAAW5C,KAAOA,GAAQ,IAM1B,IAAI6D,GAAsBjB,EAAW1B,SASrC2C,GAAoBC,iBAEpBC,OAAOC,eAAeH,EAAqB,oBACvCzB,OAAO,EACP6B,YAAY,EACZC,cAAc,GASlB,IAAId,GAAe,GAAIC,aAAY,GAO/BxC,EAAqBE,OAAOoD,YAsChCvB,GAAWwB,SAAW,WAClB,MAAOb,aAYXX,EAAWyB,SAAW,SAASxB,EAAUC,EAAcC,GACnD,MAAO,IAAIH,GAAWC,EAAUC,EAAcC,IAelDH,EAAW0B,OAAS,SAASC,EAASC,EAAU1B,EAAcC,GAClC,iBAAbyB,IAA8C,gBAAbA,KACxCzB,EAAWD,EACXA,EAAe0B,EACfA,MAAWC,GAGf,KAAK,GAA2BnE,GAD5BuC,EAAW,EACNxC,EAAE,EAAGqE,EAAEH,EAAQjE,OAAgBD,EAAEqE,IAAKrE,EACtCuC,EAAW+B,aAAaJ,EAAQlE,MACjCkE,EAAQlE,GAAKuC,EAAWgC,KAAKL,EAAQlE,GAAImE,KAC7ClE,EAASiE,EAAQlE,GAAGoD,MAAQc,EAAQlE,GAAGgB,QAC1B,IAAGwB,GAAYvC,EAEhC,IAAiB,IAAbuC,EACA,MAAO,IAAID,GAAW,EAAGE,EAAcC,EAC3C,IACI8B,GADAC,EAAK,GAAIlC,GAAWC,EAAUC,EAAcC,EAE3C,KAAL1C,EAAE,EAAUA,EAAEqE,GACVG,EAAKN,EAAQlE,MACbC,EAASuE,EAAGpB,MAAQoB,EAAGxD,SACT,IACdyD,EAAGxB,KAAKyB,IAAIF,EAAGvB,KAAK0B,SAASH,EAAGxD,OAAQwD,EAAGpB,OAAQqB,EAAGzD,QACtDyD,EAAGzD,QAAUf,EAIjB,OAFAwE,GAAGrB,MAAQqB,EAAGzD,OACdyD,EAAGzD,OAAS,EACLyD,GASXlC,EAAW+B,aAAe,SAASG,GAC/B,OAA0C,KAAlCA,GAAMA,EAAqB,mBAOvClC,EAAW3D,KAAO,WACd,MAAOoE,cAeXT,EAAWgC,KAAO,SAASxD,EAAQoD,EAAU1B,EAAcC,GAMvD,GALwB,gBAAbyB,KACPzB,EAAWD,EACXA,EAAe0B,EACfA,MAAWC,IAEO,gBAAXrD,GAGP,WAFwB,KAAboD,IACPA,EAAW,QACPA,GACJ,IAAK,SACD,MAAO5B,GAAWqC,WAAW7D,EAAQ0B,EACzC,KAAK,MACD,MAAOF,GAAWsC,QAAQ9D,EAAQ0B,EACtC,KAAK,SACD,MAAOF,GAAWuC,WAAW/D,EAAQ0B,EACzC,KAAK,OACD,MAAOF,GAAWwC,SAAShE,EAAQ0B,EACvC,KAAK,QACD,MAAOF,GAAWyC,UAAUjE,EAAQ0B,EACxC,SACI,KAAMwC,OAAM,yBAAyBd,GAGjD,GAAe,OAAXpD,GAAqC,gBAAXA,GAC1B,KAAMmE,WAAU,iBACpB,IAAIT,EACJ,IAAIlC,EAAW+B,aAAavD,GAGxB,MAFA0D,GAAKjB,EAAoB2B,MAAMC,KAAKrE,GACpC0D,EAAGtB,cAAgB,EACZsB,CAEX,IAAI1D,YAAkBmC,YAClBuB,EAAK,GAAIlC,GAAW,EAAGE,EAAcC,GACjC3B,EAAOd,OAAS,IAChBwE,EAAG1D,OAASA,EAAOA,OACnB0D,EAAGzD,OAASD,EAAOsE,WACnBZ,EAAGrB,MAAQrC,EAAOsE,WAAatE,EAAOuE,WACtCb,EAAGxB,KAAO,GAAIC,YAAWnC,EAAOA,aAEjC,IAAIA,YAAkBiC,aACzByB,EAAK,GAAIlC,GAAW,EAAGE,EAAcC,GACjC3B,EAAOuE,WAAa,IACpBb,EAAG1D,OAASA,EACZ0D,EAAGzD,OAAS,EACZyD,EAAGrB,MAAQrC,EAAOuE,WAClBb,EAAGxB,KAAOlC,EAAOuE,WAAa,EAAI,GAAIpC,YAAWnC,GAAU,UAE5D,CAAA,GAA+C,mBAA3C2C,OAAO7C,UAAU0E,SAASH,KAAKrE,GAMtC,KAAMmE,WAAU,iBALhBT,GAAK,GAAIlC,GAAWxB,EAAOd,OAAQwC,EAAcC,GACjD+B,EAAGrB,MAAQrC,EAAOd,MAClB,KAAK,GAAID,GAAE,EAAGA,EAAEe,EAAOd,SAAUD,EAC7ByE,EAAGxB,KAAKjD,GAAKe,EAAOf,GAG5B,MAAOyE,IAUXjB,EAAoBgC,YAAc,SAASzD,EAAOf,GAChD,GAAIyE,OAA6B,KAAXzE,CAEtB,IADIyE,IAAUzE,EAASnB,KAAKmB,SACvBnB,KAAK6C,SAAU,CAClB,KAAMX,YAAiBnB,QACrB,KAAMsE,WAAU,+BAClB,IAAsB,gBAAXlE,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,mBAAmBlE,EAAO,oBAE9C,KADAA,KAAY,GACC,GAAKA,EAAS,EAAInB,KAAKkB,OAAOuE,WACvC,KAAMxC,YAAW,wBAAwB9B,EAAO,YAAgBnB,KAAKkB,OAAOuE,YAGlF,GAIIjB,GAJAqB,EAAQ1E,EACR2E,EAAO5D,EAAM9B,OACb2F,EAASD,GAAQ,EACjBE,EAAM,CAKV,KAFA7E,GAAUnB,KAAKiG,cAAcH,EAAK3E,GAE5B4E,KACJvB,EAAsB,IAAftC,EAAM8D,MACU,IAAf9D,EAAM8D,OAAe,GACN,IAAf9D,EAAM8D,OAAe,GACN,IAAf9D,EAAM8D,OAAe,GACN,IAAf9D,EAAM8D,OAAe,GACN,IAAf9D,EAAM8D,OAAe,GACN,IAAf9D,EAAM8D,OAAe,GACN,IAAf9D,EAAM8D,OAAe,EAC7BhG,KAAKkG,UAAU1B,EAAErD,IAGnB,IAAG6E,EAAMF,EAAM,CACb,GAAIvE,GAAI,CACR,KADWiD,EAAI,EACTwB,EAAMF,GAAMtB,IAA2B,IAAftC,EAAM8D,OAAgBzE,GACpDvB,MAAKkG,UAAU1B,EAAErD,KAGnB,MAAIyE,IACF5F,KAAKmB,OAASA,EACPnB,MAEFmB,EAAS0E,GASlBlC,EAAoBwC,WAAa,SAAShF,GACxC,GAAIyE,OAA6B,KAAXzE,CAClByE,KAAUzE,EAASnB,KAAKmB,OAE5B,IAKIqD,GALA4B,EAAMpG,KAAKqG,aAAalF,GACxB2E,EAAOM,EAAIlE,MACX6D,EAASD,GAAQ,EACjBE,EAAM,EACN9D,IAKJ,KAFAf,GAAUiF,EAAIhG,OAER2F,KACJvB,EAAIxE,KAAKsG,SAASnF,KAClBe,EAAM8D,QAAgB,EAAJxB,GAClBtC,EAAM8D,QAAgB,EAAJxB,GAClBtC,EAAM8D,QAAgB,EAAJxB,GAClBtC,EAAM8D,QAAgB,EAAJxB,GAClBtC,EAAM8D,QAAgB,GAAJxB,GAClBtC,EAAM8D,QAAgB,GAAJxB,GAClBtC,EAAM8D,QAAgB,GAAJxB,GAClBtC,EAAM8D,QAAgB,IAAJxB,EAGpB,IAAGwB,EAAMF,EAAM,CACb,GAAIvE,GAAI,CAER,KADAiD,EAAIxE,KAAKsG,SAASnF,KACZ6E,EAAMF,GAAM5D,EAAM8D,QAAaxB,GAAMjD,IAAQ,GAMrD,MAHIqE,KACF5F,KAAKmB,OAASA,GAETe,GASTyB,EAAoB4C,UAAY,SAASnG,EAAQe,GAC7C,GAAIyE,OAA6B,KAAXzE,CAEtB,IADIyE,IAAUzE,EAASnB,KAAKmB,SACvBnB,KAAK6C,SAAU,CAChB,GAAsB,gBAAX1B,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,mBAAmBlE,EAAO,oBAE9C,KADAA,KAAY,GACC,GAAKA,EAASf,EAASJ,KAAKkB,OAAOuE,WAC5C,KAAMxC,YAAW,wBAAwB9B,EAAO,MAAMf,EAAO,QAAQJ,KAAKkB,OAAOuE,YAEzF,GAAIe,GAAQxG,KAAKwG,MAAMrF,EAAQA,EAASf,EAExC,OADIwF,KAAU5F,KAAKmB,QAAUf,GACtBoG,GAcX7C,EAAoB8C,WAAa9C,EAAoB+C,OAWrD/C,EAAoBgD,UAAY,SAASzE,EAAOf,GAC5C,GAAIyE,OAA6B,KAAXzE,CAEtB,IADIyE,IAAUzE,EAASnB,KAAKmB,SACvBnB,KAAK6C,SAAU,CAChB,GAAqB,gBAAVX,IAAsBA,EAAQ,GAAM,EAC3C,KAAMmD,WAAU,kBAAkBnD,EAAM,oBAE5C,IADAA,GAAS,EACa,gBAAXf,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,mBAAmBlE,EAAO,oBAE9C,KADAA,KAAY,GACC,GAAKA,EAAS,EAAInB,KAAKkB,OAAOuE,WACvC,KAAMxC,YAAW,wBAAwB9B,EAAO,YAAgBnB,KAAKkB,OAAOuE,YAEpFtE,GAAU,CACV,IAAIyF,GAAY5G,KAAKkB,OAAOuE,UAM5B,OALItE,GAASyF,GACT5G,KAAK6G,QAAQD,GAAa,GAAKzF,EAASyF,EAAYzF,GACxDA,GAAU,EACVnB,KAAKoD,KAAKjC,GAAUe,EAChB0D,IAAU5F,KAAKmB,QAAU,GACtBnB,MAWX2D,EAAoBuC,UAAYvC,EAAoBgD,UAQpDhD,EAAoBmD,SAAW,SAAS3F,GACpC,GAAIyE,OAA6B,KAAXzE,CAEtB,IADIyE,IAAUzE,EAASnB,KAAKmB,SACvBnB,KAAK6C,SAAU,CAChB,GAAsB,gBAAX1B,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,mBAAmBlE,EAAO,oBAE9C,KADAA,KAAY,GACC,GAAKA,EAAS,EAAInB,KAAKkB,OAAOuE,WACvC,KAAMxC,YAAW,wBAAwB9B,EAAO,YAAgBnB,KAAKkB,OAAOuE,YAEpF,GAAIvD,GAAQlC,KAAKoD,KAAKjC,EAGtB,OAFuB,OAAV,IAARe,KAAwBA,IAAU,IAAOA,EAAQ,IAClD0D,IAAU5F,KAAKmB,QAAU,GACtBe,GAUXyB,EAAoB2C,SAAW3C,EAAoBmD,SASnDnD,EAAoBoD,WAAa,SAAS7E,EAAOf,GAC7C,GAAIyE,OAA6B,KAAXzE,CAEtB,IADIyE,IAAUzE,EAASnB,KAAKmB,SACvBnB,KAAK6C,SAAU,CAChB,GAAqB,gBAAVX,IAAsBA,EAAQ,GAAM,EAC3C,KAAMmD,WAAU,kBAAkBnD,EAAM,oBAE5C,IADAA,KAAW,EACW,gBAAXf,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,mBAAmBlE,EAAO,oBAE9C,KADAA,KAAY,GACC,GAAKA,EAAS,EAAInB,KAAKkB,OAAOuE,WACvC,KAAMxC,YAAW,wBAAwB9B,EAAO,YAAgBnB,KAAKkB,OAAOuE,YAEpFtE,GAAU,CACV,IAAI6F,GAAYhH,KAAKkB,OAAOuE,UAM5B,OALItE,GAAS6F,GACThH,KAAK6G,QAAQG,GAAa,GAAK7F,EAAS6F,EAAY7F,GACxDA,GAAU,EACVnB,KAAKoD,KAAKjC,GAAUe,EAChB0D,IAAU5F,KAAKmB,QAAU,GACtBnB,MAWX2D,EAAoBsD,WAAatD,EAAoBoD,WAQrDpD,EAAoBuD,UAAY,SAAS/F,GACrC,GAAIyE,OAA6B,KAAXzE,CAEtB,IADIyE,IAAUzE,EAASnB,KAAKmB,SACvBnB,KAAK6C,SAAU,CAChB,GAAsB,gBAAX1B,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,mBAAmBlE,EAAO,oBAE9C,KADAA,KAAY,GACC,GAAKA,EAAS,EAAInB,KAAKkB,OAAOuE,WACvC,KAAMxC,YAAW,wBAAwB9B,EAAO,YAAgBnB,KAAKkB,OAAOuE,YAEpF,GAAIvD,GAAQlC,KAAKoD,KAAKjC,EAEtB,OADIyE,KAAU5F,KAAKmB,QAAU,GACtBe,GAUXyB,EAAoBwD,UAAYxD,EAAoBuD,UAYpDvD,EAAoByD,WAAa,SAASlF,EAAOf,GAC7C,GAAIyE,OAA6B,KAAXzE,CAEtB,IADIyE,IAAUzE,EAASnB,KAAKmB,SACvBnB,KAAK6C,SAAU,CAChB,GAAqB,gBAAVX,IAAsBA,EAAQ,GAAM,EAC3C,KAAMmD,WAAU,kBAAkBnD,EAAM,oBAE5C,IADAA,GAAS,EACa,gBAAXf,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,mBAAmBlE,EAAO,oBAE9C,KADAA,KAAY,GACC,GAAKA,EAAS,EAAInB,KAAKkB,OAAOuE,WACvC,KAAMxC,YAAW,wBAAwB9B,EAAO,YAAgBnB,KAAKkB,OAAOuE,YAEpFtE,GAAU,CACV,IAAIkG,GAAYrH,KAAKkB,OAAOuE,UAY5B,OAXItE,GAASkG,GACTrH,KAAK6G,QAAQQ,GAAa,GAAKlG,EAASkG,EAAYlG,GACxDA,GAAU,EACNnB,KAAK4C,cACL5C,KAAKoD,KAAKjC,EAAO,IAAc,MAARe,KAAoB,EAC3ClC,KAAKoD,KAAKjC,GAAqB,IAARe,IAEvBlC,KAAKoD,KAAKjC,IAAqB,MAARe,KAAoB,EAC3ClC,KAAKoD,KAAKjC,EAAO,GAAc,IAARe,GAEvB0D,IAAU5F,KAAKmB,QAAU,GACtBnB,MAYX2D,EAAoB2D,WAAa3D,EAAoByD,WAUrDzD,EAAoB4D,UAAY,SAASpG,GACrC,GAAIyE,OAA6B,KAAXzE,CAEtB,IADIyE,IAAUzE,EAASnB,KAAKmB,SACvBnB,KAAK6C,SAAU,CAChB,GAAsB,gBAAX1B,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,mBAAmBlE,EAAO,oBAE9C,KADAA,KAAY,GACC,GAAKA,EAAS,EAAInB,KAAKkB,OAAOuE,WACvC,KAAMxC,YAAW,wBAAwB9B,EAAO,YAAgBnB,KAAKkB,OAAOuE,YAEpF,GAAIvD,GAAQ,CAUZ,OATIlC,MAAK4C,cACLV,EAASlC,KAAKoD,KAAKjC,GACnBe,GAASlC,KAAKoD,KAAKjC,EAAO,IAAM,IAEhCe,EAASlC,KAAKoD,KAAKjC,IAAa,EAChCe,GAASlC,KAAKoD,KAAKjC,EAAO,IAEL,QAAZ,MAARe,KAA4BA,IAAU,MAASA,EAAQ,IACxD0D,IAAU5F,KAAKmB,QAAU,GACtBe,GAYXyB,EAAoB6D,UAAY7D,EAAoB4D,UAUpD5D,EAAoB8D,YAAc,SAASvF,EAAOf,GAC9C,GAAIyE,OAA6B,KAAXzE,CAEtB,IADIyE,IAAUzE,EAASnB,KAAKmB,SACvBnB,KAAK6C,SAAU,CAChB,GAAqB,gBAAVX,IAAsBA,EAAQ,GAAM,EAC3C,KAAMmD,WAAU,kBAAkBnD,EAAM,oBAE5C,IADAA,KAAW,EACW,gBAAXf,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,mBAAmBlE,EAAO,oBAE9C,KADAA,KAAY,GACC,GAAKA,EAAS,EAAInB,KAAKkB,OAAOuE,WACvC,KAAMxC,YAAW,wBAAwB9B,EAAO,YAAgBnB,KAAKkB,OAAOuE,YAEpFtE,GAAU,CACV,IAAIuG,GAAY1H,KAAKkB,OAAOuE,UAY5B,OAXItE,GAASuG,GACT1H,KAAK6G,QAAQa,GAAa,GAAKvG,EAASuG,EAAYvG,GACxDA,GAAU,EACNnB,KAAK4C,cACL5C,KAAKoD,KAAKjC,EAAO,IAAc,MAARe,KAAoB,EAC3ClC,KAAKoD,KAAKjC,GAAqB,IAARe,IAEvBlC,KAAKoD,KAAKjC,IAAqB,MAARe,KAAoB,EAC3ClC,KAAKoD,KAAKjC,EAAO,GAAc,IAARe,GAEvB0D,IAAU5F,KAAKmB,QAAU,GACtBnB,MAYX2D,EAAoBgE,YAAchE,EAAoB8D,YAUtD9D,EAAoBiE,WAAa,SAASzG,GACtC,GAAIyE,OAA6B,KAAXzE,CAEtB,IADIyE,IAAUzE,EAASnB,KAAKmB,SACvBnB,KAAK6C,SAAU,CAChB,GAAsB,gBAAX1B,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,mBAAmBlE,EAAO,oBAE9C,KADAA,KAAY,GACC,GAAKA,EAAS,EAAInB,KAAKkB,OAAOuE,WACvC,KAAMxC,YAAW,wBAAwB9B,EAAO,YAAgBnB,KAAKkB,OAAOuE,YAEpF,GAAIvD,GAAQ,CASZ,OARIlC,MAAK4C,cACLV,EAASlC,KAAKoD,KAAKjC,GACnBe,GAASlC,KAAKoD,KAAKjC,EAAO,IAAM,IAEhCe,EAASlC,KAAKoD,KAAKjC,IAAa,EAChCe,GAASlC,KAAKoD,KAAKjC,EAAO,IAE1ByE,IAAU5F,KAAKmB,QAAU,GACtBe,GAYXyB,EAAoBkE,WAAalE,EAAoBiE,WAUrDjE,EAAoBmE,WAAa,SAAS5F,EAAOf,GAC7C,GAAIyE,OAA6B,KAAXzE,CAEtB,IADIyE,IAAUzE,EAASnB,KAAKmB,SACvBnB,KAAK6C,SAAU,CAChB,GAAqB,gBAAVX,IAAsBA,EAAQ,GAAM,EAC3C,KAAMmD,WAAU,kBAAkBnD,EAAM,oBAE5C,IADAA,GAAS,EACa,gBAAXf,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,mBAAmBlE,EAAO,oBAE9C,KADAA,KAAY,GACC,GAAKA,EAAS,EAAInB,KAAKkB,OAAOuE,WACvC,KAAMxC,YAAW,wBAAwB9B,EAAO,YAAgBnB,KAAKkB,OAAOuE,YAEpFtE,GAAU,CACV,IAAI4G,GAAY/H,KAAKkB,OAAOuE,UAgB5B,OAfItE,GAAS4G,GACT/H,KAAK6G,QAAQkB,GAAa,GAAK5G,EAAS4G,EAAY5G,GACxDA,GAAU,EACNnB,KAAK4C,cACL5C,KAAKoD,KAAKjC,EAAO,GAAMe,IAAU,GAAM,IACvClC,KAAKoD,KAAKjC,EAAO,GAAMe,IAAU,GAAM,IACvClC,KAAKoD,KAAKjC,EAAO,GAAMe,IAAW,EAAK,IACvClC,KAAKoD,KAAKjC,GAA6B,IAAhBe,IAEvBlC,KAAKoD,KAAKjC,GAAae,IAAU,GAAM,IACvClC,KAAKoD,KAAKjC,EAAO,GAAMe,IAAU,GAAM,IACvClC,KAAKoD,KAAKjC,EAAO,GAAMe,IAAW,EAAK,IACvClC,KAAKoD,KAAKjC,EAAO,GAAsB,IAAhBe,GAEvB0D,IAAU5F,KAAKmB,QAAU,GACtBnB,MASX2D,EAAoBqE,SAAWrE,EAAoBmE,WAQnDnE,EAAoBsE,UAAY,SAAS9G,GACrC,GAAIyE,OAA6B,KAAXzE,CAEtB,IADIyE,IAAUzE,EAASnB,KAAKmB,SACvBnB,KAAK6C,SAAU,CAChB,GAAsB,gBAAX1B,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,mBAAmBlE,EAAO,oBAE9C,KADAA,KAAY,GACC,GAAKA,EAAS,EAAInB,KAAKkB,OAAOuE,WACvC,KAAMxC,YAAW,wBAAwB9B,EAAO,YAAgBnB,KAAKkB,OAAOuE,YAEpF,GAAIvD,GAAQ,CAcZ,OAbIlC,MAAK4C,cACLV,EAASlC,KAAKoD,KAAKjC,EAAO,IAAM,GAChCe,GAASlC,KAAKoD,KAAKjC,EAAO,IAAO,EACjCe,GAASlC,KAAKoD,KAAKjC,GACnBe,GAASlC,KAAKoD,KAAKjC,EAAO,IAAM,KAAO,IAEvCe,EAASlC,KAAKoD,KAAKjC,EAAO,IAAM,GAChCe,GAASlC,KAAKoD,KAAKjC,EAAO,IAAO,EACjCe,GAASlC,KAAKoD,KAAKjC,EAAO,GAC1Be,GAASlC,KAAKoD,KAAKjC,IAAa,KAAO,GAE3Ce,GAAS,EACL0D,IAAU5F,KAAKmB,QAAU,GACtBe,GASXyB,EAAoBuE,QAAUvE,EAAoBsE,UAQlDtE,EAAoBwE,YAAc,SAASjG,EAAOf,GAC9C,GAAIyE,OAA6B,KAAXzE,CAEtB,IADIyE,IAAUzE,EAASnB,KAAKmB,SACvBnB,KAAK6C,SAAU,CAChB,GAAqB,gBAAVX,IAAsBA,EAAQ,GAAM,EAC3C,KAAMmD,WAAU,kBAAkBnD,EAAM,oBAE5C,IADAA,KAAW,EACW,gBAAXf,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,mBAAmBlE,EAAO,oBAE9C,KADAA,KAAY,GACC,GAAKA,EAAS,EAAInB,KAAKkB,OAAOuE,WACvC,KAAMxC,YAAW,wBAAwB9B,EAAO,YAAgBnB,KAAKkB,OAAOuE,YAEpFtE,GAAU,CACV,IAAIiH,GAAYpI,KAAKkB,OAAOuE,UAgB5B,OAfItE,GAASiH,GACTpI,KAAK6G,QAAQuB,GAAa,GAAKjH,EAASiH,EAAYjH,GACxDA,GAAU,EACNnB,KAAK4C,cACL5C,KAAKoD,KAAKjC,EAAO,GAAMe,IAAU,GAAM,IACvClC,KAAKoD,KAAKjC,EAAO,GAAMe,IAAU,GAAM,IACvClC,KAAKoD,KAAKjC,EAAO,GAAMe,IAAW,EAAK,IACvClC,KAAKoD,KAAKjC,GAA6B,IAAhBe,IAEvBlC,KAAKoD,KAAKjC,GAAae,IAAU,GAAM,IACvClC,KAAKoD,KAAKjC,EAAO,GAAMe,IAAU,GAAM,IACvClC,KAAKoD,KAAKjC,EAAO,GAAMe,IAAW,EAAK,IACvClC,KAAKoD,KAAKjC,EAAO,GAAsB,IAAhBe,GAEvB0D,IAAU5F,KAAKmB,QAAU,GACtBnB,MAUX2D,EAAoB0E,YAAc1E,EAAoBwE,YAQtDxE,EAAoB2E,WAAa,SAASnH,GACtC,GAAIyE,OAA6B,KAAXzE,CAEtB,IADIyE,IAAUzE,EAASnB,KAAKmB,SACvBnB,KAAK6C,SAAU,CAChB,GAAsB,gBAAX1B,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,mBAAmBlE,EAAO,oBAE9C,KADAA,KAAY,GACC,GAAKA,EAAS,EAAInB,KAAKkB,OAAOuE,WACvC,KAAMxC,YAAW,wBAAwB9B,EAAO,YAAgBnB,KAAKkB,OAAOuE,YAEpF,GAAIvD,GAAQ,CAaZ,OAZIlC,MAAK4C,cACLV,EAASlC,KAAKoD,KAAKjC,EAAO,IAAM,GAChCe,GAASlC,KAAKoD,KAAKjC,EAAO,IAAO,EACjCe,GAASlC,KAAKoD,KAAKjC,GACnBe,GAASlC,KAAKoD,KAAKjC,EAAO,IAAM,KAAO,IAEvCe,EAASlC,KAAKoD,KAAKjC,EAAO,IAAM,GAChCe,GAASlC,KAAKoD,KAAKjC,EAAO,IAAO,EACjCe,GAASlC,KAAKoD,KAAKjC,EAAO,GAC1Be,GAASlC,KAAKoD,KAAKjC,IAAa,KAAO,GAEvCyE,IAAU5F,KAAKmB,QAAU,GACtBe,GAUXyB,EAAoB4E,WAAa5E,EAAoB2E,WAIjDxI,IASA6D,EAAoB6E,WAAa,SAAStG,EAAOf,GAC7C,GAAIyE,OAA6B,KAAXzE,CAEtB,IADIyE,IAAUzE,EAASnB,KAAKmB,SACvBnB,KAAK6C,SAAU,CAChB,GAAqB,gBAAVX,GACPA,EAAQpC,EAAK2I,WAAWvG,OACvB,IAAqB,gBAAVA,GACZA,EAAQpC,EAAK4I,WAAWxG,OACvB,MAAMA,GAASA,YAAiBpC,IACjC,KAAMuF,WAAU,kBAAkBnD,EAAM,4BAC5C,IAAsB,gBAAXf,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,mBAAmBlE,EAAO,oBAE9C,KADAA,KAAY,GACC,GAAKA,EAAS,EAAInB,KAAKkB,OAAOuE,WACvC,KAAMxC,YAAW,wBAAwB9B,EAAO,YAAgBnB,KAAKkB,OAAOuE,YAE/D,gBAAVvD,GACPA,EAAQpC,EAAK2I,WAAWvG,GACF,gBAAVA,KACZA,EAAQpC,EAAK4I,WAAWxG,IAC5Bf,GAAU,CACV,IAAIwH,GAAY3I,KAAKkB,OAAOuE,UACxBtE,GAASwH,GACT3I,KAAK6G,QAAQ8B,GAAa,GAAKxH,EAASwH,EAAYxH,GACxDA,GAAU,CACV,IAAIyH,GAAK1G,EAAM2G,IACXC,EAAK5G,EAAM6G,IAuBf,OAtBI/I,MAAK4C,cACL5C,KAAKoD,KAAKjC,EAAO,GAAMyH,IAAO,GAAM,IACpC5I,KAAKoD,KAAKjC,EAAO,GAAMyH,IAAO,GAAM,IACpC5I,KAAKoD,KAAKjC,EAAO,GAAMyH,IAAQ,EAAK,IACpC5I,KAAKoD,KAAKjC,GAA0B,IAAbyH,EACvBzH,GAAU,EACVnB,KAAKoD,KAAKjC,EAAO,GAAM2H,IAAO,GAAM,IACpC9I,KAAKoD,KAAKjC,EAAO,GAAM2H,IAAO,GAAM,IACpC9I,KAAKoD,KAAKjC,EAAO,GAAM2H,IAAQ,EAAK,IACpC9I,KAAKoD,KAAKjC,GAA0B,IAAb2H,IAEvB9I,KAAKoD,KAAKjC,GAAa2H,IAAO,GAAM,IACpC9I,KAAKoD,KAAKjC,EAAO,GAAM2H,IAAO,GAAM,IACpC9I,KAAKoD,KAAKjC,EAAO,GAAM2H,IAAQ,EAAK,IACpC9I,KAAKoD,KAAKjC,EAAO,GAAmB,IAAb2H,EACvB3H,GAAU,EACVnB,KAAKoD,KAAKjC,GAAayH,IAAO,GAAM,IACpC5I,KAAKoD,KAAKjC,EAAO,GAAMyH,IAAO,GAAM,IACpC5I,KAAKoD,KAAKjC,EAAO,GAAMyH,IAAQ,EAAK,IACpC5I,KAAKoD,KAAKjC,EAAO,GAAmB,IAAbyH,GAEvBhD,IAAU5F,KAAKmB,QAAU,GACtBnB,MAUX2D,EAAoBqF,UAAYrF,EAAoB6E,WAQpD7E,EAAoBsF,UAAY,SAAS9H,GACrC,GAAIyE,OAA6B,KAAXzE,CAEtB,IADIyE,IAAUzE,EAASnB,KAAKmB,SACvBnB,KAAK6C,SAAU,CAChB,GAAsB,gBAAX1B,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,mBAAmBlE,EAAO,oBAE9C,KADAA,KAAY,GACC,GAAKA,EAAS,EAAInB,KAAKkB,OAAOuE,WACvC,KAAMxC,YAAW,wBAAwB9B,EAAO,YAAgBnB,KAAKkB,OAAOuE,YAEpF,GAAImD,GAAK,EACLE,EAAK,CACL9I,MAAK4C,cACLgG,EAAM5I,KAAKoD,KAAKjC,EAAO,IAAM,GAC7ByH,GAAM5I,KAAKoD,KAAKjC,EAAO,IAAO,EAC9ByH,GAAM5I,KAAKoD,KAAKjC,GAChByH,GAAM5I,KAAKoD,KAAKjC,EAAO,IAAM,KAAO,EACpCA,GAAU,EACV2H,EAAM9I,KAAKoD,KAAKjC,EAAO,IAAM,GAC7B2H,GAAM9I,KAAKoD,KAAKjC,EAAO,IAAO,EAC9B2H,GAAM9I,KAAKoD,KAAKjC,GAChB2H,GAAM9I,KAAKoD,KAAKjC,EAAO,IAAM,KAAO,IAEpC2H,EAAM9I,KAAKoD,KAAKjC,EAAO,IAAM,GAC7B2H,GAAM9I,KAAKoD,KAAKjC,EAAO,IAAO,EAC9B2H,GAAM9I,KAAKoD,KAAKjC,EAAO,GACvB2H,GAAM9I,KAAKoD,KAAKjC,IAAa,KAAO,EACpCA,GAAU,EACVyH,EAAM5I,KAAKoD,KAAKjC,EAAO,IAAM,GAC7ByH,GAAM5I,KAAKoD,KAAKjC,EAAO,IAAO,EAC9ByH,GAAM5I,KAAKoD,KAAKjC,EAAO,GACvByH,GAAM5I,KAAKoD,KAAKjC,IAAa,KAAO,EAExC,IAAIe,GAAQ,GAAIpC,GAAK8I,EAAIE,GAAI,EAE7B,OADIlD,KAAU5F,KAAKmB,QAAU,GACtBe,GASXyB,EAAoBuF,SAAWvF,EAAoBsF,UASnDtF,EAAoBwF,YAAc,SAASjH,EAAOf,GAC9C,GAAIyE,OAA6B,KAAXzE,CAEtB,IADIyE,IAAUzE,EAASnB,KAAKmB,SACvBnB,KAAK6C,SAAU,CAChB,GAAqB,gBAAVX,GACPA,EAAQpC,EAAK2I,WAAWvG,OACvB,IAAqB,gBAAVA,GACZA,EAAQpC,EAAK4I,WAAWxG,OACvB,MAAMA,GAASA,YAAiBpC,IACjC,KAAMuF,WAAU,kBAAkBnD,EAAM,4BAC5C,IAAsB,gBAAXf,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,mBAAmBlE,EAAO,oBAE9C,KADAA,KAAY,GACC,GAAKA,EAAS,EAAInB,KAAKkB,OAAOuE,WACvC,KAAMxC,YAAW,wBAAwB9B,EAAO,YAAgBnB,KAAKkB,OAAOuE,YAE/D,gBAAVvD,GACPA,EAAQpC,EAAK2I,WAAWvG,GACF,gBAAVA,KACZA,EAAQpC,EAAK4I,WAAWxG,IAC5Bf,GAAU,CACV,IAAIiI,GAAYpJ,KAAKkB,OAAOuE,UACxBtE,GAASiI,GACTpJ,KAAK6G,QAAQuC,GAAa,GAAKjI,EAASiI,EAAYjI,GACxDA,GAAU,CACV,IAAIyH,GAAK1G,EAAM2G,IACXC,EAAK5G,EAAM6G,IAuBf,OAtBI/I,MAAK4C,cACL5C,KAAKoD,KAAKjC,EAAO,GAAMyH,IAAO,GAAM,IACpC5I,KAAKoD,KAAKjC,EAAO,GAAMyH,IAAO,GAAM,IACpC5I,KAAKoD,KAAKjC,EAAO,GAAMyH,IAAQ,EAAK,IACpC5I,KAAKoD,KAAKjC,GAA0B,IAAbyH,EACvBzH,GAAU,EACVnB,KAAKoD,KAAKjC,EAAO,GAAM2H,IAAO,GAAM,IACpC9I,KAAKoD,KAAKjC,EAAO,GAAM2H,IAAO,GAAM,IACpC9I,KAAKoD,KAAKjC,EAAO,GAAM2H,IAAQ,EAAK,IACpC9I,KAAKoD,KAAKjC,GAA0B,IAAb2H,IAEvB9I,KAAKoD,KAAKjC,GAAa2H,IAAO,GAAM,IACpC9I,KAAKoD,KAAKjC,EAAO,GAAM2H,IAAO,GAAM,IACpC9I,KAAKoD,KAAKjC,EAAO,GAAM2H,IAAQ,EAAK,IACpC9I,KAAKoD,KAAKjC,EAAO,GAAmB,IAAb2H,EACvB3H,GAAU,EACVnB,KAAKoD,KAAKjC,GAAayH,IAAO,GAAM,IACpC5I,KAAKoD,KAAKjC,EAAO,GAAMyH,IAAO,GAAM,IACpC5I,KAAKoD,KAAKjC,EAAO,GAAMyH,IAAQ,EAAK,IACpC5I,KAAKoD,KAAKjC,EAAO,GAAmB,IAAbyH,GAEvBhD,IAAU5F,KAAKmB,QAAU,GACtBnB,MAWX2D,EAAoB0F,YAAc1F,EAAoBwF,YAQtDxF,EAAoB2F,WAAa,SAASnI,GACtC,GAAIyE,OAA6B,KAAXzE,CAEtB,IADIyE,IAAUzE,EAASnB,KAAKmB,SACvBnB,KAAK6C,SAAU,CAChB,GAAsB,gBAAX1B,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,mBAAmBlE,EAAO,oBAE9C,KADAA,KAAY,GACC,GAAKA,EAAS,EAAInB,KAAKkB,OAAOuE,WACvC,KAAMxC,YAAW,wBAAwB9B,EAAO,YAAgBnB,KAAKkB,OAAOuE,YAEpF,GAAImD,GAAK,EACLE,EAAK,CACL9I,MAAK4C,cACLgG,EAAM5I,KAAKoD,KAAKjC,EAAO,IAAM,GAC7ByH,GAAM5I,KAAKoD,KAAKjC,EAAO,IAAO,EAC9ByH,GAAM5I,KAAKoD,KAAKjC,GAChByH,GAAM5I,KAAKoD,KAAKjC,EAAO,IAAM,KAAO,EACpCA,GAAU,EACV2H,EAAM9I,KAAKoD,KAAKjC,EAAO,IAAM,GAC7B2H,GAAM9I,KAAKoD,KAAKjC,EAAO,IAAO,EAC9B2H,GAAM9I,KAAKoD,KAAKjC,GAChB2H,GAAM9I,KAAKoD,KAAKjC,EAAO,IAAM,KAAO,IAEpC2H,EAAM9I,KAAKoD,KAAKjC,EAAO,IAAM,GAC7B2H,GAAM9I,KAAKoD,KAAKjC,EAAO,IAAO,EAC9B2H,GAAM9I,KAAKoD,KAAKjC,EAAO,GACvB2H,GAAM9I,KAAKoD,KAAKjC,IAAa,KAAO,EACpCA,GAAU,EACVyH,EAAM5I,KAAKoD,KAAKjC,EAAO,IAAM,GAC7ByH,GAAM5I,KAAKoD,KAAKjC,EAAO,IAAO,EAC9ByH,GAAM5I,KAAKoD,KAAKjC,EAAO,GACvByH,GAAM5I,KAAKoD,KAAKjC,IAAa,KAAO,EAExC,IAAIe,GAAQ,GAAIpC,GAAK8I,EAAIE,GAAI,EAE7B,OADIlD,KAAU5F,KAAKmB,QAAU,GACtBe,GAUXyB,EAAoB4F,WAAa5F,EAAoB2F,YAiJzD3F,EAAoB6F,aAAe,SAAStH,EAAOf,GAC/C,GAAIyE,OAA6B,KAAXzE,CAEtB,IADIyE,IAAUzE,EAASnB,KAAKmB,SACvBnB,KAAK6C,SAAU,CAChB,GAAqB,gBAAVX,GACP,KAAMmD,WAAU,kBAAkBnD,EAAM,kBAC5C,IAAsB,gBAAXf,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,mBAAmBlE,EAAO,oBAE9C,KADAA,KAAY,GACC,GAAKA,EAAS,EAAInB,KAAKkB,OAAOuE,WACvC,KAAMxC,YAAW,wBAAwB9B,EAAO,YAAgBnB,KAAKkB,OAAOuE,YAEpFtE,GAAU,CACV,IAAIsI,GAAYzJ,KAAKkB,OAAOuE,UAM5B,OALItE,GAASsI,GACTzJ,KAAK6G,QAAQ4C,GAAa,GAAKtI,EAASsI,EAAYtI,GACxDA,GAAU,EACVc,EAAcjC,KAAKoD,KAAMlB,EAAOf,EAAQnB,KAAK4C,aAAc,GAAI,GAC3DgD,IAAU5F,KAAKmB,QAAU,GACtBnB,MAWX2D,EAAoB+F,WAAa/F,EAAoB6F,aAQrD7F,EAAoBgG,YAAc,SAASxI,GACvC,GAAIyE,OAA6B,KAAXzE,CAEtB,IADIyE,IAAUzE,EAASnB,KAAKmB,SACvBnB,KAAK6C,SAAU,CAChB,GAAsB,gBAAX1B,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,mBAAmBlE,EAAO,oBAE9C,KADAA,KAAY,GACC,GAAKA,EAAS,EAAInB,KAAKkB,OAAOuE,WACvC,KAAMxC,YAAW,wBAAwB9B,EAAO,YAAgBnB,KAAKkB,OAAOuE,YAEpF,GAAIvD,GAAQjB,EAAajB,KAAKoD,KAAMjC,EAAQnB,KAAK4C,aAAc,GAAI,EAEnE,OADIgD,KAAU5F,KAAKmB,QAAU,GACtBe,GAUXyB,EAAoBiG,UAAYjG,EAAoBgG,YAWpDhG,EAAoBkG,aAAe,SAAS3H,EAAOf,GAC/C,GAAIyE,OAA6B,KAAXzE,CAEtB,IADIyE,IAAUzE,EAASnB,KAAKmB,SACvBnB,KAAK6C,SAAU,CAChB,GAAqB,gBAAVX,GACP,KAAMmD,WAAU,kBAAkBnD,EAAM,kBAC5C,IAAsB,gBAAXf,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,mBAAmBlE,EAAO,oBAE9C,KADAA,KAAY,GACC,GAAKA,EAAS,EAAInB,KAAKkB,OAAOuE,WACvC,KAAMxC,YAAW,wBAAwB9B,EAAO,YAAgBnB,KAAKkB,OAAOuE,YAEpFtE,GAAU,CACV,IAAI2I,GAAY9J,KAAKkB,OAAOuE,UAM5B,OALItE,GAAS2I,GACT9J,KAAK6G,QAAQiD,GAAa,GAAK3I,EAAS2I,EAAY3I,GACxDA,GAAU,EACVc,EAAcjC,KAAKoD,KAAMlB,EAAOf,EAAQnB,KAAK4C,aAAc,GAAI,GAC3DgD,IAAU5F,KAAKmB,QAAU,GACtBnB,MAWX2D,EAAoBoG,YAAcpG,EAAoBkG,aAQtDlG,EAAoBqG,YAAc,SAAS7I,GACvC,GAAIyE,OAA6B,KAAXzE,CAEtB,IADIyE,IAAUzE,EAASnB,KAAKmB,SACvBnB,KAAK6C,SAAU,CAChB,GAAsB,gBAAX1B,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,mBAAmBlE,EAAO,oBAE9C,KADAA,KAAY,GACC,GAAKA,EAAS,EAAInB,KAAKkB,OAAOuE,WACvC,KAAMxC,YAAW,wBAAwB9B,EAAO,YAAgBnB,KAAKkB,OAAOuE,YAEpF,GAAIvD,GAAQjB,EAAajB,KAAKoD,KAAMjC,EAAQnB,KAAK4C,aAAc,GAAI,EAEnE,OADIgD,KAAU5F,KAAKmB,QAAU,GACtBe,GAUXyB,EAAoBsG,WAAatG,EAAoBqG,YAWrDtH,EAAWwH,mBAAqB,EAQhCxH,EAAWyH,kBAAoB,SAASjI,GAG/B,MADLA,MAAkB,EACTA,EAAQ,IAAgB,EACxBA,EAAQ,MAAgB,EACxBA,EAAQ,GAAK,GAAW,EACxBA,EAAQ,GAAK,GAAW,EACA,GASrCQ,EAAW0H,eAAiB,SAASC,GACjC,QAAUA,GAAK,IAAM,EAAMA,GAAK,MAAS,GAS7C3H,EAAW4H,eAAiB,SAASD,GACjC,MAASA,KAAM,IAAW,EAAJA,GAAU,GAWpC1G,EAAoBsC,cAAgB,SAAS/D,EAAOf,GAChD,GAAIyE,OAA6B,KAAXzE,CAEtB,IADIyE,IAAUzE,EAASnB,KAAKmB,SACvBnB,KAAK6C,SAAU,CAChB,GAAqB,gBAAVX,IAAsBA,EAAQ,GAAM,EAC3C,KAAMmD,WAAU,kBAAkBnD,EAAM,oBAE5C,IADAA,GAAS,EACa,gBAAXf,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,mBAAmBlE,EAAO,oBAE9C,KADAA,KAAY,GACC,GAAKA,EAAS,EAAInB,KAAKkB,OAAOuE,WACvC,KAAMxC,YAAW,wBAAwB9B,EAAO,YAAgBnB,KAAKkB,OAAOuE,YAEpF,GACI8E,GADAC,EAAO9H,EAAWyH,kBAAkBjI,EAExCf,IAAUqJ,CACV,IAAIC,GAAazK,KAAKkB,OAAOuE,UAK7B,KAJItE,EAASsJ,GACTzK,KAAK6G,QAAQ4D,GAAc,GAAKtJ,EAASsJ,EAAatJ,GAC1DA,GAAUqJ,EACVtI,KAAW,EACJA,GAAS,KACZqI,EAAa,IAARrI,EAAgB,IACrBlC,KAAKoD,KAAKjC,KAAYoJ,EACtBrI,KAAW,CAGf,OADAlC,MAAKoD,KAAKjC,KAAYe,EAClB0D,GACA5F,KAAKmB,OAASA,EACPnB,MAEJwK,GAWX7G,EAAoB+G,oBAAsB,SAASxI,EAAOf,GACtD,MAAOnB,MAAKiG,cAAcvD,EAAW0H,eAAelI,GAAQf,IAahEwC,EAAoB0C,aAAe,SAASlF,GACxC,GAAIyE,OAA6B,KAAXzE,CAEtB,IADIyE,IAAUzE,EAASnB,KAAKmB,SACvBnB,KAAK6C,SAAU,CAChB,GAAsB,gBAAX1B,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,mBAAmBlE,EAAO,oBAE9C,KADAA,KAAY,GACC,GAAKA,EAAS,EAAInB,KAAKkB,OAAOuE,WACvC,KAAMxC,YAAW,wBAAwB9B,EAAO,YAAgBnB,KAAKkB,OAAOuE,YAEpF,GAEI8E,GAFApI,EAAI,EACJD,EAAQ,CAEZ,GAAG,CACC,IAAKlC,KAAK6C,UAAY1B,EAASnB,KAAKuD,MAAO,CACvC,GAAIoH,GAAMvF,MAAM,YAEhB,MADAuF,GAAe,WAAI,EACbA,EAEVJ,EAAIvK,KAAKoD,KAAKjC,KACVgB,EAAI,IACJD,IAAc,IAAJqI,IAAc,EAAEpI,KAC5BA,QACkB,IAAV,IAAJoI,GAEV,OADArI,IAAS,EACL0D,GACA5F,KAAKmB,OAASA,EACPe,IAGPA,MAASA,EACT9B,OAAU+B,IAalBwB,EAAoBiH,mBAAqB,SAASzJ,GAC9C,GAAI0J,GAAM7K,KAAKqG,aAAalF,EAK5B,OAJmB,gBAAR0J,GACPA,EAAW,MAAInI,EAAW4H,eAAeO,EAAW,OAEpDA,EAAMnI,EAAW4H,eAAeO,GAC7BA,GAKP/K,IAQA4C,EAAWoI,mBAAqB,GAQhCpI,EAAWqI,kBAAoB,SAAS7I,GACf,gBAAVA,GACPA,EAAQpC,EAAK2I,WAAWvG,GACF,gBAAVA,KACZA,EAAQpC,EAAK4I,WAAWxG,GAE5B,IAAI8I,GAAQ9I,EAAM+I,UAAY,EAC1BC,EAAQhJ,EAAMiJ,mBAAmB,IAAIF,UAAY,EACjDG,EAAQlJ,EAAMiJ,mBAAmB,IAAIF,UAAY,CACrD,OAAa,IAATG,EACa,GAATF,EACIF,EAAQ,MACDA,EAAQ,IAAS,EAAI,EAErBA,EAAQ,GAAK,GAAK,EAAI,EAE7BE,EAAQ,MACDA,EAAQ,IAAS,EAAI,EAErBA,EAAQ,GAAK,GAAK,EAAI,EAG9BE,EAAQ,IAAS,EAAI,IASpC1I,EAAW2I,eAAiB,SAASnJ,GAOjC,MANqB,gBAAVA,GACPA,EAAQpC,EAAK2I,WAAWvG,GAAO,GACT,gBAAVA,GACZA,EAAQpC,EAAK4I,WAAWxG,GAAO,IACP,IAAnBA,EAAMoJ,WAAoBpJ,EAAQA,EAAMqJ,YAE1CrJ,EAAMsJ,UAAU,GAAGC,IAAIvJ,EAAMwJ,WAAW,KAAKC,cASxDjJ,EAAWkJ,eAAiB,SAAS1J,GAOjC,MANqB,gBAAVA,GACPA,EAAQpC,EAAK2I,WAAWvG,GAAO,GACT,gBAAVA,GACZA,EAAQpC,EAAK4I,WAAWxG,GAAO,IACP,IAAnBA,EAAMoJ,WAAoBpJ,EAAQA,EAAMqJ,YAE1CrJ,EAAMiJ,mBAAmB,GAAGM,IAAIvJ,EAAM2J,IAAI/L,EAAKgM,KAAKP,WAAWQ,UAAUR,YAWpF5H,EAAoBqI,cAAgB,SAAS9J,EAAOf,GAChD,GAAIyE,OAA6B,KAAXzE,CAEtB,IADIyE,IAAUzE,EAASnB,KAAKmB,SACvBnB,KAAK6C,SAAU,CAChB,GAAqB,gBAAVX,GACPA,EAAQpC,EAAK2I,WAAWvG,OACvB,IAAqB,gBAAVA,GACZA,EAAQpC,EAAK4I,WAAWxG,OACvB,MAAMA,GAASA,YAAiBpC,IACjC,KAAMuF,WAAU,kBAAkBnD,EAAM,4BAC5C,IAAsB,gBAAXf,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,mBAAmBlE,EAAO,oBAE9C,KADAA,KAAY,GACC,GAAKA,EAAS,EAAInB,KAAKkB,OAAOuE,WACvC,KAAMxC,YAAW,wBAAwB9B,EAAO,YAAgBnB,KAAKkB,OAAOuE,YAE/D,gBAAVvD,GACPA,EAAQpC,EAAK2I,WAAWvG,GAAO,GACT,gBAAVA,GACZA,EAAQpC,EAAK4I,WAAWxG,GAAO,IACP,IAAnBA,EAAMoJ,WAAoBpJ,EAAQA,EAAMqJ,WACjD,IAAIf,GAAO9H,EAAWqI,kBAAkB7I,GACpC8I,EAAQ9I,EAAM+I,UAAY,EAC1BC,EAAQhJ,EAAMiJ,mBAAmB,IAAIF,UAAY,EACjDG,EAAQlJ,EAAMiJ,mBAAmB,IAAIF,UAAY,CACrD9J,IAAUqJ,CACV,IAAIyB,GAAajM,KAAKkB,OAAOuE,UAI7B,QAHItE,EAAS8K,GACTjM,KAAK6G,QAAQoF,GAAc,GAAK9K,EAAS8K,EAAa9K,GAC1DA,GAAUqJ,EACFA,GACJ,IAAK,IAAIxK,KAAKoD,KAAKjC,EAAO,GAAMiK,IAAW,EAAK,CAChD,KAAK,GAAIpL,KAAKoD,KAAKjC,EAAO,GAAc,IAATqJ,EAA8B,IAAjB,EAAyC,IAAjB,CACpE,KAAK,GAAIxK,KAAKoD,KAAKjC,EAAO,GAAc,IAATqJ,EAAcU,IAAU,GAAM,IAAQA,IAAU,GAAM,GACrF,KAAK,GAAIlL,KAAKoD,KAAKjC,EAAO,GAAc,IAATqJ,EAAcU,IAAU,GAAM,IAAQA,IAAU,GAAM,GACrF,KAAK,GAAIlL,KAAKoD,KAAKjC,EAAO,GAAc,IAATqJ,EAAcU,IAAW,EAAK,IAAQA,IAAW,EAAK,GACrF,KAAK,GAAIlL,KAAKoD,KAAKjC,EAAO,GAAc,IAATqJ,EAA8B,IAAjB,EAAyC,IAAjB,CACpE,KAAK,GAAIxK,KAAKoD,KAAKjC,EAAO,GAAc,IAATqJ,EAAcQ,IAAU,GAAM,IAAQA,IAAU,GAAM,GACrF,KAAK,GAAIhL,KAAKoD,KAAKjC,EAAO,GAAc,IAATqJ,EAAcQ,IAAU,GAAM,IAAQA,IAAU,GAAM,GACrF,KAAK,GAAIhL,KAAKoD,KAAKjC,EAAO,GAAc,IAATqJ,EAAcQ,IAAW,EAAK,IAAQA,IAAW,EAAK,GACrF,KAAK,GAAIhL,KAAKoD,KAAKjC,GAAqB,IAATqJ,EAA8B,IAAjB,EAAyC,IAAjB,EAExE,MAAI5E,IACA5F,KAAKmB,QAAUqJ,EACRxK,MAEAwK,GAYf7G,EAAoBuI,oBAAsB,SAAShK,EAAOf,GACtD,MAAOnB,MAAKgM,cAActJ,EAAW2I,eAAenJ,GAAQf,IAYhEwC,EAAoBwI,aAAe,SAAShL,GACxC,GAAIyE,OAA6B,KAAXzE,CAEtB,IADIyE,IAAUzE,EAASnB,KAAKmB,SACvBnB,KAAK6C,SAAU,CAChB,GAAsB,gBAAX1B,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,mBAAmBlE,EAAO,oBAE9C,KADAA,KAAY,GACC,GAAKA,EAAS,EAAInB,KAAKkB,OAAOuE,WACvC,KAAMxC,YAAW,wBAAwB9B,EAAO,YAAgBnB,KAAKkB,OAAOuE,YAGpF,GAAII,GAAQ1E,EACR6J,EAAQ,EACRE,EAAQ,EACRE,EAAQ,EACRb,EAAK,CAC2C,IAApDA,EAAIvK,KAAKoD,KAAKjC,KAAW6J,EAAc,IAAJT,EAA0B,IAAJA,IACzDA,EAAIvK,KAAKoD,KAAKjC,KAAW6J,IAAc,IAAJT,IAAc,GAAY,IAAJA,GAAcvK,KAAK6C,cAAyB,KAAN0H,KAC/FA,EAAIvK,KAAKoD,KAAKjC,KAAW6J,IAAc,IAAJT,IAAa,IAAa,IAAJA,GAAcvK,KAAK6C,cAAyB,KAAN0H,KAC/FA,EAAIvK,KAAKoD,KAAKjC,KAAW6J,IAAc,IAAJT,IAAa,IAAa,IAAJA,GAAcvK,KAAK6C,cAAyB,KAAN0H,KAC/FA,EAAIvK,KAAKoD,KAAKjC,KAAW+J,EAAc,IAAJX,GAA0B,IAAJA,GAAcvK,KAAK6C,cAAyB,KAAN0H,KAC/FA,EAAIvK,KAAKoD,KAAKjC,KAAW+J,IAAc,IAAJX,IAAc,GAAY,IAAJA,GAAcvK,KAAK6C,cAAyB,KAAN0H,KAC/FA,EAAIvK,KAAKoD,KAAKjC,KAAW+J,IAAc,IAAJX,IAAa,IAAa,IAAJA,GAAcvK,KAAK6C,cAAyB,KAAN0H,KAC/FA,EAAIvK,KAAKoD,KAAKjC,KAAW+J,IAAc,IAAJX,IAAa,IAAa,IAAJA,GAAcvK,KAAK6C,cAAyB,KAAN0H,KAC/FA,EAAIvK,KAAKoD,KAAKjC,KAAWiK,EAAc,IAAJb,GAA0B,IAAJA,GAAcvK,KAAK6C,cAAyB,KAAN0H,KAC/FA,EAAIvK,KAAKoD,KAAKjC,KAAWiK,IAAc,IAAJb,IAAc,EAAY,IAAJA,GAAcvK,KAAK6C,cAAyB,KAAN0H,WAC/F,KAAMnF,OAAM,iBACZ,IAAIlD,GAAQpC,EAAKsM,SAASpB,EAASE,GAAS,GAAMA,IAAU,EAAK,GAAW,IAAI,EAChF,OAAItF,IACA5F,KAAKmB,OAASA,EACPe,IAGHA,MAASA,EACT9B,OAAUe,EAAO0E,IAc7BlC,EAAoB0I,mBAAqB,SAASlL,GAC9C,GAAI0J,GAAM7K,KAAKmM,aAAahL,EAK5B,OAJI0J,IAAOA,EAAW,gBAAa/K,GAC/B+K,EAAW,MAAInI,EAAWkJ,eAAef,EAAW,OAEpDA,EAAMnI,EAAWkJ,eAAef,GAC7BA,IAiBflH,EAAoB2I,aAAe,SAASC,EAAKpL,GAC7C,GAAIyE,OAA6B,KAAXzE,CAClByE,KAAUzE,EAASnB,KAAKmB,OAC5B,IAAIhB,GACAqE,EAAI+H,EAAInM,MACZ,KAAKJ,KAAK6C,SAAU,CAChB,GAAmB,gBAAR0J,GACP,KAAMlH,WAAU,4BACpB,KAAKlF,EAAE,EAAGA,EAAEqE,IAAKrE,EACb,GAA0B,IAAtBoM,EAAIlM,WAAWF,GACf,KAAM8C,YAAW,wCAEzB,IAAsB,gBAAX9B,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,mBAAmBlE,EAAO,oBAE9C,KADAA,KAAY,GACC,GAAKA,EAAS,EAAInB,KAAKkB,OAAOuE,WACvC,KAAMxC,YAAW,wBAAwB9B,EAAO,YAAgBnB,KAAKkB,OAAOuE,YAGpFjB,EAAIgI,EAAKC,qBAAqBxM,EAAasM,IAAM,GACjDpL,GAAUqD,EAAE,CACZ,IAAIkI,GAAa1M,KAAKkB,OAAOuE,UAQ7B,OAPItE,GAASuL,GACT1M,KAAK6G,QAAQ6F,GAAc,GAAKvL,EAASuL,EAAavL,GAC1DA,GAAUqD,EAAE,EACZgI,EAAKG,kBAAkB1M,EAAasM,GAAM,SAAShC,GAC/CvK,KAAKoD,KAAKjC,KAAYoJ,GACxBqC,KAAK5M,OACPA,KAAKoD,KAAKjC,KAAY,EAClByE,GACA5F,KAAKmB,OAASA,EACPnB,MAEJwE,GAYXb,EAAoBkJ,YAAc,SAAS1L,GACvC,GAAIyE,OAA6B,KAAXzE,CAEtB,IADIyE,IAAUzE,EAASnB,KAAKmB,SACvBnB,KAAK6C,SAAU,CAChB,GAAsB,gBAAX1B,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,mBAAmBlE,EAAO,oBAE9C,KADAA,KAAY,GACC,GAAKA,EAAS,EAAInB,KAAKkB,OAAOuE,WACvC,KAAMxC,YAAW,wBAAwB9B,EAAO,YAAgBnB,KAAKkB,OAAOuE,YAEpF,GAGIqH,GAHAjH,EAAQ1E,EAGJoJ,GAAK,CAQb,OAPAiC,GAAKO,kBAAkB,WACnB,GAAU,IAANxC,EAAS,MAAO,KACpB,IAAIpJ,GAAUnB,KAAKuD,MACf,KAAMN,YAAW,kCAAkC9B,EAAO,MAAMnB,KAAKuD,MAEzE,OADAgH,GAAIvK,KAAKoD,KAAKjC,KACD,IAANoJ,EAAU,KAAOA,GAC1BqC,KAAK5M,MAAO8M,EAAKxM,KAAqB,GACpCsF,GACA5F,KAAKmB,OAASA,EACP2L,MAGHE,OAAUF,IACV1M,OAAUe,EAAS0E,IAgB/BlC,EAAoBsJ,aAAe,SAASV,EAAKpL,GAC7C,GAAIyE,OAA6B,KAAXzE,CAEtB,IADIyE,IAAUzE,EAASnB,KAAKmB,SACvBnB,KAAK6C,SAAU,CAChB,GAAmB,gBAAR0J,GACP,KAAMlH,WAAU,4BACpB,IAAsB,gBAAXlE,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,mBAAmBlE,EAAO,oBAE9C,KADAA,KAAY,GACC,GAAKA,EAAS,EAAInB,KAAKkB,OAAOuE,WACvC,KAAMxC,YAAW,wBAAwB9B,EAAO,YAAgBnB,KAAKkB,OAAOuE,YAEpF,GACIjB,GADAqB,EAAQ1E,CAEZqD,GAAIgI,EAAKC,qBAAqBxM,EAAasM,GAAMvM,KAAK6C,UAAU,GAChE1B,GAAU,EAAEqD,CACZ,IAAI0I,GAAalN,KAAKkB,OAAOuE,UAmB7B,IAlBItE,EAAS+L,GACTlN,KAAK6G,QAAQqG,GAAc,GAAK/L,EAAS+L,EAAa/L,GAC1DA,GAAU,EAAEqD,EACRxE,KAAK4C,cACL5C,KAAKoD,KAAKjC,EAAO,GAAMqD,IAAM,GAAM,IACnCxE,KAAKoD,KAAKjC,EAAO,GAAMqD,IAAM,GAAM,IACnCxE,KAAKoD,KAAKjC,EAAO,GAAMqD,IAAO,EAAK,IACnCxE,KAAKoD,KAAKjC,GAAyB,IAAZqD,IAEvBxE,KAAKoD,KAAKjC,GAAaqD,IAAM,GAAM,IACnCxE,KAAKoD,KAAKjC,EAAO,GAAMqD,IAAM,GAAM,IACnCxE,KAAKoD,KAAKjC,EAAO,GAAMqD,IAAO,EAAK,IACnCxE,KAAKoD,KAAKjC,EAAO,GAAkB,IAAZqD,GAE3BrD,GAAU,EACVqL,EAAKG,kBAAkB1M,EAAasM,GAAM,SAAShC,GAC/CvK,KAAKoD,KAAKjC,KAAYoJ,GACxBqC,KAAK5M,OACHmB,IAAW0E,EAAQ,EAAIrB,EACvB,KAAMvB,YAAW,kCAAkC9B,EAAO,QAAQA,EAAO,EAAEqD,GAC/E,OAAIoB,IACA5F,KAAKmB,OAASA,EACPnB,MAEJmB,EAAS0E,GAYpBlC,EAAoBwJ,YAAc,SAAShM,GACvC,GAAIyE,OAA6B,KAAXzE,CAEtB,IADIyE,IAAUzE,EAASnB,KAAKmB,SACvBnB,KAAK6C,SAAU,CAChB,GAAsB,gBAAX1B,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,mBAAmBlE,EAAO,oBAE9C,KADAA,KAAY,GACC,GAAKA,EAAS,EAAInB,KAAKkB,OAAOuE,WACvC,KAAMxC,YAAW,wBAAwB9B,EAAO,YAAgBnB,KAAKkB,OAAOuE,YAEpF,GAAII,GAAQ1E,EACRiM,EAAMpN,KAAKsI,WAAWnH,GACtBoL,EAAMvM,KAAKqN,eAAeD,EAAK1K,EAAW4K,cAAenM,GAAU,EAEvE,OADAA,IAAUoL,EAAY,OAClB3G,GACA5F,KAAKmB,OAASA,EACPoL,EAAY,SAGfS,OAAUT,EAAY,OACtBnM,OAAUe,EAAS0E,IAa/BnD,EAAW6K,cAAgB,IAQ3B7K,EAAW4K,cAAgB,IAS3B3J,EAAoB6J,gBAAkB,SAASjB,EAAKpL,GAChD,GAAIyE,OAA6B,KAAXzE,CAEtB,IADIyE,IAAUzE,EAASnB,KAAKmB,SACvBnB,KAAK6C,SAAU,CAChB,GAAsB,gBAAX1B,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,mBAAmBlE,EAAO,oBAE9C,KADAA,KAAY,GACC,GAAKA,EAAS,EAAInB,KAAKkB,OAAOuE,WACvC,KAAMxC,YAAW,wBAAwB9B,EAAO,YAAgBnB,KAAKkB,OAAOuE,YAEpF,GAAIjB,GACAqB,EAAQ1E,CACZqD,GAAIgI,EAAKC,qBAAqBxM,EAAasM,IAAM,GACjDpL,GAAUqD,CACV,IAAIiJ,GAAazN,KAAKkB,OAAOuE,UAO7B,OANItE,GAASsM,GACTzN,KAAK6G,QAAQ4G,GAAc,GAAKtM,EAASsM,EAAatM,GAC1DA,GAAUqD,EACVgI,EAAKG,kBAAkB1M,EAAasM,GAAM,SAAShC,GAC/CvK,KAAKoD,KAAKjC,KAAYoJ,GACxBqC,KAAK5M,OACH4F,GACA5F,KAAKmB,OAASA,EACPnB,MAEJmB,EAAS0E,GAWpBlC,EAAoB+J,YAAc/J,EAAoB6J,gBAStD9K,EAAWiL,mBAAqB,SAASpB,GACrC,MAAOC,GAAKC,qBAAqBxM,EAAasM,IAAM,IASxD7J,EAAWkL,mBAAqB,SAASrB,GACrC,MAAOC,GAAKC,qBAAqBxM,EAAasM,IAAM,IAUxD7J,EAAWmL,gBAAkBnL,EAAWkL,mBAaxCjK,EAAoB0J,eAAiB,SAASjN,EAAQ0N,EAAS3M,GACpC,gBAAZ2M,KACP3M,EAAS2M,EACTA,MAAUvJ,GAEd,IAAIqB,OAA6B,KAAXzE,CAGtB,IAFIyE,IAAUzE,EAASnB,KAAKmB,YACL,KAAZ2M,IAAyBA,EAAUpL,EAAW6K,gBACpDvN,KAAK6C,SAAU,CAChB,GAAsB,gBAAXzC,IAAuBA,EAAS,GAAM,EAC7C,KAAMiF,WAAU,mBAAmBjF,EAAO,oBAE9C,IADAA,GAAU,EACY,gBAAXe,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,mBAAmBlE,EAAO,oBAE9C,KADAA,KAAY,GACC,GAAKA,EAAS,EAAInB,KAAKkB,OAAOuE,WACvC,KAAMxC,YAAW,wBAAwB9B,EAAO,YAAgBnB,KAAKkB,OAAOuE,YAEpF,GAEIqH,GAFA3M,EAAI,EACJ0F,EAAQ1E,CAEZ,IAAI2M,IAAYpL,EAAW6K,cAAe,CAOtC,GANAT,EAAKxM,IACLkM,EAAKuB,WAAW,WACZ,MAAO5N,GAAIC,GAAUe,EAASnB,KAAKuD,MAAQvD,KAAKoD,KAAKjC,KAAY,MACnEyL,KAAK5M,MAAO,SAASgO,KACjB7N,EAAGqM,EAAKyB,YAAYD,EAAIlB,KAE1B3M,IAAMC,EACN,KAAM6C,YAAW,kCAAkC9C,EAAE,OAAOC,EAChE,OAAIwF,IACA5F,KAAKmB,OAASA,EACP2L,MAGHE,OAAUF,IACV1M,OAAUe,EAAS0E,GAGxB,GAAIiI,IAAYpL,EAAW4K,cAAe,CAC7C,IAAKtN,KAAK6C,SAAU,CAChB,GAAsB,gBAAX1B,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,mBAAmBlE,EAAO,oBAE9C,KADAA,KAAY,GACC,GAAKA,EAASf,EAASJ,KAAKkB,OAAOuE,WAC5C,KAAMxC,YAAW,wBAAwB9B,EAAO,MAAMf,EAAO,QAAQJ,KAAKkB,OAAOuE,YAEzF,GAAIjB,GAAIrD,EAASf,CAIjB,IAHAoM,EAAKO,kBAAkB,WACnB,MAAO5L,GAASqD,EAAIxE,KAAKoD,KAAKjC,KAAY,MAC5CyL,KAAK5M,MAAO8M,EAAKxM,IAAqBN,KAAK6C,UACzC1B,IAAWqD,EACX,KAAMvB,YAAW,kCAAkC9B,EAAO,OAAOqD,EACrE,OAAIoB,IACA5F,KAAKmB,OAASA,EACP2L,MAGHE,OAAUF,IACV1M,OAAUe,EAAS0E,GAI3B,KAAMR,WAAU,wBAAwByI,IAehDnK,EAAoBuK,WAAavK,EAAoB0J,eAarD1J,EAAoBwK,aAAe,SAAS5B,EAAKpL,GAC7C,GAAIyE,OAA6B,KAAXzE,CAEtB,IADIyE,IAAUzE,EAASnB,KAAKmB,SACvBnB,KAAK6C,SAAU,CAChB,GAAmB,gBAAR0J,GACP,KAAMlH,WAAU,4BACpB,IAAsB,gBAAXlE,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,mBAAmBlE,EAAO,oBAE9C,KADAA,KAAY,GACC,GAAKA,EAAS,EAAInB,KAAKkB,OAAOuE,WACvC,KAAMxC,YAAW,wBAAwB9B,EAAO,YAAgBnB,KAAKkB,OAAOuE,YAEpF,GACIjB,GAAG4J,EADHvI,EAAQ1E,CAEZqD,GAAIgI,EAAKC,qBAAqBxM,EAAasM,GAAMvM,KAAK6C,UAAU,GAChEuL,EAAI1L,EAAWyH,kBAAkB3F,GACjCrD,GAAUiN,EAAE5J,CACZ,IAAI6J,GAAarO,KAAKkB,OAAOuE,UAQ7B,IAPItE,EAASkN,GACTrO,KAAK6G,QAAQwH,GAAc,GAAKlN,EAASkN,EAAalN,GAC1DA,GAAUiN,EAAE5J,EACZrD,GAAUnB,KAAKiG,cAAczB,EAAGrD,GAChCqL,EAAKG,kBAAkB1M,EAAasM,GAAM,SAAShC,GAC/CvK,KAAKoD,KAAKjC,KAAYoJ,GACxBqC,KAAK5M,OACHmB,IAAW0E,EAAMrB,EAAE4J,EACnB,KAAMnL,YAAW,kCAAkC9B,EAAO,QAAQA,EAAOqD,EAAE4J,GAC/E,OAAIxI,IACA5F,KAAKmB,OAASA,EACPnB,MAEJmB,EAAS0E,GAYpBlC,EAAoB2K,YAAc,SAASnN,GACvC,GAAIyE,OAA6B,KAAXzE,CAEtB,IADIyE,IAAUzE,EAASnB,KAAKmB,SACvBnB,KAAK6C,SAAU,CAChB,GAAsB,gBAAX1B,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,mBAAmBlE,EAAO,oBAE9C,KADAA,KAAY,GACC,GAAKA,EAAS,EAAInB,KAAKkB,OAAOuE,WACvC,KAAMxC,YAAW,wBAAwB9B,EAAO,YAAgBnB,KAAKkB,OAAOuE,YAEpF,GAAII,GAAQ1E,EACRiM,EAAMpN,KAAKqG,aAAalF,GACxBoL,EAAMvM,KAAKqN,eAAeD,EAAW,MAAG1K,EAAW4K,cAAenM,GAAUiM,EAAY,OAE5F,OADAjM,IAAUoL,EAAY,OAClB3G,GACA5F,KAAKmB,OAASA,EACPoL,EAAY,SAGfS,OAAUT,EAAY,OACtBnM,OAAUe,EAAS0E,IAmB/BlC,EAAoB+C,OAAS,SAAS6H,EAAQjK,EAAUnD,GAC5B,gBAAbmD,IAA6C,gBAAbA,KACvCnD,EAASmD,EACTA,MAAWC,GAEf,IAAIqB,OAA6B,KAAXzE,CAEtB,IADIyE,IAAUzE,EAASnB,KAAKmB,SACvBnB,KAAK6C,SAAU,CAChB,GAAsB,gBAAX1B,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,mBAAmBlE,EAAO,oBAE9C,KADAA,KAAY,GACC,GAAKA,EAAS,EAAInB,KAAKkB,OAAOuE,WACvC,KAAMxC,YAAW,wBAAwB9B,EAAO,YAAgBnB,KAAKkB,OAAOuE,YAE9E8I,YAAkB7L,KACpB6L,EAAS7L,EAAWgC,KAAK6J,EAAQjK,GACrC,IAAIlE,GAASmO,EAAOhL,MAAQgL,EAAOpN,MACnC,IAAIf,GAAU,EAAG,MAAOJ,KACxBmB,IAAUf,CACV,IAAIoO,GAAaxO,KAAKkB,OAAOuE,UAO7B,OANItE,GAASqN,GACTxO,KAAK6G,QAAQ2H,GAAc,GAAKrN,EAASqN,EAAarN,GAC1DA,GAAUf,EACVJ,KAAKoD,KAAKyB,IAAI0J,EAAOnL,KAAK0B,SAASyJ,EAAOpN,OAAQoN,EAAOhL,OAAQpC,GACjEoN,EAAOpN,QAAUf,EACbwF,IAAU5F,KAAKmB,QAAUf,GACtBJ,MAaX2D,EAAoB8K,SAAW,SAASC,EAAQvN,GAE5C,MADAuN,GAAOhI,OAAO1G,KAAMmB,GACbnB,MAUX2D,EAAoBgL,OAAS,SAASA,GAElC,MADA3O,MAAK6C,UAAY8L,EACV3O,MAQX2D,EAAoBhB,SAAW,WAC3B,MAAO3C,MAAKkB,OAAOuE,YAQvB9B,EAAoBiL,MAAQ,WAIxB,MAHA5O,MAAKmB,OAAS,EACdnB,KAAKuD,MAAQvD,KAAKkB,OAAOuE,WACzBzF,KAAKsD,cAAgB,EACdtD,MAUX2D,EAAoB2B,MAAQ,SAASuJ,GACjC,GAAIjK,GAAK,GAAIlC,GAAW,EAAG1C,KAAK4C,aAAc5C,KAAK6C,SAWnD,OAVIgM,IACAjK,EAAG1D,OAAS,GAAIiC,aAAYnD,KAAKkB,OAAOuE,YACxCb,EAAGxB,KAAO,GAAIC,YAAWuB,EAAG1D,UAE5B0D,EAAG1D,OAASlB,KAAKkB,OACjB0D,EAAGxB,KAAOpD,KAAKoD,MAEnBwB,EAAGzD,OAASnB,KAAKmB,OACjByD,EAAGtB,aAAetD,KAAKsD,aACvBsB,EAAGrB,MAAQvD,KAAKuD,MACTqB,GAYXjB,EAAoBmL,QAAU,SAASC,EAAOC,GAG1C,OAFqB,KAAVD,IAAuBA,EAAQ/O,KAAKmB,YAC5B,KAAR6N,IAAqBA,EAAMhP,KAAKuD,QACtCvD,KAAK6C,SAAU,CAChB,GAAqB,gBAAVkM,IAAsBA,EAAQ,GAAM,EAC3C,KAAM1J,WAAU,gCAEpB,IADA0J,KAAW,EACQ,gBAARC,IAAoBA,EAAM,GAAM,EACvC,KAAM3J,WAAU,8BAEpB,IADA2J,KAAS,EACLD,EAAQ,GAAKA,EAAQC,GAAOA,EAAMhP,KAAKkB,OAAOuE,WAC9C,KAAMxC,YAAW,uBAAuB8L,EAAM,OAAOC,EAAI,OAAOhP,KAAKkB,OAAOuE,YAEpF,GAAc,IAAVsJ,GAAeC,IAAQhP,KAAKkB,OAAOuE,WACnC,MAAOzF,KACX,IAAIoN,GAAM4B,EAAMD,CAChB,IAAY,IAAR3B,EAMA,MALApN,MAAKkB,OAASgC,EACdlD,KAAKoD,KAAO,KACRpD,KAAKsD,cAAgB,IAAGtD,KAAKsD,cAAgByL,GACjD/O,KAAKmB,OAAS,EACdnB,KAAKuD,MAAQ,EACNvD,IAEX,IAAIkB,GAAS,GAAIiC,aAAYiK,GACzBhK,EAAO,GAAIC,YAAWnC,EAO1B,OANAkC,GAAKyB,IAAI7E,KAAKoD,KAAK0B,SAASiK,EAAOC,IACnChP,KAAKkB,OAASA,EACdlB,KAAKoD,KAAOA,EACRpD,KAAKsD,cAAgB,IAAGtD,KAAKsD,cAAgByL,GACjD/O,KAAKmB,OAAS,EACdnB,KAAKuD,MAAQ6J,EACNpN,MAWX2D,EAAoBkL,KAAO,SAASE,EAAOC,GAGvC,OAFqB,KAAVD,IAAuBA,EAAQ/O,KAAKmB,YAC5B,KAAR6N,IAAqBA,EAAMhP,KAAKuD,QACtCvD,KAAK6C,SAAU,CAChB,GAAqB,gBAAVkM,IAAsBA,EAAQ,GAAM,EAC3C,KAAM1J,WAAU,gCAEpB,IADA0J,KAAW,EACQ,gBAARC,IAAoBA,EAAM,GAAM,EACvC,KAAM3J,WAAU,8BAEpB,IADA2J,KAAS,EACLD,EAAQ,GAAKA,EAAQC,GAAOA,EAAMhP,KAAKkB,OAAOuE,WAC9C,KAAMxC,YAAW,uBAAuB8L,EAAM,OAAOC,EAAI,OAAOhP,KAAKkB,OAAOuE,YAEpF,GAAIsJ,IAAUC,EACV,MAAO,IAAItM,GAAW,EAAG1C,KAAK4C,aAAc5C,KAAK6C,SACrD,IAAIF,GAAWqM,EAAMD,EACjBnK,EAAK,GAAIlC,GAAWC,EAAU3C,KAAK4C,aAAc5C,KAAK6C,SAK1D,OAJA+B,GAAGzD,OAAS,EACZyD,EAAGrB,MAAQZ,EACPiC,EAAGtB,cAAgB,IAAGsB,EAAGtB,cAAgByL,GAC7C/O,KAAKiP,OAAOrK,EAAI,EAAGmK,EAAOC,GACnBpK,GAeXjB,EAAoBsL,OAAS,SAASP,EAAQQ,EAAcC,EAAcC,GACtE,GAAIxJ,GACAyJ,CACJ,KAAKrP,KAAK6C,WACDH,EAAW+B,aAAaiK,GACzB,KAAMrJ,WAAU,mCAMxB,IAJA6J,GAAgBG,MAAyC,KAAjBH,GAAgCR,EAAOvN,OAAwB,EAAf+N,EACxFC,GAAgBvJ,MAAmC,KAAjBuJ,GAAgCnP,KAAKmB,OAAwB,EAAfgO,EAChFC,MAAqC,KAAhBA,EAA8BpP,KAAKuD,MAAsB,EAAd6L,EAE5DF,EAAe,GAAKA,EAAeR,EAAOxN,OAAOuE,WACjD,KAAMxC,YAAW,8BAA8BiM,EAAa,OAAOR,EAAOxN,OAAOuE,WACrF,IAAI0J,EAAe,GAAKC,EAAcpP,KAAKkB,OAAOuE,WAC9C,KAAMxC,YAAW,8BAA8BkM,EAAa,OAAOnP,KAAKkB,OAAOuE,WAEnF,IAAI2H,GAAMgC,EAAcD,CACxB,OAAY,KAAR/B,EACOsB,GAEXA,EAAOY,eAAeJ,EAAe9B,GAErCsB,EAAOtL,KAAKyB,IAAI7E,KAAKoD,KAAK0B,SAASqK,EAAcC,GAAcF,GAE3DtJ,IAAU5F,KAAKmB,QAAUiM,GACzBiC,IAAgBX,EAAOvN,QAAUiM,GAE9BpN,OAWX2D,EAAoB2L,eAAiB,SAAS3M,GAC1C,GAAI4M,GAAUvP,KAAKkB,OAAOuE,UAC1B,OAAI8J,GAAU5M,EACH3C,KAAK6G,QAAQ0I,GAAW,GAAK5M,EAAW4M,EAAU5M,GACtD3C,MAcX2D,EAAoB6L,KAAO,SAAStN,EAAO6M,EAAOC,GAC9C,GAAIpJ,OAA4B,KAAVmJ,CAMtB,IALInJ,IAAUmJ,EAAQ/O,KAAKmB,QACN,gBAAVe,IAAsBA,EAAM9B,OAAS,IAC5C8B,EAAQA,EAAM7B,WAAW,QACR,KAAV0O,IAAuBA,EAAQ/O,KAAKmB,YAC5B,KAAR6N,IAAqBA,EAAMhP,KAAKuD,QACtCvD,KAAK6C,SAAU,CAChB,GAAqB,gBAAVX,IAAsBA,EAAQ,GAAM,EAC3C,KAAMmD,WAAU,kBAAkBnD,EAAM,oBAE5C,IADAA,GAAS,EACY,gBAAV6M,IAAsBA,EAAQ,GAAM,EAC3C,KAAM1J,WAAU,gCAEpB,IADA0J,KAAW,EACQ,gBAARC,IAAoBA,EAAM,GAAM,EACvC,KAAM3J,WAAU,8BAEpB,IADA2J,KAAS,EACLD,EAAQ,GAAKA,EAAQC,GAAOA,EAAMhP,KAAKkB,OAAOuE,WAC9C,KAAMxC,YAAW,uBAAuB8L,EAAM,OAAOC,EAAI,OAAOhP,KAAKkB,OAAOuE,YAEpF,GAAIsJ,GAASC,EACT,MAAOhP,KACX,MAAO+O,EAAQC,GAAKhP,KAAKoD,KAAK2L,KAAW7M,CAEzC,OADI0D,KAAU5F,KAAKmB,OAAS4N,GACrB/O,MASX2D,EAAoB8L,KAAO,WAGvB,MAFAzP,MAAKuD,MAAQvD,KAAKmB,OAClBnB,KAAKmB,OAAS,EACPnB,MAWX2D,EAAoB+L,KAAO,SAASvO,GAEhC,GADAA,MAA2B,KAAXA,EAAyBnB,KAAKmB,OAASA,GAClDnB,KAAK6C,SAAU,CAChB,GAAsB,gBAAX1B,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,mBAAmBlE,EAAO;uFAE9C,KADAA,KAAY,GACC,GAAKA,EAAS,EAAInB,KAAKkB,OAAOuE,WACvC,KAAMxC,YAAW,wBAAwB9B,EAAO,YAAgBnB,KAAKkB,OAAOuE,YAGpF,MADAzF,MAAKsD,aAAenC,EACbnB,MAQX2D,EAAoBgM,MAAQ,SAAS/M,GACjC,IAAK5C,KAAK6C,UACsB,iBAAjBD,GACP,KAAMyC,WAAU,sCAGxB,OADArF,MAAK4C,eAAiBA,EACf5C,MASX2D,EAAoBiM,GAAK,SAAShN,GAE9B,MADA5C,MAAK4C,iBAAuC,KAAjBA,KAAiCA,EACrD5C,MASX2D,EAAoBkM,GAAK,SAASC,GAE9B,MADA9P,MAAK4C,iBAAoC,KAAdkN,IAA6BA,EACjD9P,MAgBX2D,EAAoBoM,QAAU,SAASxB,EAAQjK,EAAUnD,GAC7B,gBAAbmD,IAA6C,gBAAbA,KACvCnD,EAASmD,EACTA,MAAWC,GAEf,IAAIqB,OAA6B,KAAXzE,CAEtB,IADIyE,IAAUzE,EAASnB,KAAKmB,SACvBnB,KAAK6C,SAAU,CAChB,GAAsB,gBAAX1B,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,mBAAmBlE,EAAO,oBAE9C,KADAA,KAAY,GACC,GAAKA,EAAS,EAAInB,KAAKkB,OAAOuE,WACvC,KAAMxC,YAAW,wBAAwB9B,EAAO,YAAgBnB,KAAKkB,OAAOuE,YAE9E8I,YAAkB7L,KACpB6L,EAAS7L,EAAWgC,KAAK6J,EAAQjK,GACrC,IAAI8I,GAAMmB,EAAOhL,MAAQgL,EAAOpN,MAChC,IAAIiM,GAAO,EAAG,MAAOpN,KACrB,IAAIgQ,GAAO5C,EAAMjM,CACjB,IAAI6O,EAAO,EAAG,CACV,GAAI9O,GAAS,GAAIiC,aAAYnD,KAAKkB,OAAOuE,WAAauK,GAClD5M,EAAO,GAAIC,YAAWnC,EAC1BkC,GAAKyB,IAAI7E,KAAKoD,KAAK0B,SAAS3D,EAAQnB,KAAKkB,OAAOuE,YAAa2H,GAC7DpN,KAAKkB,OAASA,EACdlB,KAAKoD,KAAOA,EACZpD,KAAKmB,QAAU6O,EACXhQ,KAAKsD,cAAgB,IAAGtD,KAAKsD,cAAgB0M,GACjDhQ,KAAKuD,OAASyM,EACd7O,GAAU6O,MAEV,CAAgB,GAAI3M,YAAWrD,KAAKkB,QAOxC,MALAlB,MAAKoD,KAAKyB,IAAI0J,EAAOnL,KAAK0B,SAASyJ,EAAOpN,OAAQoN,EAAOhL,OAAQpC,EAASiM,GAE1EmB,EAAOpN,OAASoN,EAAOhL,MACnBqC,IACA5F,KAAKmB,QAAUiM,GACZpN,MAcX2D,EAAoBsM,UAAY,SAASvB,EAAQvN,GAE7C,MADAuN,GAAOqB,QAAQ/P,KAAMmB,GACdnB,MAOX2D,EAAoBuM,WAAa,SAASC,GACnB,kBAARA,KAAoBA,EAAMC,QAAQ5N,IAAIoK,KAAKwD,UACtDD,EACInQ,KAAK0F,WAAW,0EAEhB1F,KAAKqQ,SAAsB,KAUnC1M,EAAoB2M,UAAY,WAC5B,MAAOtQ,MAAKuD,MAAQvD,KAAKmB,QAU7BwC,EAAoB4M,MAAQ,WAOxB,MANIvQ,MAAKsD,cAAgB,GACrBtD,KAAKmB,OAASnB,KAAKsD,aACnBtD,KAAKsD,cAAgB,GAErBtD,KAAKmB,OAAS,EAEXnB,MAWX2D,EAAoBkD,OAAS,SAASlE,GAClC,IAAK3C,KAAK6C,SAAU,CAChB,GAAwB,gBAAbF,IAAyBA,EAAW,GAAM,EACjD,KAAM0C,WAAU,qBAAqB1C,EAAS,oBAElD,KADAA,GAAY,GACG,EACX,KAAMM,YAAW,0BAA0BN,GAEnD,GAAI3C,KAAKkB,OAAOuE,WAAa9C,EAAU,CACnC,GAAIzB,GAAS,GAAIiC,aAAYR,GACzBS,EAAO,GAAIC,YAAWnC,EAC1BkC,GAAKyB,IAAI7E,KAAKoD,MACdpD,KAAKkB,OAASA,EACdlB,KAAKoD,KAAOA,EAEhB,MAAOpD,OASX2D,EAAoB6M,QAAU,SAASzB,EAAOC,GAG1C,OAFqB,KAAVD,IAAuBA,EAAQ/O,KAAKmB,YAC5B,KAAR6N,IAAqBA,EAAMhP,KAAKuD,QACtCvD,KAAK6C,SAAU,CAChB,GAAqB,gBAAVkM,IAAsBA,EAAQ,GAAM,EAC3C,KAAM1J,WAAU,gCAEpB,IADA0J,KAAW,EACQ,gBAARC,IAAoBA,EAAM,GAAM,EACvC,KAAM3J,WAAU,8BAEpB,IADA2J,KAAS,EACLD,EAAQ,GAAKA,EAAQC,GAAOA,EAAMhP,KAAKkB,OAAOuE,WAC9C,KAAMxC,YAAW,uBAAuB8L,EAAM,OAAOC,EAAI,OAAOhP,KAAKkB,OAAOuE,YAEpF,MAAIsJ,KAAUC,EACHhP,MACXe,MAAMC,UAAUwP,QAAQjL,KAAKvF,KAAKoD,KAAK0B,SAASiK,EAAOC,IAChDhP,OAQX2D,EAAoB8M,KAAO,SAASrQ,GAChC,IAAKJ,KAAK6C,SAAU,CAChB,GAAsB,gBAAXzC,IAAuBA,EAAS,GAAM,EAC7C,KAAMiF,WAAU,mBAAmBjF,EAAO,oBAC9CA,IAAU,EAEd,GAAIe,GAASnB,KAAKmB,OAASf,CAC3B,KAAKJ,KAAK6C,WACF1B,EAAS,GAAKA,EAASnB,KAAKkB,OAAOuE,YACnC,KAAMxC,YAAW,wBAAwBjD,KAAKmB,OAAO,MAAMf,EAAO,OAAOJ,KAAKkB,OAAOuE,WAG7F,OADAzF,MAAKmB,OAASA,EACPnB,MAUX2D,EAAoB6C,MAAQ,SAASuI,EAAOC,GAGxC,OAFqB,KAAVD,IAAuBA,EAAQ/O,KAAKmB,YAC5B,KAAR6N,IAAqBA,EAAMhP,KAAKuD,QACtCvD,KAAK6C,SAAU,CAChB,GAAqB,gBAAVkM,IAAsBA,EAAQ,GAAM,EAC3C,KAAM1J,WAAU,gCAEpB,IADA0J,KAAW,EACQ,gBAARC,IAAoBA,EAAM,GAAM,EACvC,KAAM3J,WAAU,8BAEpB,IADA2J,KAAS,EACLD,EAAQ,GAAKA,EAAQC,GAAOA,EAAMhP,KAAKkB,OAAOuE,WAC9C,KAAMxC,YAAW,uBAAuB8L,EAAM,OAAOC,EAAI,OAAOhP,KAAKkB,OAAOuE,YAEpF,GAAIb,GAAK5E,KAAKsF,OAGd,OAFAV,GAAGzD,OAAS4N,EACZnK,EAAGrB,MAAQyL,EACJpK,GAUXjB,EAAoB+M,SAAW,SAASC,GACpC,GAAIxP,GAASnB,KAAKmB,OACdoC,EAAQvD,KAAKuD,KACjB,KAAKvD,KAAK6C,SAAU,CAChB,GAAsB,gBAAX1B,IAAuBA,EAAS,GAAM,EAC7C,KAAMkE,WAAU,iCAEpB,IADAlE,KAAY,EACS,gBAAVoC,IAAsBA,EAAQ,GAAM,EAC3C,KAAM8B,WAAU,gCAEpB,IADA9B,KAAW,EACPpC,EAAS,GAAKA,EAASoC,GAASA,EAAQvD,KAAKkB,OAAOuE,WACpD,KAAMxC,YAAW,uBAAuB9B,EAAO,OAAOoC,EAAM,OAAOvD,KAAKkB,OAAOuE,YAIvF,IAAKkL,GAAwB,IAAXxP,GAAgBoC,IAAUvD,KAAKkB,OAAOuE,WACpD,MAAOzF,MAAKkB,MAChB,IAAIC,IAAWoC,EACX,MAAOL,EACX,IAAIhC,GAAS,GAAIiC,aAAYI,EAAQpC,EAErC,OADA,IAAIkC,YAAWnC,GAAQ2D,IAAI,GAAIxB,YAAWrD,KAAKkB,QAAQ4D,SAAS3D,EAAQoC,GAAQ,GACzErC,GAYXyC,EAAoBiN,cAAgBjN,EAAoB+M,SAaxD/M,EAAoB+B,SAAW,SAASpB,EAAUyK,EAAOC,GACrD,OAAwB,KAAb1K,EACP,MAAO,uBAAuBtE,KAAKmB,OAAO,iBAAiBnB,KAAKsD,aAAa,UAAUtD,KAAKuD,MAAM,aAAavD,KAAK2C,WAAW,GAKnI,QAJwB,gBAAb2B,KACPA,EAAW,OACXyK,EAAQzK,EACR0K,EAAMD,GACFzK,GACJ,IAAK,OACD,MAAOtE,MAAK6Q,OAAO9B,EAAOC,EAC9B,KAAK,SACD,MAAOhP,MAAK8Q,SAAS/B,EAAOC,EAChC,KAAK,MACD,MAAOhP,MAAK+Q,MAAMhC,EAAOC,EAC7B,KAAK,SACD,MAAOhP,MAAKgR,SAASjC,EAAOC,EAChC,KAAK,QACD,MAAOhP,MAAKqQ,SAChB,KAAK,UACD,MAAOrQ,MAAKiR,WAChB,SACI,KAAM7L,OAAM,yBAAyBd,IAWjD,IAAI4M,GAAO,WA4BP,IAAK,GApBDA,MAOAC,GACA,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAC9D,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAQhEC,KACKjR,EAAE,EAAGqE,EAAE2M,EAAK/Q,OAAQD,EAAEqE,IAAKrE,EAChCiR,EAAID,EAAKhR,IAAMA,CA2EnB,OAlEA+Q,GAAKG,OAAS,SAASC,EAAKC,GAExB,IADA,GAAIhH,GAAGiH,EACgB,QAAfjH,EAAI+G,MACRC,EAAIJ,EAAM5G,GAAG,EAAG,KAChBiH,GAAO,EAAFjH,IAAQ,EACO,QAAfA,EAAI+G,MACLE,GAAMjH,GAAG,EAAG,GACZgH,EAAIJ,EAAsB,IAAhBK,EAAIjH,GAAG,EAAG,MACpBiH,GAAO,GAAFjH,IAAQ,EACO,QAAfA,EAAI+G,MACLC,EAAIJ,EAAsB,IAAhBK,EAAIjH,GAAG,EAAG,KACpBgH,EAAIJ,EAAO,GAAF5G,MAETgH,EAAIJ,EAAO,GAAFK,IACTD,EAAI,OAERA,EAAIJ,EAAO,GAAFK,IACTD,EAAI,IACJA,EAAI,MAWhBL,EAAKO,OAAS,SAASH,EAAKC,GAExB,QAASG,GAAKvP,GACV,KAAMiD,OAAM,2BAA2BjD,GAE3C,IAJA,GAAIA,GAAGwP,EAAIC,EAIY,QAAfzP,EAAImP,MAGR,GAFAK,EAAKP,EAAIjP,OACS,KAAPwP,GAAoBD,EAAKvP,GAChB,QAAfA,EAAImP,OACLM,EAAKR,EAAIjP,OACS,KAAPyP,GAAoBF,EAAKvP,GACpCoP,EAAKI,GAAI,IAAK,GAAM,GAAHC,IAAU,GACP,QAAfzP,EAAImP,MAAiB,CAEtB,OAAkB,MADlBK,EAAKP,EAAIjP,IAEL,CAAA,GAAU,KAANA,EAAU,KAAYuP,GAAKvP,GAEnC,GADAoP,GAAS,GAAHK,IAAS,IAAK,GAAM,GAAHD,IAAU,GACb,QAAfxP,EAAImP,KAAiB,CAEtB,OAAkB,MADlBM,EAAKR,EAAIjP,IAEL,CAAA,GAAU,KAANA,EAAU,KAAYuP,GAAKvP,GACnCoP,GAAS,EAAHI,IAAS,IAAK,EAAEC,MAY1CV,EAAKW,KAAO,SAAStF,GACjB,MAAO,sEAAmEsF,KAAKtF,IAG5E2E,IAaXvN,GAAoBmN,SAAW,SAAS/B,EAAOC,GAM3C,OALqB,KAAVD,IACPA,EAAQ/O,KAAKmB,YACE,KAAR6N,IACPA,EAAMhP,KAAKuD,OACfwL,GAAgB,EAAGC,GAAY,EAC3BD,EAAQ,GAAKC,EAAMhP,KAAK2C,UAAYoM,EAAQC,EAC5C,KAAM/L,YAAW,aACrB,IAAI6J,EAGJ,OAHQoE,GAAKG,OAAO,WAChB,MAAOtC,GAAQC,EAAMhP,KAAKoD,KAAK2L,KAAW,MAC5CnC,KAAK5M,MAAO8M,EAAKxM,KACZwM,KAWXpK,EAAWqC,WAAa,SAASwH,EAAK3J,GAClC,GAAmB,gBAAR2J,GACP,KAAMlH,WAAU,MACpB,IAAIT,GAAK,GAAIlC,GAAW6J,EAAInM,OAAO,EAAE,EAAGwC,GACpCzC,EAAI,CAKR,OAJA+Q,GAAKO,OAAOxR,EAAasM,GAAM,SAAShC,GACpC3F,EAAGxB,KAAKjD,KAAOoK,IAEnB3F,EAAGrB,MAAQpD,EACJyE,GAUXlC,EAAWoP,KAAO,SAASvF,GACvB,MAAO7J,GAAWuC,WAAWsH,GAAKuE,YAUtCpO,EAAWqP,KAAO,SAASC,GACvB,MAAOtP,GAAWqC,WAAWiN,GAAKhB,YAatCrN,EAAoBqN,SAAW,SAASjC,EAAOC,GAM3C,OALqB,KAAVD,IACPA,EAAQ/O,KAAKmB,YACE,KAAR6N,IACPA,EAAMhP,KAAKuD,OACfwL,GAAS,EAAGC,GAAO,EACfD,EAAQ,GAAKC,EAAMhP,KAAK2C,YAAcoM,EAAQC,EAC9C,KAAM/L,YAAW,aACrB,IAAI8L,IAAUC,EACV,MAAO,EAGX,KAFA,GAAIiD,MACAC,KACGnD,EAAQC,GACXiD,EAAMnR,KAAKd,KAAKoD,KAAK2L,MACjBkD,EAAM7R,QAAU,OAChB8R,EAAMpR,KAAKD,OAAOoD,aAAarD,MAAMC,OAAQoR,IAC7CA,KAER,OAAOC,GAAMxR,KAAK,IAAMG,OAAOoD,aAAarD,MAAMC,OAAQoR,IAW9DvP,EAAWuC,WAAa,SAASsH,EAAK3J,GAClC,GAAmB,gBAAR2J,GACP,KAAMlH,WAAU,MAKpB,KAJA,GAEI8M,GAFAhS,EAAI,EACJqE,EAAI+H,EAAInM,OAERwE,EAAK,GAAIlC,GAAW8B,EAAG5B,GACpBzC,EAAEqE,GAAG,CAER,IADA2N,EAAW5F,EAAIlM,WAAWF,IACX,IACX,KAAM8C,YAAW,sBAAsBkP,EAC3CvN,GAAGxB,KAAKjD,KAAOgS,EAGnB,MADAvN,GAAGrB,MAAQiB,EACJI,GAsBXjB,EAAoB0M,QAAU,SAAS+B,GAOnC,IANA,GAEI7H,GAFApK,GAAK,EACLqE,EAAIxE,KAAKkB,OAAOuE,WAEhB4M,EAAM,GACNC,EAAM,GACNnC,EAAM,GACHhQ,EAAEqE,GAAG,CASR,IARW,IAAPrE,IACAoK,EAAIvK,KAAKoD,KAAKjD,GACAkS,GAAV9H,EAAI,GAAa,IAAIA,EAAE7E,SAAS,IAAI6M,cAC5BhI,EAAE7E,SAAS,IAAI6M,cACvBH,IACAE,GAAO/H,EAAI,IAAMA,EAAI,IAAM1J,OAAOoD,aAAasG,GAAK,QAE1DpK,EACEiS,GACIjS,EAAI,GAAKA,EAAI,IAAO,GAAKA,IAAMqE,EAAG,CAClC,KAAO6N,EAAIjS,OAAS,IAAQiS,GAAO,GACnClC,IAAOkC,EAAIC,EAAI,KACfD,EAAMC,EAAM,GAGhBnS,IAAMH,KAAKmB,QAAUhB,IAAMH,KAAKuD,MAChC8O,GAAOlS,IAAMH,KAAKsD,aAAe,IAAM,IAClCnD,IAAMH,KAAKmB,OAChBkR,GAAOlS,IAAMH,KAAKsD,aAAe,IAAM,IAClCnD,IAAMH,KAAKuD,MAChB8O,GAAOlS,IAAMH,KAAKsD,aAAe,IAAM,IAEvC+O,GAAOlS,IAAMH,KAAKsD,aAAe,IAAO8O,GAAkB,IAANjS,GAAWA,IAAMqE,EAAK,IAAM,GAExF,GAAI4N,GAAmB,MAARC,EAAa,CACxB,KAAOA,EAAIjS,OAAS,IAChBiS,GAAO,GACXlC,IAAOkC,EAAMC,EAAM,KAEvB,MAAOF,GAAUjC,EAAMkC,GAc3B3P,EAAWyC,UAAY,SAASoH,EAAK3J,EAAcC,GAO/C,IANA,GAEkB2P,GAAIjI,EAFlB/F,EAAI+H,EAAInM,OACRwE,EAAK,GAAIlC,IAAa8B,EAAE,GAAG,EAAG,EAAG5B,EAAcC,GAC/C1C,EAAI,EAAGsS,EAAI,EACXC,GAAK,EACLC,GAAK,EAAOC,GAAK,EAAOC,GAAK,EAC7BnB,GAAO,EACJvR,EAAEqE,GAAG,CACR,OAAQgO,EAAKjG,EAAIuG,OAAO3S,MACpB,IAAK,IACD,IAAK0C,EAAU,CACX,GAAI8P,GAAMC,GAAMC,EAAI,CAChBnB,GAAO,CACP,OAEJiB,EAAKC,EAAKC,GAAK,EAEnBjO,EAAGzD,OAASyD,EAAGtB,aAAesB,EAAGrB,MAAQkP,EACzCC,GAAK,CACL,MACJ,KAAK,IACD,IAAK7P,EAAU,CACX,GAAI8P,GAAME,EAAI,CACVnB,GAAO,CACP,OAEJiB,EAAKE,GAAK,EAEdjO,EAAGzD,OAASyD,EAAGrB,MAAQkP,EACvBC,GAAK,CACL,MACJ,KAAK,IACD,IAAK7P,EAAU,CACX,GAAI8P,GAAMC,EAAI,CACVlB,GAAO,CACP,OAEJiB,EAAKC,GAAK,EAEdhO,EAAGzD,OAASyD,EAAGtB,aAAemP,EAC9BC,GAAK,CACL,MACJ,KAAK,IACD,IAAK7P,EAAU,CACX,GAAI8P,EAAI,CACJjB,GAAO,CACP,OAEJiB,GAAK,EAET/N,EAAGzD,OAASsR,EACZC,GAAK,CACL,MACJ,KAAK,IACD,IAAK7P,EAAU,CACX,GAAIgQ,GAAMD,EAAI,CACVlB,GAAO,CACP,OAEJmB,EAAKD,GAAK,EAEdhO,EAAGrB,MAAQqB,EAAGtB,aAAemP,EAC7BC,GAAK,CACL,MACJ,KAAK,IACD,IAAK7P,EAAU,CACX,GAAIgQ,EAAI,CACJnB,GAAO,CACP,OAEJmB,GAAK,EAETjO,EAAGrB,MAAQkP,EACXC,GAAK,CACL,MACJ,KAAK,IACD,IAAK7P,EAAU,CACX,GAAI+P,EAAI,CACJlB,GAAO,CACP,OAEJkB,GAAK,EAEThO,EAAGtB,aAAemP,EAClBC,GAAK,CACL,MACJ,KAAK,IACDA,GAAK,CACL,MACJ,SACI,IAAK7P,GACG6P,EAAI,CACJhB,GAAO,CACP,OAIR,GADAnH,EAAIwI,SAASP,EAAGjG,EAAIuG,OAAO3S,KAAM,KAC5B0C,IACGP,MAAMiI,IAAMA,EAAI,GAAKA,EAAI,KACzB,KAAMlF,WAAU,0CAExBT,GAAGxB,KAAKqP,KAAOlI,EACfmI,GAAK,EAEb,GAAIhB,EACA,KAAMrM,WAAU,kCAAkClF,GAE1D,IAAK0C,EAAU,CACX,IAAK8P,IAAOE,EACR,KAAMxN,WAAU,uCACpB,IAAIoN,EAAE7N,EAAG1D,OAAOuE,WACZ,KAAMJ,WAAU,wDAAwDoN,EAAE,MAAMjO,GAExF,MAAOI,IAYXjB,EAAoBoN,MAAQ,SAAShC,EAAOC,GAGxC,GAFAD,MAAyB,KAAVA,EAAwB/O,KAAKmB,OAAS4N,EACrDC,MAAqB,KAARA,EAAsBhP,KAAKuD,MAAQyL,GAC3ChP,KAAK6C,SAAU,CAChB,GAAqB,gBAAVkM,IAAsBA,EAAQ,GAAM,EAC3C,KAAM1J,WAAU,gCAEpB,IADA0J,KAAW,EACQ,gBAARC,IAAoBA,EAAM,GAAM,EACvC,KAAM3J,WAAU,8BAEpB,IADA2J,KAAS,EACLD,EAAQ,GAAKA,EAAQC,GAAOA,EAAMhP,KAAKkB,OAAOuE,WAC9C,KAAMxC,YAAW,uBAAuB8L,EAAM,OAAOC,EAAI,OAAOhP,KAAKkB,OAAOuE,YAIpF,IAFA,GACI8E,GADA4F,EAAM,GAAIpP,OAAMiO,EAAMD,GAEnBA,EAAQC,GACXzE,EAAIvK,KAAKoD,KAAK2L,KACVxE,EAAI,GACJ4F,EAAIrP,KAAK,IAAKyJ,EAAE7E,SAAS,KACxByK,EAAIrP,KAAKyJ,EAAE7E,SAAS,IAE7B,OAAOyK,GAAIzP,KAAK,KAapBgC,EAAWsC,QAAU,SAASuH,EAAK3J,EAAcC,GAC7C,IAAKA,EAAU,CACX,GAAmB,gBAAR0J,GACP,KAAMlH,WAAU,4BACpB,IAAIkH,EAAInM,OAAS,GAAM,EACnB,KAAMiF,WAAU,2CAKxB,IAAK,GADDkF,GAFA/F,EAAI+H,EAAInM,OACRwE,EAAK,GAAIlC,GAAY8B,EAAI,EAAK,EAAG5B,GAE5BzC,EAAE,EAAGsS,EAAE,EAAGtS,EAAEqE,EAAGrE,GAAG,EAAG,CAE1B,GADAoK,EAAIwI,SAASxG,EAAIyG,UAAU7S,EAAGA,EAAE,GAAI,KAC/B0C,KACIoQ,SAAS1I,IAAMA,EAAI,GAAKA,EAAI,KAC7B,KAAMlF,WAAU,2CACxBT,GAAGxB,KAAKqP,KAAOlI,EAGnB,MADA3F,GAAGrB,MAAQkP,EACJ7N,EAUX,IAAI4H,GAAO,WAQP,GAAIA,KAqLJ,OA9KAA,GAAK0G,cAAgB,QAQrB1G,EAAK2G,WAAa,SAAS7B,EAAKC,GAC5B,GAAIvD,GAAK,IAIT,KAHmB,gBAARsD,KACPtD,EAAKsD,EACLA,EAAM,WAAa,MAAO,QAChB,OAAPtD,GAAgC,QAAhBA,EAAKsD,MACpBtD,EAAK,IACLuD,EAAO,IAAHvD,GACCA,EAAK,MACVuD,EAAMvD,GAAI,EAAG,GAAM,KACnBuD,EAAQ,GAAHvD,EAAS,MACTA,EAAK,OACVuD,EAAMvD,GAAI,GAAI,GAAM,KACpBuD,EAAMvD,GAAI,EAAG,GAAM,KACnBuD,EAAQ,GAAHvD,EAAS,OAEduD,EAAMvD,GAAI,GAAI,EAAM,KACpBuD,EAAMvD,GAAI,GAAI,GAAM,KACpBuD,EAAMvD,GAAI,EAAG,GAAM,KACnBuD,EAAQ,GAAHvD,EAAS,MAClBA,EAAK,MAabxB,EAAKuB,WAAa,SAASuD,EAAKC,GAQ5B,IAPA,GAAI6B,GAAG7I,EAAGpI,EAAGP,EAAG8P,EAAO,SAASnH,GAC5BA,EAAIA,EAAE/D,MAAM,EAAG+D,EAAE8I,QAAQ,MACzB,IAAI1I,GAAMvF,MAAMmF,EAAE7E,WAGlB,MAFAiF,GAAI/L,KAAO,iBACX+L,EAAW,MAAIJ,EACTI,GAEa,QAAfyI,EAAI9B,MACR,GAAiB,IAAV,IAAF8B,GACD7B,EAAI6B,OACH,IAAiB,MAAV,IAAFA,GACW,QAAf7I,EAAI+G,MAAoBI,GAAM0B,EAAG7I,IACnCgH,GAAQ,GAAF6B,IAAS,EAAQ,GAAF7I,OACpB,IAAiB,MAAV,IAAF6I,IACS,QAAb7I,EAAE+G,MAAiC,QAAbnP,EAAEmP,OAAoBI,GAAM0B,EAAG7I,EAAGpI,IAC1DoP,GAAQ,GAAF6B,IAAS,IAAU,GAAF7I,IAAS,EAAQ,GAAFpI,OACrC,CAAA,GAAiB,MAAV,IAAFiR,GAGL,KAAMnQ,YAAW,0BAA0BmQ,IAF7B,QAAb7I,EAAE+G,MAAiC,QAAbnP,EAAEmP,MAAiC,QAAb1P,EAAE0P,OAAoBI,GAAM0B,EAAG7I,EAAGpI,EAAGP,IACnF2P,GAAQ,EAAF6B,IAAS,IAAU,GAAF7I,IAAS,IAAU,GAAFpI,IAAS,EAAQ,GAAFP,KAYnE4K,EAAK8G,YAAc,SAAShC,EAAKC,GAE7B,IADA,GAAIgC,GAAIC,EAAK,OACA,CACT,GAAwC,QAAnCD,EAAY,OAAPC,EAAcA,EAAKlC,KACzB,KACAiC,IAAM,OAAUA,GAAM,OACD,QAAhBC,EAAKlC,MACFkC,GAAM,OAAUA,GAAM,OACtBjC,EAAgB,MAAXgC,EAAG,OAAcC,EAAG,MAAO,OAChCA,EAAK,MAIjBjC,EAAIgC,GAEG,OAAPC,GAAajC,EAAIiC,IAUzBhH,EAAKyB,YAAc,SAASqD,EAAKC,GAC7B,GAAIvD,GAAK,IAGT,KAFmB,gBAARsD,KACPtD,EAAKsD,EAAKA,EAAM,WAAa,MAAO,QAC1B,OAAPtD,GAAgC,QAAhBA,EAAKsD,MACpBtD,GAAM,MACNuD,EAAIvD,IAEJA,GAAM,MACNuD,EAAa,OAARvD,GAAI,KACTuD,EAAKvD,EAAG,KAAO,QACnBA,EAAK,MAUbxB,EAAKG,kBAAoB,SAAS2E,EAAKC,GACnC/E,EAAK8G,YAAYhC,EAAK,SAAStD,GAC3BxB,EAAK2G,WAAWnF,EAAIuD,MAY5B/E,EAAKO,kBAAoB,SAASuE,EAAKC,GACnC/E,EAAKuB,WAAWuD,EAAK,SAAStD,GAC1BxB,EAAKyB,YAAYD,EAAIuD,MAS7B/E,EAAKiH,mBAAqB,SAASzF,GAC/B,MAAQA,GAAK,IAAQ,EAAKA,EAAK,KAAS,EAAKA,EAAK,MAAW,EAAI,GASrExB,EAAKkH,cAAgB,SAASpC,GAE1B,IADA,GAAItD,GAAII,EAAE,EACc,QAAhBJ,EAAKsD,MACTlD,GAAMJ,EAAK,IAAQ,EAAKA,EAAK,KAAS,EAAKA,EAAK,MAAW,EAAI,CACnE,OAAOI,IASX5B,EAAKC,qBAAuB,SAAS6E,GACjC,GAAIjH,GAAE,EAAG+D,EAAE,CAIX,OAHA5B,GAAK8G,YAAYhC,EAAK,SAAStD,KACzB3D,EAAG+D,GAAMJ,EAAK,IAAQ,EAAKA,EAAK,KAAS,EAAKA,EAAK,MAAW,EAAI,KAEhE3D,EAAE+D,IAGP5B,IA2DX,OA/CA7I,GAAoBkN,OAAS,SAAS9B,EAAOC,GAGzC,OAFqB,KAAVD,IAAuBA,EAAQ/O,KAAKmB,YAC5B,KAAR6N,IAAqBA,EAAMhP,KAAKuD,QACtCvD,KAAK6C,SAAU,CAChB,GAAqB,gBAAVkM,IAAsBA,EAAQ,GAAM,EAC3C,KAAM1J,WAAU,gCAEpB,IADA0J,KAAW,EACQ,gBAARC,IAAoBA,EAAM,GAAM,EACvC,KAAM3J,WAAU,8BAEpB,IADA2J,KAAS,EACLD,EAAQ,GAAKA,EAAQC,GAAOA,EAAMhP,KAAKkB,OAAOuE,WAC9C,KAAMxC,YAAW,uBAAuB8L,EAAM,OAAOC,EAAI,OAAOhP,KAAKkB,OAAOuE,YAEpF,GAAIqH,EAAI,KACJN,EAAKO,kBAAkB,WACnB,MAAOgC,GAAQC,EAAMhP,KAAKoD,KAAK2L,KAAW,MAC5CnC,KAAK5M,MAAO8M,EAAKxM,KACrB,MAAOP,GACL,GAAIgP,IAAUC,EACV,KAAM/L,YAAW,kCAAkC8L,EAAM,OAAOC,GAExE,MAAOlC,MAaXpK,EAAWwC,SAAW,SAASqH,EAAK3J,EAAcC,GAC9C,IAAKA,GACkB,gBAAR0J,GACP,KAAMlH,WAAU,4BACxB,IAAIT,GAAK,GAAIlC,GAAW8J,EAAKC,qBAAqBxM,EAAasM,IAAM,GAAM,GAAI3J,EAAcC,GACzF1C,EAAI,CAKR,OAJAqM,GAAKG,kBAAkB1M,EAAasM,GAAM,SAAShC,GAC/C3F,EAAGxB,KAAKjD,KAAOoK,IAEnB3F,EAAGrB,MAAQpD,EACJyE,GAGJlC;;CC1oHX,SAAU/C,EAAQC,GAEkB,kBAAXC,SAAyBA,OAAY,IACtDA,UAAWD,GAC4B,kBAAZvB,UAA4C,gBAAXF,SAAuBA,QAAUA,OAAgB,QAC7GA,OAAgB,QAAIyB,KAEnBD,EAAgB,QAAIA,EAAgB,aAAe,KAAIC,KAE7DI,KAAM,WACL,YAYA,SAASF,GAAK+I,EAAKE,EAAMuC,GAMrBtL,KAAK6I,IAAY,EAANA,EAMX7I,KAAK+I,KAAc,EAAPA,EAMZ/I,KAAKsL,WAAaA,EAwCtB,QAASqI,GAAOC,GACZ,OAAsC,KAA9BA,GAAOA,EAAgB,YA+BnC,QAASC,GAAQ3R,EAAOoJ,GACpB,GAAIsI,GAAKE,EAAWC,CACpB,OAAIzI,IACApJ,KAAW,GACP6R,EAAS,GAAK7R,GAASA,EAAQ,OAC/B4R,EAAYE,EAAW9R,IAEZ4R,GAEfF,EAAMxH,EAASlK,GAAgB,EAARA,GAAa,GAAK,EAAI,GAAG,GAC5C6R,IACAC,EAAW9R,GAAS0R,GACjBA,KAEP1R,GAAS,GACL6R,GAAU,KAAO7R,GAASA,EAAQ,OAClC4R,EAAYG,EAAU/R,IAEX4R,GAEfF,EAAMxH,EAASlK,EAAOA,EAAQ,GAAK,EAAI,GAAG,GACtC6R,IACAE,EAAU/R,GAAS0R,GAChBA,IAmBf,QAASnL,GAAWvG,EAAOoJ,GACvB,GAAIhJ,MAAMJ,KAAW+Q,SAAS/Q,GAC1B,MAAOoJ,GAAW4I,EAAQC,CAC9B,IAAI7I,EAAU,CACV,GAAIpJ,EAAQ,EACR,MAAOgS,EACX,IAAIhS,GAASkS,EACT,MAAOC,OACR,CACH,GAAInS,IAAUoS,EACV,MAAOC,EACX,IAAIrS,EAAQ,GAAKoS,EACb,MAAOE,GAEf,MAAItS,GAAQ,EACDuG,GAAYvG,EAAOoJ,GAAUmJ,MACjCrI,EAAUlK,EAAQwS,EAAkB,EAAIxS,EAAQwS,EAAkB,EAAGpJ,GAmBhF,QAASc,GAASuI,EAASC,EAAUtJ,GACjC,MAAO,IAAIxL,GAAK6U,EAASC,EAAUtJ,GA8BvC,QAAS5C,GAAW6D,EAAKjB,EAAUuJ,GAC/B,GAAmB,IAAftI,EAAInM,OACJ,KAAMgF,OAAM,eAChB,IAAY,QAARmH,GAAyB,aAARA,GAA8B,cAARA,GAA+B,cAARA,EAC9D,MAAO4H,EASX,IARwB,gBAAb7I,IAEPuJ,EAAQvJ,EACRA,GAAW,GAEXA,IAAcA,GAElBuJ,EAAQA,GAAS,IACL,GAAK,GAAKA,EAClB,KAAM5R,YAAW,QAErB,IAAI6R,EACJ,KAAKA,EAAIvI,EAAI8G,QAAQ,MAAQ,EACzB,KAAMjO,OAAM,kBACX,IAAU,IAAN0P,EACL,MAAOpM,GAAW6D,EAAIyG,UAAU,GAAI1H,EAAUuJ,GAAOJ,KAQzD,KAAK,GAHDM,GAAetM,EAAWuM,EAAQH,EAAO,IAEzCI,EAASd,EACJhU,EAAI,EAAGA,EAAIoM,EAAInM,OAAQD,GAAK,EAAG,CACpC,GAAIqK,GAAOzI,KAAKmT,IAAI,EAAG3I,EAAInM,OAASD,GAChC+B,EAAQ6Q,SAASxG,EAAIyG,UAAU7S,EAAGA,EAAIqK,GAAOqK,EACjD,IAAIrK,EAAO,EAAG,CACV,GAAI2K,GAAQ1M,EAAWuM,EAAQH,EAAOrK,GACtCyK,GAASA,EAAOG,IAAID,GAAOE,IAAI5M,EAAWvG,QAE1C+S,GAASA,EAAOG,IAAIL,GACpBE,EAASA,EAAOI,IAAI5M,EAAWvG,IAIvC,MADA+S,GAAO3J,SAAWA,EACX2J,EAmBX,QAASK,GAAUzK,GACf,MAAIA,aAAmC/K,GAC5B+K,EACQ,gBAARA,GACApC,EAAWoC,GACH,gBAARA,GACAnC,EAAWmC,GAEfuB,EAASvB,EAAIhC,IAAKgC,EAAI9B,KAAM8B,EAAIS,UA7N3CxL,EAAKkB,UAAUuU,WAEf1R,OAAOC,eAAehE,EAAKkB,UAAW,cAClCkB,OAAO,EACP6B,YAAY,EACZC,cAAc,IAmBlBlE,EAAK6T,OAASA,CAOd,IAAIM,MAOAD,IA0CJlU,GAAK+T,QAAUA,EAkCf/T,EAAK2I,WAAaA,EAsBlB3I,EAAKsM,SAAWA,CAShB,IAAI4I,GAAUjT,KAAKC,GA4DnBlC,GAAK4I,WAAaA,EAyBlB5I,EAAKwV,UAAYA,CAUjB,IAcIZ,GAAiBc,WAOjBpB,EAAiBM,EAAiBA,EAOlCJ,EAAiBF,EAAiB,EAOlCqB,EAAa5B,EA5BI,GAAK,IAkCtBM,EAAON,EAAQ,EAMnB/T,GAAKqU,KAAOA,CAMZ,IAAID,GAAQL,EAAQ,GAAG,EAMvB/T,GAAKoU,MAAQA,CAMb,IAAIpI,GAAM+H,EAAQ,EAMlB/T,GAAKgM,IAAMA,CAMX,IAAI4J,GAAO7B,EAAQ,GAAG,EAMtB/T,GAAK4V,KAAOA,CAMZ,IAAIC,GAAU9B,GAAS,EAMvB/T,GAAK6V,QAAUA,CAMf,IAAInB,GAAYpI,GAAS,EAAc,YAAc,EAMrDtM,GAAK0U,UAAYA,CAMjB,IAAIH,GAAqBjI,GAAS,GAAc,GAAc,EAM9DtM,GAAKuU,mBAAqBA,CAM1B,IAAIE,GAAYnI,EAAS,GAAG,YAAc,EAM1CtM,GAAKyU,UAAYA,CAMjB,IAAIqB,GAAgB9V,EAAKkB,SAsuBzB,OAhuBA4U,GAAc3K,MAAQ,WAClB,MAAOjL,MAAKsL,SAAWtL,KAAK6I,MAAQ,EAAI7I,KAAK6I,KAOjD+M,EAAcC,SAAW,WACrB,MAAI7V,MAAKsL,UACItL,KAAK+I,OAAS,GAAK2L,GAAmB1U,KAAK6I,MAAQ,GACzD7I,KAAK+I,KAAO2L,GAAkB1U,KAAK6I,MAAQ,IAUtD+M,EAAclQ,SAAW,SAAkBmP,GAEvC,IADAA,EAAQA,GAAS,IACL,GAAK,GAAKA,EAClB,KAAM5R,YAAW,QACrB,IAAIjD,KAAK8V,SACL,MAAO,GACX,IAAI9V,KAAK+V,aAAc,CACnB,GAAI/V,KAAKgW,GAAGzB,GAAY,CAGpB,GAAI0B,GAAYxN,EAAWoM,GACvBqB,EAAMlW,KAAKkW,IAAID,GACfE,EAAOD,EAAId,IAAIa,GAAWG,IAAIpW,KAClC,OAAOkW,GAAIxQ,SAASmP,GAASsB,EAAKlL,QAAQvF,SAASmP,GAEnD,MAAO,IAAM7U,KAAKyU,MAAM/O,SAASmP,GAQzC,IAHA,GAAIE,GAAetM,EAAWuM,EAAQH,EAAO,GAAI7U,KAAKsL,UAClD+K,EAAMrW,KACNiV,EAAS,KACA,CACT,GAAIqB,GAASD,EAAIH,IAAInB,GACjBwB,EAASF,EAAID,IAAIE,EAAOlB,IAAIL,IAAe9J,UAAY,EACvDuL,EAASD,EAAO7Q,SAASmP,EAE7B,IADAwB,EAAMC,EACFD,EAAIP,SACJ,MAAOU,GAASvB,CAEhB,MAAOuB,EAAOpW,OAAS,GACnBoW,EAAS,IAAMA,CACnBvB,GAAS,GAAKuB,EAASvB,IASnCW,EAAca,YAAc,WACxB,MAAOzW,MAAK+I,MAOhB6M,EAAcc,oBAAsB,WAChC,MAAO1W,MAAK+I,OAAS,GAOzB6M,EAAce,WAAa,WACvB,MAAO3W,MAAK6I,KAOhB+M,EAAcgB,mBAAqB,WAC/B,MAAO5W,MAAK6I,MAAQ,GAOxB+M,EAAciB,cAAgB,WAC1B,GAAI7W,KAAK+V,aACL,MAAO/V,MAAKgW,GAAGzB,GAAa,GAAKvU,KAAKyU,MAAMoC,eAEhD,KAAK,GADDhM,GAAmB,GAAb7K,KAAK+I,KAAY/I,KAAK+I,KAAO/I,KAAK6I,IACnC7C,EAAM,GAAIA,EAAM,GACK,IAArB6E,EAAO,GAAK7E,GADOA,KAG5B,MAAoB,IAAbhG,KAAK+I,KAAY/C,EAAM,GAAKA,EAAM,GAO7C4P,EAAcE,OAAS,WACnB,MAAqB,KAAd9V,KAAK+I,MAA2B,IAAb/I,KAAK6I,KAOnC+M,EAAcG,WAAa,WACvB,OAAQ/V,KAAKsL,UAAYtL,KAAK+I,KAAO,GAOzC6M,EAAckB,WAAa,WACvB,MAAO9W,MAAKsL,UAAYtL,KAAK+I,MAAQ,GAOzC6M,EAAcmB,MAAQ,WAClB,MAA0B,KAAP,EAAX/W,KAAK6I,MAOjB+M,EAAcoB,OAAS,WACnB,MAA0B,KAAP,EAAXhX,KAAK6I,MAQjB+M,EAAcqB,OAAS,SAAgBC,GAGnC,MAFKvD,GAAOuD,KACRA,EAAQ5B,EAAU4B,KAClBlX,KAAKsL,WAAa4L,EAAM5L,UAAatL,KAAK+I,OAAS,IAAQ,GAAMmO,EAAMnO,OAAS,IAAQ,KAErF/I,KAAK+I,OAASmO,EAAMnO,MAAQ/I,KAAK6I,MAAQqO,EAAMrO,MAS1D+M,EAAcI,GAAKJ,EAAcqB,OAOjCrB,EAAcuB,UAAY,SAAmBD,GACzC,OAAQlX,KAAKgW,GAAmBkB,IASpCtB,EAAcwB,IAAMxB,EAAcuB,UAOlCvB,EAAcyB,SAAW,SAAkBH,GACvC,MAAOlX,MAAKsX,KAAqBJ,GAAS,GAS9CtB,EAAc2B,GAAK3B,EAAcyB,SAOjCzB,EAAc4B,gBAAkB,SAAyBN,GACrD,MAAOlX,MAAKsX,KAAqBJ,IAAU,GAS/CtB,EAAc6B,IAAM7B,EAAc4B,gBAOlC5B,EAAc8B,YAAc,SAAqBR,GAC7C,MAAOlX,MAAKsX,KAAqBJ,GAAS,GAS9CtB,EAAc+B,GAAK/B,EAAc8B,YAOjC9B,EAAcgC,mBAAqB,SAA4BV,GAC3D,MAAOlX,MAAKsX,KAAqBJ,IAAU,GAS/CtB,EAAciC,IAAMjC,EAAcgC,mBAQlChC,EAAckC,QAAU,SAAiBZ,GAGrC,GAFKvD,EAAOuD,KACRA,EAAQ5B,EAAU4B,IAClBlX,KAAKgW,GAAGkB,GACR,MAAO,EACX,IAAIa,GAAU/X,KAAK+V,aACfiC,EAAWd,EAAMnB,YACrB,OAAIgC,KAAYC,GACJ,GACPD,GAAWC,EACL,EAENhY,KAAKsL,SAGF4L,EAAMnO,OAAS,EAAM/I,KAAK+I,OAAS,GAAOmO,EAAMnO,OAAS/I,KAAK+I,MAASmO,EAAMrO,MAAQ,EAAM7I,KAAK6I,MAAQ,GAAO,EAAI,EAFhH7I,KAAKoW,IAAIc,GAAOnB,cAAgB,EAAI,GAYnDH,EAAc0B,KAAO1B,EAAckC,QAMnClC,EAAc7J,OAAS,WACnB,OAAK/L,KAAKsL,UAAYtL,KAAKgW,GAAGzB,GACnBA,EACJvU,KAAKiY,MAAM5C,IAAIvJ,IAQ1B8J,EAAcnB,IAAMmB,EAAc7J,OAOlC6J,EAAcP,IAAM,SAAa6C,GACxBvE,EAAOuE,KACRA,EAAS5C,EAAU4C,GAIvB,IAAIC,GAAMnY,KAAK+I,OAAS,GACpBqP,EAAkB,MAAZpY,KAAK+I,KACXsP,EAAMrY,KAAK6I,MAAQ,GACnByP,EAAiB,MAAXtY,KAAK6I,IAEX0P,EAAML,EAAOnP,OAAS,GACtByP,EAAoB,MAAdN,EAAOnP,KACb0P,EAAMP,EAAOrP,MAAQ,GACrB6P,EAAmB,MAAbR,EAAOrP,IAEb8P,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,CAYrC,OAXAA,IAAOR,EAAMI,EACbG,GAAOC,IAAQ,GACfA,GAAO,MACPD,GAAOR,EAAMI,EACbG,GAAOC,IAAQ,GACfA,GAAO,MACPD,GAAOR,EAAMI,EACbG,GAAOC,IAAQ,GACfA,GAAO,MACPD,GAAOR,EAAMI,EACbI,GAAO,MACAvM,EAAUyM,GAAO,GAAMC,EAAMH,GAAO,GAAMC,EAAK5Y,KAAKsL,WAQ/DsK,EAAcmD,SAAW,SAAkBC,GAGvC,MAFKrF,GAAOqF,KACRA,EAAa1D,EAAU0D,IACpBhZ,KAAKqV,IAAI2D,EAAWvE,QAS/BmB,EAAcQ,IAAMR,EAAcmD,SAOlCnD,EAAcqD,SAAW,SAAkBC,GACvC,GAAIlZ,KAAK8V,SACL,MAAO3B,EAGX,IAFKR,EAAOuF,KACRA,EAAa5D,EAAU4D,IACvBA,EAAWpD,SACX,MAAO3B,EACX,IAAInU,KAAKgW,GAAGzB,GACR,MAAO2E,GAAWnC,QAAUxC,EAAYJ,CAC5C,IAAI+E,EAAWlD,GAAGzB,GACd,MAAOvU,MAAK+W,QAAUxC,EAAYJ,CAEtC,IAAInU,KAAK+V,aACL,MAAImD,GAAWnD,aACJ/V,KAAKyU,MAAMW,IAAI8D,EAAWzE,OAE1BzU,KAAKyU,MAAMW,IAAI8D,GAAYzE,KACnC,IAAIyE,EAAWnD,aAClB,MAAO/V,MAAKoV,IAAI8D,EAAWzE,OAAOA,KAGtC,IAAIzU,KAAKuX,GAAG9B,IAAeyD,EAAW3B,GAAG9B,GACrC,MAAOhN,GAAWzI,KAAK6V,WAAaqD,EAAWrD,WAAY7V,KAAKsL,SAKpE,IAAI6M,GAAMnY,KAAK+I,OAAS,GACpBqP,EAAkB,MAAZpY,KAAK+I,KACXsP,EAAMrY,KAAK6I,MAAQ,GACnByP,EAAiB,MAAXtY,KAAK6I,IAEX0P,EAAMW,EAAWnQ,OAAS,GAC1ByP,EAAwB,MAAlBU,EAAWnQ,KACjB0P,EAAMS,EAAWrQ,MAAQ,GACzB6P,EAAuB,MAAjBQ,EAAWrQ,IAEjB8P,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,CAqBrC,OApBAA,IAAOR,EAAMI,EACbG,GAAOC,IAAQ,GACfA,GAAO,MACPD,GAAOR,EAAMK,EACbE,GAAOC,IAAQ,GACfA,GAAO,MACPA,GAAOP,EAAMG,EACbG,GAAOC,IAAQ,GACfA,GAAO,MACPD,GAAOR,EAAMM,EACbC,GAAOC,IAAQ,GACfA,GAAO,MACPA,GAAOP,EAAMI,EACbE,GAAOC,IAAQ,GACfA,GAAO,MACPA,GAAON,EAAME,EACbG,GAAOC,IAAQ,GACfA,GAAO,MACPD,GAAOR,EAAMO,EAAMN,EAAMK,EAAMJ,EAAMG,EAAMF,EAAMC,EACjDI,GAAO,MACAvM,EAAUyM,GAAO,GAAMC,EAAMH,GAAO,GAAMC,EAAK5Y,KAAKsL,WAS/DsK,EAAcR,IAAMQ,EAAcqD,SAQlCrD,EAAcuD,OAAS,SAAgBC,GAGnC,GAFKzF,EAAOyF,KACRA,EAAU9D,EAAU8D,IACpBA,EAAQtD,SACR,KAAM1Q,OAAM,mBAChB,IAAIpF,KAAK8V,SACL,MAAO9V,MAAKsL,SAAW4I,EAAQC,CACnC,IAAIkF,GAAQhD,EAAKiD,CACjB,IAAKtZ,KAAKsL,SA6BH,CAKH,GAFK8N,EAAQ9N,WACT8N,EAAUA,EAAQzN,cAClByN,EAAQzB,GAAG3X,MACX,MAAOkU,EACX,IAAIkF,EAAQzB,GAAG3X,KAAKuZ,KAAK,IACrB,MAAO7D,EACX4D,GAAMpF,MAtCU,CAGhB,GAAIlU,KAAKgW,GAAGzB,GAAY,CACpB,GAAI6E,EAAQpD,GAAGlK,IAAQsN,EAAQpD,GAAGL,GAC9B,MAAOpB,EACN,IAAI6E,EAAQpD,GAAGzB,GAChB,MAAOzI,EAKP,OADAuN,GADerZ,KAAKwZ,IAAI,GACNtD,IAAIkD,GAASK,IAAI,GAC/BJ,EAAOrD,GAAG7B,GACHiF,EAAQrD,aAAejK,EAAM6J,GAEpCU,EAAMrW,KAAKoW,IAAIgD,EAAQhE,IAAIiE,IAC3BC,EAAMD,EAAOhE,IAAIgB,EAAIH,IAAIkD,KAI9B,GAAIA,EAAQpD,GAAGzB,GAClB,MAAOvU,MAAKsL,SAAW4I,EAAQC,CACnC,IAAInU,KAAK+V,aACL,MAAIqD,GAAQrD,aACD/V,KAAKyU,MAAMyB,IAAIkD,EAAQ3E,OAC3BzU,KAAKyU,MAAMyB,IAAIkD,GAAS3E,KAC5B,IAAI2E,EAAQrD,aACf,MAAO/V,MAAKkW,IAAIkD,EAAQ3E,OAAOA,KACnC6E,GAAMnF,EAmBV,IADAkC,EAAMrW,KACCqW,EAAIwB,IAAIuB,IAAU,CAGrBC,EAAStX,KAAK2X,IAAI,EAAG3X,KAAKQ,MAAM8T,EAAIR,WAAauD,EAAQvD,YAWzD,KAPA,GAAI8D,GAAO5X,KAAK6X,KAAK7X,KAAKS,IAAI6W,GAAUtX,KAAKU,KACzCoX,EAASF,GAAQ,GAAM,EAAI3E,EAAQ,EAAG2E,EAAO,IAI7CG,EAAYrR,EAAW4Q,GACvBU,EAAYD,EAAU1E,IAAIgE,GACvBW,EAAUhE,cAAgBgE,EAAUpC,GAAGtB,IAC1CgD,GAAUQ,EACVC,EAAYrR,EAAW4Q,EAAQrZ,KAAKsL,UACpCyO,EAAYD,EAAU1E,IAAIgE,EAK1BU,GAAUhE,WACVgE,EAAYhO,GAEhBwN,EAAMA,EAAIjE,IAAIyE,GACdzD,EAAMA,EAAID,IAAI2D,GAElB,MAAOT,IASX1D,EAAcM,IAAMN,EAAcuD,OAOlCvD,EAAcoE,OAAS,SAAgBZ,GAGnC,MAFKzF,GAAOyF,KACRA,EAAU9D,EAAU8D,IACjBpZ,KAAKoW,IAAIpW,KAAKkW,IAAIkD,GAAShE,IAAIgE,KAS1CxD,EAAcqE,IAAMrE,EAAcoE,OAMlCpE,EAAcqC,IAAM,WAChB,MAAO7L,IAAUpM,KAAK6I,KAAM7I,KAAK+I,KAAM/I,KAAKsL,WAQhDsK,EAAc/J,IAAM,SAAaqL,GAG7B,MAFKvD,GAAOuD,KACRA,EAAQ5B,EAAU4B,IACf9K,EAASpM,KAAK6I,IAAMqO,EAAMrO,IAAK7I,KAAK+I,KAAOmO,EAAMnO,KAAM/I,KAAKsL,WAQvEsK,EAAcsE,GAAK,SAAYhD,GAG3B,MAFKvD,GAAOuD,KACRA,EAAQ5B,EAAU4B,IACf9K,EAASpM,KAAK6I,IAAMqO,EAAMrO,IAAK7I,KAAK+I,KAAOmO,EAAMnO,KAAM/I,KAAKsL,WAQvEsK,EAAcnK,IAAM,SAAayL,GAG7B,MAFKvD,GAAOuD,KACRA,EAAQ5B,EAAU4B,IACf9K,EAASpM,KAAK6I,IAAMqO,EAAMrO,IAAK7I,KAAK+I,KAAOmO,EAAMnO,KAAM/I,KAAKsL,WAQvEsK,EAAcpK,UAAY,SAAmB2O,GAGzC,MAFIxG,GAAOwG,KACPA,EAAUA,EAAQlP,SACE,IAAnBkP,GAAW,IACLna,KACFma,EAAU,GACR/N,EAASpM,KAAK6I,KAAOsR,EAAUna,KAAK+I,MAAQoR,EAAYna,KAAK6I,MAAS,GAAKsR,EAAWna,KAAKsL,UAE3Fc,EAAS,EAAGpM,KAAK6I,KAAQsR,EAAU,GAAKna,KAAKsL,WAS5DsK,EAAc6D,IAAM7D,EAAcpK,UAOlCoK,EAAclK,WAAa,SAAoByO,GAG3C,MAFIxG,GAAOwG,KACPA,EAAUA,EAAQlP,SACE,IAAnBkP,GAAW,IACLna,KACFma,EAAU,GACR/N,EAAUpM,KAAK6I,MAAQsR,EAAYna,KAAK+I,MAAS,GAAKoR,EAAWna,KAAK+I,MAAQoR,EAASna,KAAKsL,UAE5Fc,EAASpM,KAAK+I,MAASoR,EAAU,GAAKna,KAAK+I,MAAQ,EAAI,GAAK,EAAG/I,KAAKsL,WASnFsK,EAAc4D,IAAM5D,EAAclK,WAOlCkK,EAAczK,mBAAqB,SAA4BgP,GAI3D,GAHIxG,EAAOwG,KACPA,EAAUA,EAAQlP,SAEN,KADhBkP,GAAW,IAEP,MAAOna,KAEP,IAAI+I,GAAO/I,KAAK+I,IAChB,IAAIoR,EAAU,GAAI,CAEd,MAAO/N,GADGpM,KAAK6I,MACUsR,EAAYpR,GAAS,GAAKoR,EAAWpR,IAASoR,EAASna,KAAKsL,UAClF,MAAgB,MAAZ6O,EACA/N,EAASrD,EAAM,EAAG/I,KAAKsL,UAEvBc,EAASrD,IAAUoR,EAAU,GAAK,EAAGna,KAAKsL,WAU7DsK,EAAc2D,KAAO3D,EAAczK,mBAMnCyK,EAAcrK,SAAW,WACrB,MAAKvL,MAAKsL,SAEHc,EAASpM,KAAK6I,IAAK7I,KAAK+I,MAAM,GAD1B/I,MAQf4V,EAAcjK,WAAa,WACvB,MAAI3L,MAAKsL,SACEtL,KACJoM,EAASpM,KAAK6I,IAAK7I,KAAK+I,MAAM,IAQzC6M,EAAcwE,QAAU,SAASC,GAC7B,MAAOA,GAAKra,KAAKsa,YAActa,KAAKua,aAOxC3E,EAAc0E,UAAY,WACtB,GAAIxR,GAAK9I,KAAK+I,KACVH,EAAK5I,KAAK6I,GACd,QACkB,IAAbD,EACAA,IAAQ,EAAK,IACbA,IAAO,GAAM,IACbA,IAAO,GAAM,IACA,IAAbE,EACAA,IAAQ,EAAK,IACbA,IAAO,GAAM,IACbA,IAAO,GAAM,MAQtB8M,EAAc2E,UAAY,WACtB,GAAIzR,GAAK9I,KAAK+I,KACVH,EAAK5I,KAAK6I,GACd,QACKC,IAAO,GAAM,IACbA,IAAO,GAAM,IACbA,IAAQ,EAAK,IACA,IAAbA,EACAF,IAAO,GAAM,IACbA,IAAO,GAAM,IACbA,IAAQ,EAAK,IACA,IAAbA,IAIF9I;;AC5qCX,QAAS0a,oBACL,KAAM,IAAIpV,OAAM,mCAEpB,QAASqV,uBACL,KAAM,IAAIrV,OAAM,qCAsBpB,QAASsV,YAAWC,GAChB,GAAIC,mBAAqBC,WAErB,MAAOA,YAAWF,EAAK,EAG3B,KAAKC,mBAAqBJ,mBAAqBI,mBAAqBC,WAEhE,MADAD,kBAAmBC,WACZA,WAAWF,EAAK,EAE3B,KAEI,MAAOC,kBAAiBD,EAAK,GAC/B,MAAM5a,GACJ,IAEI,MAAO6a,kBAAiBrV,KAAK,KAAMoV,EAAK,GAC1C,MAAM5a,GAEJ,MAAO6a,kBAAiBrV,KAAKvF,KAAM2a,EAAK,KAMpD,QAASG,iBAAgBC,GACrB,GAAIC,qBAAuBC,aAEvB,MAAOA,cAAaF,EAGxB,KAAKC,qBAAuBP,sBAAwBO,qBAAuBC,aAEvE,MADAD,oBAAqBC,aACdA,aAAaF,EAExB,KAEI,MAAOC,oBAAmBD,GAC5B,MAAOhb,GACL,IAEI,MAAOib,oBAAmBzV,KAAK,KAAMwV,GACvC,MAAOhb,GAGL,MAAOib,oBAAmBzV,KAAKvF,KAAM+a,KAYjD,QAASG,mBACAC,UAAaC,eAGlBD,UAAW,EACPC,aAAahb,OACbib,MAAQD,aAAahX,OAAOiX,OAE5BC,YAAc,EAEdD,MAAMjb,QACNmb,cAIR,QAASA,cACL,IAAIJ,SAAJ,CAGA,GAAIK,GAAUd,WAAWQ,gBACzBC,WAAW,CAGX,KADA,GAAI/N,GAAMiO,MAAMjb,OACVgN,GAAK,CAGP,IAFAgO,aAAeC,MACfA,WACSC,WAAalO,GACdgO,cACAA,aAAaE,YAAYG,KAGjCH,aAAc,EACdlO,EAAMiO,MAAMjb,OAEhBgb,aAAe,KACfD,UAAW,EACXL,gBAAgBU,IAiBpB,QAASE,MAAKf,EAAKgB,GACf3b,KAAK2a,IAAMA,EACX3a,KAAK2b,MAAQA,EAYjB,QAASC,SAhKT,GAAIC,SAAU1d,OAAOC,WAOjBwc,iBACAI,oBAQH,WACG,IAEQJ,iBADsB,kBAAfC,YACYA,WAEAL,iBAEzB,MAAOza,GACL6a,iBAAmBJ,iBAEvB,IAEQQ,mBADwB,kBAAjBC,cACcA,aAEAR,oBAE3B,MAAO1a,GACLib,mBAAqBP,uBAuD7B,IAAIY,UACAF,UAAW,EACXC,aACAE,YAAc,CAyClBO,SAAQC,SAAW,SAAUnB,GACzB,GAAIoB,GAAO,GAAIhb,OAAMN,UAAUL,OAAS,EACxC,IAAIK,UAAUL,OAAS,EACnB,IAAK,GAAID,GAAI,EAAGA,EAAIM,UAAUL,OAAQD,IAClC4b,EAAK5b,EAAI,GAAKM,UAAUN,EAGhCkb,OAAMva,KAAK,GAAI4a,MAAKf,EAAKoB,IACJ,IAAjBV,MAAMjb,QAAiB+a,UACvBT,WAAWa,aASnBG,KAAK1a,UAAUya,IAAM,WACjBzb,KAAK2a,IAAI/Z,MAAM,KAAMZ,KAAK2b,QAE9BE,QAAQG,MAAQ,UAChBH,QAAQI,SAAU,EAClBJ,QAAQK,OACRL,QAAQM,QACRN,QAAQO,QAAU,GAClBP,QAAQQ,YAIRR,QAAQS,GAAKV,KACbC,QAAQU,YAAcX,KACtBC,QAAQW,KAAOZ,KACfC,QAAQY,IAAMb,KACdC,QAAQa,eAAiBd,KACzBC,QAAQc,mBAAqBf,KAC7BC,QAAQe,KAAOhB,KACfC,QAAQgB,gBAAkBjB,KAC1BC,QAAQiB,oBAAsBlB,KAE9BC,QAAQkB,UAAY,SAAUne,GAAQ,UAEtCid,QAAQmB,QAAU,SAAUpe,GACxB,KAAM,IAAIwG,OAAM,qCAGpByW,QAAQoB,IAAM,WAAc,MAAO,KACnCpB,QAAQqB,MAAQ,SAAUC,GACtB,KAAM,IAAI/X,OAAM,mCAEpByW,QAAQuB,MAAQ,WAAa,MAAO;;;CClKpC,SAAUzd,EAAQC,GAEkB,kBAAXC,SAAyBA,OAAY,IACtDA,QAAQ,cAAeD,GACgB,kBAAZvB,UAA4C,gBAAXF,SAAuBA,QAAUA,OAAgB,QAC7GA,OAAgB,QAAIyB,EAAQvB,QAAQ,eAAe,IAElDsB,EAAgB,QAAIA,EAAgB,aAAmB,SAAIC,EAAQD,EAAgB,QAAc,aAEvGK,KAAM,SAAS0C,EAAY2a,GAC1B,YAQA,IAAIC,KAwmKJ,OAlmKAA,GAAS5a,WAAaA,EAMtB4a,EAASxd,KAAO4C,EAAW5C,MAAQ,KAQnCwd,EAAS9Z,QAAU,QAQnB8Z,EAASC,cAOTD,EAASC,WAAWC,OAAS,EAQ7BF,EAASC,WAAWE,OAAS,EAQ7BH,EAASC,WAAWG,OAAS,EAQ7BJ,EAASC,WAAWI,WAAa,EAQjCL,EAASC,WAAWK,SAAW,EAQ/BN,EAASC,WAAWM,OAAS,EAQ7BP,EAASQ,qBACLR,EAASC,WAAWC,OACpBF,EAASC,WAAWE,OACpBH,EAASC,WAAWM,QAUxBP,EAASS,OAELC,OACIpf,KAAM,QACNqf,SAAUX,EAASC,WAAWC,OAC9BU,aAAc,GAElBC,QACIvf,KAAM,SACNqf,SAAUX,EAASC,WAAWC,OAC9BU,aAAc,GAElBE,QACIxf,KAAM,SACNqf,SAAUX,EAASC,WAAWC,OAC9BU,aAAc,GAElBG,OACIzf,KAAM,QACNqf,SAAUX,EAASC,WAAWC,OAC9BU,aAAcZ,EAASxd,KAAOwd,EAASxd,KAAKqU,SAAO5P,IAEvD+Z,QACI1f,KAAM,SACNqf,SAAUX,EAASC,WAAWC,OAC9BU,aAAcZ,EAASxd,KAAOwd,EAASxd,KAAKoU,UAAQ3P,IAExDga,QACI3f,KAAM,SACNqf,SAAUX,EAASC,WAAWC,OAC9BU,aAAcZ,EAASxd,KAAOwd,EAASxd,KAAKqU,SAAO5P,IAEvDia,MACI5f,KAAM,OACNqf,SAAUX,EAASC,WAAWC,OAC9BU,cAAc,GAElBO,QACI7f,KAAM,SACNqf,SAAUX,EAASC,WAAWE,OAC9BS,aAAc,GAElBlR,QACIpO,KAAM,SACNqf,SAAUX,EAASC,WAAWG,OAC9BQ,aAAc,IAElBnY,OACInH,KAAM,QACNqf,SAAUX,EAASC,WAAWG,OAC9BQ,aAAc,MAElBQ,SACI9f,KAAM,UACNqf,SAAUX,EAASC,WAAWM,OAC9BK,aAAc,GAElBS,UACI/f,KAAM,WACNqf,SAAUX,EAASC,WAAWM,OAC9BK,aAAc,GAElBU,SACIhgB,KAAM,UACNqf,SAAUX,EAASC,WAAWE,OAC9BS,aAAeZ,EAASxd,KAAOwd,EAASxd,KAAKoU,UAAQ3P,IAEzDsa,UACIjgB,KAAM,WACNqf,SAAUX,EAASC,WAAWE,OAC9BS,aAAcZ,EAASxd,KAAOwd,EAASxd,KAAKqU,SAAO5P,IAEvDua,OACIlgB,KAAM,QACNqf,SAAUX,EAASC,WAAWM,OAC9BK,aAAc,GAElBa,MACIngB,KAAM,OACNqf,SAAUX,EAASC,WAAWC,OAC9BU,aAAc,GAElBc,SACIpgB,KAAM,UACNqf,SAAUX,EAASC,WAAWG,OAC9BQ,aAAc,MAElBe,OACIrgB,KAAM,QACNqf,SAAUX,EAASC,WAAWI,WAC9BO,aAAc,OAUtBZ,EAAS4B,eACL5B,EAASS,MAAa,MACtBT,EAASS,MAAc,OACvBT,EAASS,MAAgB,SACzBT,EAASS,MAAc,OACvBT,EAASS,MAAe,QACxBT,EAASS,MAAa,MACtBT,EAASS,MAAc,OACvBT,EAASS,MAAgB,SACzBT,EAASS,MAAc,OACvBT,EAASS,MAAe,QACxBT,EAASS,MAAY,KACrBT,EAASS,MAAc,OACvBT,EAASS,MAAa,OAS1BT,EAAS6B,OAAS,EAQlB7B,EAAS8B,OAAS,UAQlB9B,EAAS+B,0BAA2B,EAQpC/B,EAASgC,mBAAoB,EAQ7BhC,EAASiC,kBAAmB,EAM5BjC,EAASkC,KAAO,WAQZ,GAAIA,KAsGJ,OA9FAA,GAAKC,UACkB,gBAAZ5D,UAAwBA,QAAQ,IAAO,oBAAuBA,QAAiB,SAS1F2D,EAAKE,IAAM,WAUP,IAAK,GARDC,IACA,WAAa,MAAO,IAAIC,iBACxB,WAAa,MAAO,IAAIC,eAAc,mBACtC,WAAa,MAAO,IAAIA,eAAc,mBACtC,WAAa,MAAO,IAAIA,eAAc,uBAGtCC,EAAM,KACD3f,EAAE,EAAEA,EAAEwf,EAAiBvf,OAAOD,IAAK,CACxC,IAAM2f,EAAMH,EAAiBxf,KAC7B,MAAOJ,GAAK,SACZ,MAEJ,IAAK+f,EACD,KAAM1a,OAAM,kCAChB,OAAO0a,IAWXN,EAAKO,MAAQ,SAASC,EAAMC,GAGxB,GAFIA,GAA+B,kBAAZA,KACnBA,EAAW,MACXT,EAAKC,QAAS,CACd,GAAIS,GAAK7hB,QAAQ,KACjB,IAAI4hB,EACAC,EAAGC,SAASH,EAAM,SAASrV,EAAKyV,GAExBH,EADAtV,EACS,KAEA,GAAGyV,SAGpB,KACI,MAAOF,GAAGG,aAAaL,GACzB,MAAOjgB,GACL,MAAO,WAEZ,CACH,GAAI+f,GAAMN,EAAKE,KAKf,IAJAI,EAAIQ,KAAK,MAAON,IAAMC,GAEtBH,EAAIS,iBAAiB,SAAU,cACK,kBAAzBT,GAAIU,kBAAiCV,EAAIU,iBAAiB,eACjEP,EAaA,MADAH,GAAIW,KAAK,MACsB,KAAdX,EAAIY,QAA4C,GAAdZ,EAAIY,QAA2C,gBAArBZ,GAAIa,aACtEb,EAAIa,aACR,IAPP,IAPAb,EAAIc,mBAAqB,WACC,GAAlBd,EAAIe,YAEJZ,EAD2B,KAAdH,EAAIY,QAA4C,GAAdZ,EAAIY,QAA2C,gBAArBZ,GAAIa,aACpEb,EAAIa,aAEJ,OAEK,GAAlBb,EAAIe,WACJ,MACJf,GAAIW,KAAK,QAgBrBjB,EAAKsB,YAAc,SAASvU,GACxB,MAAOA,GAAIwU,QAAQ,eAAgB,SAAUC,EAAIC,GAC7C,MAAOA,GAAG1O,iBAIXiN,KAQXlC,EAAS4D,MAGLC,MAAO,4BAGPC,KAAM,uCAGNC,KAAM,iHAGNC,KAAM,2BAGNC,QAAS,0BAGTC,QAAS,+DAGTC,UAAW,kCAGXC,OAAQ,gGAGRC,WAAY,sBAGZC,WAAY,sBAGZC,WAAY,YAGZC,WAAY,kDAGZC,KAAM,oBAGNC,GAAI,gDAGJC,MAAO,mDAGPC,WAAY,KAGZC,OAAQ,iEAGRC,UAAW,kCAGXC,UAAW,mCAOf/E,EAASgF,SAAW,SAAUhF,EAAU4D,GA2UpC,QAASqB,GAAKrgB,EAAOsgB,GACjB,GAAIxjB,IAAM,EACNyjB,EAAO,CAKX,IAJuB,KAAnBvgB,EAAM4Q,OAAO,KACb2P,GAAQ,EACRvgB,EAAQA,EAAM8Q,UAAU,IAExBkO,EAAKS,WAAW9P,KAAK3P,GACrBlD,EAAK+T,SAAS7Q,OACb,IAAIgf,EAAKU,WAAW/P,KAAK3P,GAC1BlD,EAAK+T,SAAS7Q,EAAM8Q,UAAU,GAAI,QACjC,CAAA,IAAIkO,EAAKW,WAAWhQ,KAAK3P,GAG1B,KAAMkD,OAAM,sBAAwBqd,EAAO,EAAI,IAAM,IAAMvgB,EAF3DlD,GAAK+T,SAAS7Q,EAAM8Q,UAAU,GAAI,GAItC,GADAhU,EAAMyjB,EAAKzjB,EAAI,GACVwjB,GAAiBxjB,EAAK,EACvB,KAAMoG,OAAM,sBAAwBqd,EAAO,EAAI,IAAM,IAAMvgB,EAC/D,OAAOlD,GASX,QAAS0jB,GAAS7X,GACd,GAAI4X,GAAO,CAKX,IAJqB,KAAjB5X,EAAIiI,OAAO,KACX2P,GAAQ,EACR5X,EAAMA,EAAImI,UAAU,IAEpBkO,EAAKS,WAAW9P,KAAKhH,GACrB,MAAO4X,GAAO1P,SAASlI,EAAK,GAC3B,IAAIqW,EAAKU,WAAW/P,KAAKhH,GAC1B,MAAO4X,GAAO1P,SAASlI,EAAImI,UAAU,GAAI,GACxC,IAAIkO,EAAKW,WAAWhQ,KAAKhH,GAC1B,MAAO4X,GAAO1P,SAASlI,EAAImI,UAAU,GAAI,EACxC,IAAY,QAARnI,EACL,MAAO4X,IAAO3gB,EAAAA,EACb,IAAY,QAAR+I,EACL,MAAOhJ,IACN,IAAIqf,EAAKY,WAAWjQ,KAAKhH,GAC1B,MAAO4X,GAAOE,WAAW9X,EAC7B,MAAMzF,OAAM,0BAA4Bqd,EAAO,EAAI,IAAM,IAAM5X,GAyFnE,QAAS+X,GAAUnkB,EAASG,EAAMsD,OACD,KAAlBzD,EAAQG,GACfH,EAAQG,GAAQsD,GAEXnB,MAAM8hB,QAAQpkB,EAAQG,MACvBH,EAAQG,IAAUH,EAAQG,KAC9BH,EAAQG,GAAMkC,KAAKoB,IA/c3B,GAAIogB,MASAQ,EAAY,SAASC,GAOrB/iB,KAAKuO,OAASwU,EAAM,GAOpB/iB,KAAKgjB,MAAQ,EAObhjB,KAAKijB,KAAO,EAOZjjB,KAAKkjB,SAOLljB,KAAKmjB,YAAc,MAOnBC,EAAqBN,EAAU9hB,SAOnCoiB,GAAmBC,YAAc,WAC7B,GAAIC,GAA0B,MAArBtjB,KAAKmjB,YACRjC,EAAKkB,UACLlB,EAAKmB,SACXiB,GAAGC,UAAYvjB,KAAKgjB,MAAQ,CAC5B,IAAIQ,GAAQF,EAAGG,KAAKzjB,KAAKuO,OACzB,KAAKiV,EACD,KAAMpe,OAAM,sBAIhB,OAHApF,MAAKgjB,MAAQM,EAAGC,UAChBvjB,KAAKkjB,MAAMpiB,KAAKd,KAAKmjB,aACrBnjB,KAAKmjB,YAAc,KACZK,EAAM,IAQjBJ,EAAmBM,KAAO,WACtB,GAAI1jB,KAAKkjB,MAAM9iB,OAAS,EACpB,MAAOJ,MAAKkjB,MAAMS,OACtB,IAAI3jB,KAAKgjB,OAAShjB,KAAKuO,OAAOnO,OAC1B,MAAO,KACX,IAAyB,OAArBJ,KAAKmjB,YACL,MAAOnjB,MAAKqjB,aAEhB,IAAIO,GACAC,EACAH,CACJ,GAAG,CAIC,IAHAE,GAAS,EAGF1C,EAAKgB,WAAWrQ,KAAK6R,EAAO1jB,KAAKuO,OAAOuE,OAAO9S,KAAKgjB,SAGvD,GAFa,OAATU,KACE1jB,KAAKijB,OACLjjB,KAAKgjB,QAAUhjB,KAAKuO,OAAOnO,OAC7B,MAAO,KAIf,IAAuC,MAAnCJ,KAAKuO,OAAOuE,OAAO9S,KAAKgjB,OAExB,KADEhjB,KAAKgjB,MACgC,MAAnChjB,KAAKuO,OAAOuE,OAAO9S,KAAKgjB,OAAgB,CACxC,KAA4C,OAArChjB,KAAKuO,OAAOuE,SAAS9S,KAAKgjB,QAC7B,GAAIhjB,KAAKgjB,OAAShjB,KAAKuO,OAAOnO,OAC1B,MAAO,QACbJ,KAAKgjB,QACLhjB,KAAKijB,KACPW,GAAS,MACN,CAAA,GAAgD,OAA3CF,EAAO1jB,KAAKuO,OAAOuE,OAAO9S,KAAKgjB,QAYvC,MAAO,GAXP,GAAG,CAGC,GAFa,OAATU,KACE1jB,KAAKijB,OACLjjB,KAAKgjB,QAAUhjB,KAAKuO,OAAOnO,OAC7B,MAAO,KACXyjB,GAAOH,EACPA,EAAO1jB,KAAKuO,OAAOuE,OAAO9S,KAAKgjB,aACjB,MAATa,GAAyB,MAATH,KACvB1jB,KAAKgjB,MACPY,GAAS,SAIZA,EAET,IAAI5jB,KAAKgjB,QAAUhjB,KAAKuO,OAAOnO,OAC3B,MAAO,KAGX,IAAI4O,GAAMhP,KAAKgjB,KAGf,IAFA9B,EAAKC,MAAMoC,UAAY,GACXrC,EAAKC,MAAMtP,KAAK7R,KAAKuO,OAAOuE,OAAO9D,MAE3C,KAAMA,EAAMhP,KAAKuO,OAAOnO,SAAW8gB,EAAKC,MAAMtP,KAAK7R,KAAKuO,OAAOuE,OAAO9D,OAChEA,CACV,IAAI8U,GAAQ9jB,KAAKuO,OAAOyE,UAAUhT,KAAKgjB,MAAOhjB,KAAKgjB,MAAQhU,EAG3D,OAFc,MAAV8U,GAA2B,MAAVA,IACjB9jB,KAAKmjB,YAAcW,GAChBA,GAQXV,EAAmBW,KAAO,WACtB,GAA0B,IAAtB/jB,KAAKkjB,MAAM9iB,OAAc,CACzB,GAAI0jB,GAAQ9jB,KAAK0jB,MACjB,IAAc,OAAVI,EACA,MAAO,KACX9jB,MAAKkjB,MAAMpiB,KAAKgjB,GAEpB,MAAO9jB,MAAKkjB,MAAM,IAQtBE,EAAmB3S,KAAO,SAASuT,GAC/B,GAAIC,GAASjkB,KAAK0jB,MAClB,IAAIO,IAAWD,EACX,KAAM5e,OAAM,YAAY6e,EAAO,OAAOD,EAAS,eAQvDZ,EAAmBc,KAAO,SAASF,GAC/B,MAAIhkB,MAAK+jB,SAAWC,IAChBhkB,KAAK0jB,QACE,IAUfN,EAAmB1d,SAAW,WAC1B,MAAO,cAAc1F,KAAKgjB,MAAM,IAAIhjB,KAAKuO,OAAOnO,OAAO,YAAYJ,KAAKijB,KAAK,KAOjFX,EAASQ,UAAYA,CASrB,IAAIqB,GAAS,SAAS5V,GAOlBvO,KAAKokB,GAAK,GAAItB,GAAUvU,GAMxBvO,KAAKqkB,QAAS,GAOdC,EAAkBH,EAAOnjB,SAmqB7B,OA3pBAsjB,GAAgBC,MAAQ,WACpB,GAUIT,GAEAU,EAZAC,GACA7lB,KAAQ,SACRL,QAAW,KACXI,YACAQ,SACAulB,WACAjmB,WACAkmB,aAIAC,GAAO,CAEX,KACI,KAAOd,EAAQ9jB,KAAKokB,GAAGV,QACnB,OAAQI,GACJ,IAAK,UACD,IAAKc,GAAgC,OAAxBH,EAAkB,QAC3B,KAAMrf,OAAM,uBAEhB,IADA0e,EAAQ9jB,KAAKokB,GAAGV,QACXxC,EAAKM,QAAQ3P,KAAKiS,GACnB,KAAM1e,OAAM,yBAA2B0e,EAC3C9jB,MAAKokB,GAAG3T,KAAK,KACbgU,EAAkB,QAAIX,CACtB,MACJ,KAAK,SACD,IAAKc,EACD,KAAMxf,OAAM,sBAChB0e,GAAQ9jB,KAAKokB,GAAGL,QACF,WAAVD,IAAuBU,EAAiB,SAAVV,KAC9B9jB,KAAKokB,GAAGV,OACZI,EAAQ9jB,KAAKqjB,cACbrjB,KAAKokB,GAAG3T,KAAK,KACR+T,GACDC,EAAkB,QAAE3jB,KAAKgjB,EAC7B,MACJ,KAAK,SACD,IAAKc,EACD,KAAMxf,OAAM,sBAChBpF,MAAKokB,GAAG3T,KAAK,KACqC,YAA7CgU,EAAiB,OAAIzkB,KAAKqjB,iBAC3BrjB,KAAKqkB,QAAS,GAClBrkB,KAAKokB,GAAG3T,KAAK,IACb,MACJ,KAAK,UACDzQ,KAAK6kB,cAAcJ,EAAU,MAC7BG,GAAO,CACP,MACJ,KAAK,OACD5kB,KAAK8kB,WAAWL,GAChBG,GAAO,CACP,MACJ,KAAK,SACD5kB,KAAK+kB,aAAaN,EAClB,MACJ,KAAK,UACDzkB,KAAKglB,cAAcP,EACnB,MACJ,KAAK,SACDzkB,KAAKilB,aAAaR,EAClB,MACJ,SACI,KAAMrf,OAAM,eAAiB0e,EAAQ,MAGnD,MAAO/jB,GAEL,KADAA,GAAEif,QAAU,uBAAuBhf,KAAKokB,GAAGnB,KAAK,KAAOljB,EAAEif,QACnDjf,EAGV,aADO0kB,GAAe,KACfA,GASXN,EAAOI,MAAQ,SAAShW,GACpB,MAAO,IAAI4V,GAAO5V,GAAQgW,SAmE9BD,EAAgBjB,YAAc,WAC1B,GACIS,GACAoB,EAFAhjB,EAAQ,EAGZ,GAAG,CAEC,GAAc,OADdgjB,EAAQllB,KAAKokB,GAAGV,SACe,MAAVwB,EACjB,KAAM9f,OAAM,6BAA6B8f,EAC7ChjB,IAASlC,KAAKokB,GAAGV,OACjB1jB,KAAKokB,GAAG3T,KAAKyU,GACbpB,EAAQ9jB,KAAKokB,GAAGL,aACD,MAAVD,GAA2B,MAAVA,EAC1B,OAAO5hB,IASXoiB,EAAgBa,WAAa,SAASC,GAClC,GAAItB,GAAQ9jB,KAAKokB,GAAGL,MAEpB,IAAc,MAAVD,GAA2B,MAAVA,EACjB,MAAO9jB,MAAKqjB,aAEhB,IADArjB,KAAKokB,GAAGV,OACJxC,EAAKQ,OAAO7P,KAAKiS,GACjB,MAAOpB,GAASoB,EACpB,IAAI5C,EAAKa,KAAKlQ,KAAKiS,GACf,MAAgC,SAAxBA,EAAMuB,aAClB,IAAID,GAAgBlE,EAAKM,QAAQ3P,KAAKiS,GAClC,MAAOA,EACX,MAAM1e,OAAM,kBAAkB0e,IAYlCQ,EAAgBS,aAAe,SAASO,EAAQC,GAC5C,GAAIzB,GAAQ9jB,KAAKokB,GAAGV,OAChB8B,GAAS,CAKb,IAJc,MAAV1B,IACA0B,GAAS,EACT1B,EAAQ9jB,KAAKokB,GAAGV,SAEfxC,EAAKM,QAAQ3P,KAAKiS,GAGf,KAAM1e,OAAM,wBAAwB0e,EAC5C,IAAIllB,GAAOklB,CACP0B,KACAxlB,KAAKokB,GAAG3T,KAAK,KACb7R,EAAO,IAAIA,EAAK,IAChBklB,EAAQ9jB,KAAKokB,GAAGL,OACZ7C,EAAKO,UAAU5P,KAAKiS,KACpBllB,GAAQklB,EACR9jB,KAAKokB,GAAGV,SAGhB1jB,KAAKokB,GAAG3T,KAAK,KACbzQ,KAAKylB,kBAAkBH,EAAQ1mB,GAC1B2mB,GACDvlB,KAAKokB,GAAG3T,KAAK,MA0BrB6T,EAAgBmB,kBAAoB,SAASH,EAAQ1mB,GACjD,GAAIklB,GAAQ9jB,KAAKokB,GAAGL,MACpB,IAAc,MAAVD,EACAlB,EAAU0C,EAAgB,QAAG1mB,EAAMoB,KAAKmlB,YAAW,QAGnD,KADAnlB,KAAKokB,GAAG3T,KAAK,KACuB,OAA5BqT,EAAQ9jB,KAAKokB,GAAGV,SAAiB,CACrC,IAAKxC,EAAKI,KAAKzP,KAAKiS,GAChB,KAAM1e,OAAM,wBAA0BxG,EAAO,IAAMklB,EACnD9jB,MAAKokB,GAAGF,KAAK,KACbtB,EAAU0C,EAAgB,QAAG1mB,EAAO,IAAMklB,EAAO9jB,KAAKmlB,YAAW,IAEjEnlB,KAAKylB,kBAAkBH,EAAQ1mB,EAAO,IAAMklB,KAU5DQ,EAAgBU,cAAgB,SAASM,GACrC,GAAIxB,GAAQ9jB,KAAKokB,GAAGV,MACpB,KAAKxC,EAAKI,KAAKzP,KAAKiS,GAChB,KAAM1e,OAAM,gCAAgCpF,KAAKokB,GAAGnB,KAAK,KAAKa,EAClE,IAAIllB,GAAOklB,EACP4B,GACA9mB,KAAQA,EACR+mB,OACAlnB,WAGJ,KADAuB,KAAKokB,GAAG3T,KAAK,KACuB,OAA5BqT,EAAQ9jB,KAAKokB,GAAGV,SACpB,GAAc,WAAVI,EACA9jB,KAAK+kB,aAAaW,OACjB,CAAA,GAAc,QAAV5B,EAGL,KAAM1e,OAAM,0BAA0B0e,EAFtC9jB,MAAK4lB,iBAAiBF,GAI9B1lB,KAAKokB,GAAGF,KAAK,KACboB,EAAiB,SAAExkB,KAAK4kB,IAQ5BpB,EAAgBsB,iBAAmB,SAASF,GACxC,GACI5B,GAAQ9jB,KAAKokB,GAAGV,MACpB,KAAKxC,EAAKI,KAAKzP,KAAKiS,GAChB,KAAM1e,OAAM,oCAAoC0e,EACpD,IAAIllB,GAAOklB,EACP+B,GACAC,QAAW,KACXC,SAAY,KACZC,gBAAkB,EAClBC,iBAAmB,EACnBxnB,WAQJ,IANAuB,KAAKokB,GAAG3T,KAAK,KACbqT,EAAQ9jB,KAAKokB,GAAGV,OACY,WAAxBI,EAAMuB,gBACRQ,EAAuB,gBAAI,EAC3B/B,EAAQ9jB,KAAKokB,GAAGV,SAEbxC,EAAKM,QAAQ3P,KAAKiS,GACnB,KAAM1e,OAAM,qCAAqC0e,EAIrD,IAHA+B,EAAgB,QAAI/B,EACpB9jB,KAAKokB,GAAG3T,KAAK,KACbqT,EAAQ9jB,KAAKokB,GAAGV,OACY,YAAxBI,EAAMuB,cACN,KAAMjgB,OAAM,+CAA+C0e,EAU/D,IATA9jB,KAAKokB,GAAG3T,KAAK,KACbqT,EAAQ9jB,KAAKokB,GAAGV,OACY,WAAxBI,EAAMuB,gBACRQ,EAAwB,iBAAI,EAC5B/B,EAAQ9jB,KAAKokB,GAAGV,QAElBmC,EAAiB,SAAI/B,EACrB9jB,KAAKokB,GAAG3T,KAAK,KAEC,OADdqT,EAAQ9jB,KAAKokB,GAAGL,QACG,CAEf,IADA/jB,KAAKokB,GAAGV,OAC4B,OAA5BI,EAAQ9jB,KAAKokB,GAAGV,SAAiB,CACrC,GAAc,WAAVI,EAGA,KAAM1e,OAAM,8BAAgC0e,EAF5C9jB,MAAK+kB,aAAac,GAI1B7lB,KAAKokB,GAAGF,KAAK,SAEblkB,MAAKokB,GAAG3T,KAAK,SACQ,KAAdiV,EAAQ,MACfA,EAAQ,QACZA,EAAQ,IAAE9mB,GAAQinB,GAUtBvB,EAAgBO,cAAgB,SAASS,EAAQY,GAC7C,GAAIC,KAAYD,EACZpC,EAAQ9jB,KAAKokB,GAAGV,OAChB0C,GACAxnB,KAAQ,GACRC,UACAM,SACAR,YACAF,WACAkmB,YACA0B,UAGJ,KAAKnF,EAAKI,KAAKzP,KAAKiS,GAChB,KAAM1e,OAAM,YAAY+gB,EAAU,QAAU,WAAW,UAAUrC,EAWrE,KAVAsC,EAAU,KAAItC,EACVqC,IACAnmB,KAAKokB,GAAG3T,KAAK,KACbyV,EAAQ,GAAI3D,EAAKviB,KAAKokB,GAAGV,QACzB0C,EAAa,SAAI,GAErBtC,EAAQ9jB,KAAKokB,GAAGL,OACF,MAAVD,GAAiBoC,GACjBlmB,KAAKsmB,mBAAmBJ,GAC5BlmB,KAAKokB,GAAG3T,KAAK,KACuB,OAA5BqT,EAAQ9jB,KAAKokB,GAAGV,SACpB,GAAIxC,EAAKE,KAAKvP,KAAKiS,GACf9jB,KAAKumB,mBAAmBH,EAAKtC,OAC5B,IAAc,UAAVA,EACL9jB,KAAKwmB,mBAAmBJ,OACvB,IAAc,SAAVtC,EACL9jB,KAAK8kB,WAAWsB,OACf,IAAc,YAAVtC,EACL9jB,KAAK6kB,cAAcuB,OAClB,IAAc,WAAVtC,EACL9jB,KAAK+kB,aAAaqB,OACjB,IAAc,YAAVtC,EACL9jB,KAAKglB,cAAcoB,OAClB,IAAc,eAAVtC,EACDsC,EAAIK,eAAe,cACnBL,EAAgB,WAAIA,EAAgB,WAAEhiB,OAAOpE,KAAK0mB,yBAElDN,EAAgB,WAAIpmB,KAAK0mB,4BAE5B,IAAc,aAAV5C,EACL9jB,KAAK2mB,oBACJ,IAAc,WAAV7C,EACL9jB,KAAKilB,aAAamB,OACjB,CAAA,IAAIlF,EAAKM,QAAQ3P,KAAKiS,GAKvB,KAAM1e,OAAM,0BAA0B0e,EAJtC,KAAK9jB,KAAKqkB,OACN,KAAMjf,OAAM,uBAAuB0e,EACvC9jB,MAAKumB,mBAAmBH,EAAK,WAAYtC,GAMjD,MAFA9jB,MAAKokB,GAAGF,KAAK,KACboB,EAAiB,SAAExkB,KAAKslB,GACjBA,GAOX9B,EAAgBqC,cAAgB,WAC5B,KAA0B,MAAnB3mB,KAAKokB,GAAGL,QACX/jB,KAAKokB,GAAGV,MACZ1jB,MAAKokB,GAAG3T,KAAK,MAWjB6T,EAAgBiC,mBAAqB,SAASH,EAAKtnB,EAAMC,GACrD,IAAKmiB,EAAKE,KAAKvP,KAAK/S,GAChB,KAAMsG,OAAM,+BAA+BtG,EAC/C,IAOIglB,GAPAoC,GACApnB,KAAQA,EACRC,KAAQ,GACRH,KAAQ,GACRH,WACAO,GAAM,EAGV,IAAa,QAATF,EAAgB,CAEhB,GAAIC,EACA,KAAMqG,OAAM,iBAAmBrG,EAGnC,IAFAiB,KAAKokB,GAAG3T,KAAK,KACbqT,EAAQ9jB,KAAKokB,GAAGV,QACXxC,EAAKG,KAAKxP,KAAKiS,KAAW5C,EAAKM,QAAQ3P,KAAKiS,GAC7C,KAAM1e,OAAM,+BAAiC0e,EAIjD,IAHAoC,EAAa,QAAIpC,EACjB9jB,KAAKokB,GAAG3T,KAAK,KACbqT,EAAQ9jB,KAAKokB,GAAGV,QACXxC,EAAKG,KAAKxP,KAAKiS,KAAW5C,EAAKM,QAAQ3P,KAAKiS,GAC7C,KAAM1e,OAAM,0BAA4B0e,EAI5C,IAHAoC,EAAU,KAAIpC,EACd9jB,KAAKokB,GAAG3T,KAAK,KACbqT,EAAQ9jB,KAAKokB,GAAGV,QACXxC,EAAKI,KAAKzP,KAAKiS,GAChB,KAAM1e,OAAM,+BAAiC0e,EACjDoC,GAAU,KAAIpC,EACd9jB,KAAKokB,GAAG3T,KAAK,KACbyV,EAAQ,GAAI3D,EAAKviB,KAAKokB,GAAGV,QACzBI,EAAQ9jB,KAAKokB,GAAGL,OACF,MAAVD,GACA9jB,KAAKsmB,mBAAmBJ,GAC5BlmB,KAAKokB,GAAG3T,KAAK,SAMb,IAAa,WAFb1R,MAAuB,KAATA,EAAuBA,EAAOiB,KAAKokB,GAAGV,QAE9B,CAKlB,GAAIkD,GAAM5mB,KAAK6kB,cAAcuB,EAAKF,EAClC,KAAK,SAASrU,KAAK+U,EAAU,MACzB,KAAMxhB,OAAM,uBAAuBwhB,EAAU,KACjDV,GAAU,KAAIU,EAAU,KACxBV,EAAU,KAAIU,EAAU,KAAEvB,cAC1BrlB,KAAKokB,GAAGF,KAAK,SAEV,CAEH,IAAKhD,EAAKG,KAAKxP,KAAK9S,KAAUmiB,EAAKM,QAAQ3P,KAAK9S,GAC5C,KAAMqG,OAAM,+BAAiCrG,EAGjD,IAFAmnB,EAAU,KAAInnB,EACd+kB,EAAQ9jB,KAAKokB,GAAGV,QACXxC,EAAKI,KAAKzP,KAAKiS,GAChB,KAAM1e,OAAM,+BAAiC0e,EACjDoC,GAAU,KAAIpC,EACd9jB,KAAKokB,GAAG3T,KAAK,KACbyV,EAAQ,GAAI3D,EAAKviB,KAAKokB,GAAGV,QACzBI,EAAQ9jB,KAAKokB,GAAGL,OACF,MAAVD,GACA9jB,KAAKsmB,mBAAmBJ,GAC5BlmB,KAAKokB,GAAG3T,KAAK,KAKrB,MADA2V,GAAY,OAAEtlB,KAAKolB,GACZA,GAQX5B,EAAgBkC,mBAAqB,SAASJ,GAC1C,GAAItC,GAAQ9jB,KAAKokB,GAAGV,MACpB,KAAKxC,EAAKI,KAAKzP,KAAKiS,GAChB,KAAM1e,OAAM,uBAAuB0e,EACvC,IACIoC,GADAtnB,EAAOklB,EAEPjlB,IAEJ,KADAmB,KAAKokB,GAAG3T,KAAK,KACuB,OAA5BqT,EAAQ9jB,KAAKokB,GAAGV,SACpBwC,EAAMlmB,KAAKumB,mBAAmBH,EAAK,WAAYtC,GAC/CoC,EAAW,MAAItnB,EACfC,EAAOiC,KAAKolB,EAAQ,GAExBlmB,MAAKokB,GAAGF,KAAK,KACbkC,EAAY,OAAExnB,GAAQC,GAQ1BylB,EAAgBgC,mBAAqB,SAASJ,GAC1ClmB,KAAKokB,GAAG3T,KAAK,IAGb,KAFA,GACIoW,IAAQ,EACwB,MAApB7mB,KAAKokB,GAAGL,QACf8C,GACD7mB,KAAKokB,GAAG3T,KAAK,KACjBzQ,KAAK+kB,aAAamB,GAAK,GACvBW,GAAQ,CAEZ7mB,MAAKokB,GAAGV,QAQZY,EAAgBQ,WAAa,SAASsB,GAClC,GAAIU,IACAloB,KAAQ,GACRQ,UACAX,YAEAqlB,EAAQ9jB,KAAKokB,GAAGV,MACpB,KAAKxC,EAAKI,KAAKzP,KAAKiS,GAChB,KAAM1e,OAAM,iBAAiB0e,EAGjC,KAFAgD,EAAU,KAAIhD,EACd9jB,KAAKokB,GAAG3T,KAAK,KACuB,OAA5BqT,EAAQ9jB,KAAKokB,GAAGV,SACpB,GAAc,WAAVI,EACA9jB,KAAK+kB,aAAa+B,OACjB,CACD,IAAK5F,EAAKI,KAAKzP,KAAKiS,GAChB,KAAM1e,OAAM,iBAAiB0e,EACjC9jB,MAAKokB,GAAG3T,KAAK,IACb,IAAI5F,IACAjM,KAAQklB,EACR9kB,GAAMujB,EAAKviB,KAAKokB,GAAGV,QAAQ,GAE/BI,GAAQ9jB,KAAKokB,GAAGL,OACF,MAAVD,GACA9jB,KAAKsmB,oBAAqB7nB,aAC9BuB,KAAKokB,GAAG3T,KAAK,KACbqW,EAAY,OAAEhmB,KAAK+J,GAG3B7K,KAAKokB,GAAGF,KAAK,KACbkC,EAAW,MAAEtlB,KAAKgmB,IAQtBxC,EAAgBoC,sBAAwB,WACpC,GACI5C,GACAiD,EACA7kB,EAHA8kB,IAIJ,GAAG,CAEC,IADAD,OACa,CAET,OADAjD,EAAQ9jB,KAAKokB,GAAGV,QAEZ,IAAK,MACDxhB,EAAQob,EAAS6B,MACjB,MACJ,KAAK,MACDjd,EAAQob,EAAS8B,MACjB,MACJ,SACIld,EAAQwgB,EAASoB,GAIzB,GADAiD,EAAMjmB,KAAKoB,GACU,IAAjB6kB,EAAM3mB,OACN,KACJ,IAAuB,OAAnBJ,KAAKokB,GAAGL,OAAiB,CACzBgD,EAAMjmB,KAAKoB,EACX,OAEJlC,KAAKokB,GAAGV,OAEZsD,EAAOlmB,KAAKimB,SACP/mB,KAAKokB,GAAGF,KAAK,KAEtB,OADAlkB,MAAKokB,GAAG3T,KAAK,KACNuW,GAQX1C,EAAgBW,aAAe,SAASK,GACpC,GAAIxB,GAAQ9jB,KAAKokB,GAAGV,MACpB,KAAKxC,EAAKM,QAAQ3P,KAAKiS,GACnB,KAAM1e,OAAM,6BAA6B0e,EAC7C,IAAImD,IACAC,IAAOpD,EACPjlB,UAGJ,KADAmB,KAAKokB,GAAG3T,KAAK,KACuB,OAA5BqT,EAAQ9jB,KAAKokB,GAAGV,SACpB,GAAIxC,EAAKE,KAAKvP,KAAKiS,GACf9jB,KAAKumB,mBAAmBU,EAAKnD,OAC5B,CAAA,IAAI5C,EAAKM,QAAQ3P,KAAKiS,GAKvB,KAAM1e,OAAM,yBAAyB0e,EAJrC,KAAK9jB,KAAKqkB,OACN,KAAMjf,OAAM,uBAAuB0e,EACvC9jB,MAAKumB,mBAAmBU,EAAK,WAAYnD,GAMjD,MAFA9jB,MAAKokB,GAAGF,KAAK,KACboB,EAAiB,SAAExkB,KAAKmmB,GACjBA,GASX3C,EAAgB5e,SAAW,WACvB,MAAO,kBAAkB1F,KAAKokB,GAAGnB,MAOrCX,EAAS6B,OAASA,EAEX7B,GAERhF,EAAUA,EAAS4D,MAMtB5D,EAAS6J,QAAU,SAAU7J,GAqXzB,QAAS8J,GAAUroB,GAGf,GAFoB,gBAATA,KACPA,EAAOue,EAASS,MAAMhf,QACO,KAAtBA,EAAKmf,aACZ,KAAM9Y,OAAM,0BAA0BrG,EAAKH,KAAK,oBACpD,OAAIG,IAAQue,EAASS,MAAa,MACvB,GAAIrb,GAAW,GACnB3D,EAAKmf,aAoBhB,QAASmJ,GAAOnlB,EAAOoJ,GACnB,GAAIpJ,GAA8B,gBAAdA,GAAM2G,KAA0C,gBAAf3G,GAAM6G,MAA+C,iBAAnB7G,GAAMoJ,UACtFpJ,EAAM2G,MAAQ3G,EAAM2G,KAAO3G,EAAM6G,OAAS7G,EAAM6G,KACnD,MAAO,IAAIuU,GAASxd,KAAKoC,EAAM2G,IAAK3G,EAAM6G,SAA0B,KAAbuC,EAA2BpJ,EAAMoJ,SAAWA,EACvG,IAAqB,gBAAVpJ,GACP,MAAOob,GAASxd,KAAK4I,WAAWxG,EAAOoJ,IAAY,EAAO,GAC9D,IAAqB,gBAAVpJ,GACP,MAAOob,GAASxd,KAAK2I,WAAWvG,EAAOoJ,IAAY,EACvD,MAAMlG,OAAM,2BAi2ChB,QAASkiB,GAAiBC,EAAYC,GAClC,GAAIC,GAAMD,EAAInhB,eACV4X,EAAiB,EAANwJ,EACXzoB,EAAKyoB,IAAQ,CACjB,QAAQxJ,GACJ,IAAKX,GAASC,WAAWC,OACrB,GAAGiK,EAAMD,EAAItgB,kBACW,MAAV,IAANugB,GACR,MACJ,KAAKnK,GAASC,WAAWE,OACrB+J,EAAIrmB,QAAU,CACd,MACJ,KAAKmc,GAASC,WAAWG,OACrB+J,EAAMD,EAAInhB,eACVmhB,EAAIrmB,QAAUsmB,CACd,MACJ,KAAKnK,GAASC,WAAWI,WACrB2J,EAAiBtoB,EAAIwoB,EACrB,MACJ,KAAKlK,GAASC,WAAWK,SACrB,GAAI5e,IAAOuoB,EACP,OAAO,CAEP,MAAMniB,OAAM,yCAAyCpG,EAAG,KAAKuoB,EAAW,aAChF,KAAKjK,GAASC,WAAWM,OACrB2J,EAAIrmB,QAAU,CACd,MACJ,SACI,KAAMiE,OAAM,sCAAsCmiB,EAAW,KAAKtJ,GAE1E,OAAO,EA/wDX,GAAIkJ,MAWAO,EAAI,SAASC,EAASrC,EAAQ1mB,GAO9BoB,KAAK2nB,QAAUA,EAOf3nB,KAAKslB,OAASA,EAOdtlB,KAAKpB,KAAOA,EAOZoB,KAAK4nB,WAOLC,EAAaH,EAAE1mB,SAOnB6mB,GAAWC,IAAM,WAGb,IAFA,GAAIlpB,GAAOoB,KAAKpB,KACZmpB,EAAM/nB,OACP,CAEC,GAAW,OADX+nB,EAAMA,EAAIzC,QAEN,KACJ1mB,GAAOmpB,EAAInpB,KAAK,IAAIA,EAExB,MAAOA,IASXipB,EAAWniB,SAAW,SAASsiB,GAC3B,OAAQA,EAAehoB,KAAK4nB,UAAY,IAAM,IAAM5nB,KAAK8nB,OAQ7DD,EAAWvoB,MAAQ,WACf,KAAM8F,OAAMpF,KAAK0F,UAAS,GAAM,8BAOpCyhB,EAAQO,EAAIA,CAaZ,IAAIO,GAAY,SAASN,EAASrC,EAAQ1mB,EAAMH,EAASD,GACrDkpB,EAAEniB,KAAKvF,KAAM2nB,EAASrC,EAAQ1mB,GAK9BoB,KAAK4nB,UAAY,YAMjB5nB,KAAKkoB,YAMLloB,KAAKvB,QAAUA,MAMfuB,KAAKxB,OAASA,GAAU,UAOxB2pB,EAAqBF,EAAUjnB,UAAY6C,OAAOukB,OAAOV,EAAE1mB,UAQ/DmnB,GAAmBE,YAAc,SAAStpB,GAEtC,GAAY,OADZA,EAAOA,GAAQ,MAEX,MAAOiB,MAAKkoB,SAAS1hB,OAEzB,KAAK,GADD0hB,MACK/nB,EAAE,EAAGqE,EAAExE,KAAKkoB,SAAS9nB,OAAQD,EAAEqE,IAAKrE,EACrCH,KAAKkoB,SAAS/nB,YAAcpB,IAC5BmpB,EAASpnB,KAAKd,KAAKkoB,SAAS/nB,GACpC,OAAO+nB,IASXC,EAAmBG,SAAW,SAASC,GACnC,GAAIrR,EACJ,IAAIA,EAAQlX,KAAKwoB,SAASD,EAAM3pB,MAE5B,GAAIsY,YAAiBuR,GAAQC,OAASxR,EAAMtY,OAASsY,EAAMyR,cAAsD,OAAtC3oB,KAAKwoB,SAAStR,EAAMyR,cAC3FzR,EAAMtY,KAAOsY,EAAMyR,iBAClB,CAAA,KAAIJ,YAAiBE,GAAQC,OAASH,EAAM3pB,OAAS2pB,EAAMI,cAAsD,OAAtC3oB,KAAKwoB,SAASD,EAAMI,eAGhG,KAAMvjB,OAAM,+BAA+BpF,KAAK0F,UAAS,GAAM,KAAK6iB,EAAM3pB,KAF1E2pB,GAAM3pB,KAAO2pB,EAAMI,aAI3B3oB,KAAKkoB,SAASpnB,KAAKynB,IASvBJ,EAAmBK,SAAW,SAASI,GAEnC,IAAK,GADDC,GAA0B,gBAAbD,GAAwB,KAAO,OACvCzoB,EAAE,EAAGqE,EAAExE,KAAKkoB,SAAS9nB,OAAQD,EAAEqE,IAAKrE,EACzC,GAAIH,KAAKkoB,SAAS/nB,GAAG0oB,KAASD,EAC1B,MAAO5oB,MAAKkoB,SAAS/nB,EAC7B,OAAO,OAUXgoB,EAAmBW,QAAU,SAASC,EAAIC,GACtC,GAAIC,GAAqB,gBAAPF,GAAkBA,EAAGG,MAAM,KAAOH,EAChDhB,EAAM/nB,KACNG,EAAI,CACR,IAAgB,KAAZ8oB,EAAK9oB,GAAW,CAChB,KAAsB,OAAf4nB,EAAIzC,QACPyC,EAAMA,EAAIzC,MACdnlB,KAEJ,GAAIooB,EACJ,GAAG,CACC,EAAG,CACC,KAAMR,YAAeZ,GAAQc,WAAY,CACrCF,EAAM,IACN,OAGJ,KADAQ,EAAQR,EAAIS,SAASS,EAAK9oB,QACVooB,YAAiBpB,GAAQO,IAAOsB,KAAyBT,YAAiBpB,GAAQc,WAAa,CAC3GF,EAAM,IACN,OAEJA,EAAMQ,EAAOpoB,UACRA,EAAI8oB,EAAK7oB,OAClB,IAAW,MAAP2nB,EACA,KAEJ,IAAoB,OAAhB/nB,KAAKslB,OACL,MAAOtlB,MAAKslB,OAAOwD,QAAQC,EAAIC,SACvB,MAAPjB,EACT,OAAOA,IASXI,EAAmBY,GAAK,SAASvX,GAC7B,GAAIyX,MAAWlB,EAAMvW,CACrB,IACIyX,EAAKE,QAAQpB,EAAInpB,MACjBmpB,EAAMA,EAAIzC,aACG,OAARyC,EACT,KAAK,GAAI3a,GAAI,EAAGA,GAAO6b,EAAK7oB,OAAQgN,IAAO,CACvC,GAAI2b,GAAKE,EAAKziB,MAAMyiB,EAAK7oB,OAAOgN,EAChC,IAAIoE,IAAMxR,KAAK8oB,QAAQC,EAAIvX,YAAa2V,GAAQc,WAC5C,MAAOc,GAAGroB,KAAK,KAEvB,MAAO8Q,GAAEsW,OAQbK,EAAmB7oB,MAAQ,WAIvB,IAAK,GAA4BipB,GAF7Ba,KACAlB,EAAWloB,KAAKkoB,SACX/nB,EAAE,EAAGqE,EAAE0jB,EAAS9nB,OAAeD,EAAEqE,IAAKrE,GAC3CooB,EAAQL,EAAS/nB,aACI8nB,KACjBmB,EAAGb,EAAM3pB,MAAQ2pB,EAAMjpB,QAI/B,OAFIuE,QAAOC,gBACPD,OAAOC,eAAeslB,EAAI,YAAclnB,MAASlC,KAAKqpB,aACnDD,GAOXjB,EAAmBkB,SAAW,WAG1B,IAAK,GAFDC,MACAC,EAAO1lB,OAAO0lB,KAAKvpB,KAAKvB,SACnB0B,EAAE,EAAGqE,EAAE+kB,EAAKnpB,OAAQD,EAAEqE,IAAKrE,EAAG,CACnC,GAAI0oB,GAAMU,EAAKppB,GACX0K,EAAM7K,KAAKvB,QAAQ8qB,EAAKppB,GAK5BmpB,GAAIT,GAAOhe,EAGf,MAAOye,IAQXnB,EAAmBqB,UAAY,SAAS5qB,GACpC,WAAoB,KAATA,EACAoB,KAAKvB,YACqB,KAAvBuB,KAAKvB,QAAQG,GAAwBoB,KAAKvB,QAAQG,GAAQ,MAO5EuoB,EAAQc,UAAYA,CAuBpB,IAAIwB,GAAU,SAAS1qB,EAAM2qB,EAAcC,EAAUnrB,EAAQI,GAgCzD,GA1BAoB,KAAKjB,KAAOA,EAMZiB,KAAK0pB,aAAeA,EAMpB1pB,KAAK2pB,SAAWA,EAMhB3pB,KAAKxB,OAASA,EAMdwB,KAAKpB,KAAOA,EAER+qB,GAAYrM,EAAS4B,cAAc7L,QAAQtU,GAAQ,EACnD,KAAMqG,OAAM,yBAA2BrG,EAAKH,OAGhDgrB,EAAmBH,EAAQzoB,SAwB/ByoB,GAAQI,kBAAoBzC,EAsB5BwC,EAAiBlkB,SAAW,WACxB,OAAQ1F,KAAKpB,MAAQ,KAAOoB,KAAK2pB,SAAW,MAAQ,SAAW,YAWnEC,EAAiBE,YAAc,SAAS5nB,GAEpC,QAASwP,GAAK7G,EAAKub,GACf,KAAMhhB,OAAM,qBAAqB2kB,EAAKrkB,UAAS,GAAM,YAAYqkB,EAAKhrB,KAAKH,KAAK,KAAKiM,EAAI,KAAKub,EAAI,KAFtG,GAAI2D,GAAO/pB,IAIX,QAAQA,KAAKjB,MAET,IAAKue,GAASS,MAAa,MAC3B,IAAKT,GAASS,MAAc,OAC5B,IAAKT,GAASS,MAAgB,SAI1B,OAFqB,gBAAV7b,IAAuBA,IAAUA,GAASA,EAAQ,GAAM,IAC/DwP,QAAYxP,GAAO,kBAChBA,EAAQ,WAAqB,EAARA,EAAYA,CAG5C,KAAKob,GAASS,MAAc,OAC5B,IAAKT,GAASS,MAAe,QAGzB,OAFqB,gBAAV7b,IAAuBA,IAAUA,GAASA,EAAQ,GAAM,IAC/DwP,QAAYxP,GAAO,kBAChBA,EAAQ,EAAIA,IAAU,EAAIA,CAGrC,KAAKob,GAASS,MAAa,MAC3B,IAAKT,GAASS,MAAc,OAC5B,IAAKT,GAASS,MAAgB,SAC1B,GAAIT,EAASxd,KACT,IACI,MAAOunB,GAAOnlB,GAAO,GACvB,MAAOnC,GACL2R,QAAYxP,GAAOnC,EAAEif,aAGzBtN,SAAYxP,GAAO,mBAI3B,KAAKob,GAASS,MAAc,OAC5B,IAAKT,GAASS,MAAe,QACzB,GAAIT,EAASxd,KACT,IACI,MAAOunB,GAAOnlB,GAAO,GACvB,MAAOnC,GACL2R,QAAYxP,GAAOnC,EAAEif,aAGzBtN,SAAYxP,GAAO,mBAI3B,KAAKob,GAASS,MAAY,KAGtB,MAFqB,iBAAV7b,IACPwP,QAAYxP,GAAO,iBAChBA,CAGX,KAAKob,GAASS,MAAa,MAC3B,IAAKT,GAASS,MAAc,OAGxB,MAFqB,gBAAV7b,IACPwP,QAAYxP,GAAO,gBAChBA,CAGX,KAAKob,GAASS,MAAc,OAGxB,MAFqB,gBAAV7b,IAAwBA,GAASA,YAAiBrB,SACzD6Q,QAAYxP,GAAO,gBAChB,GAAGA,CAGd,KAAKob,GAASS,MAAa,MACvB,MAAIrb,GAAW+B,aAAavC,GACjBA,EACJQ,EAAWgC,KAAKxC,EAAO,SAGlC,KAAKob,GAASS,MAAY,KACtB,GAAI3e,GAASY,KAAK0pB,aAAarB,YAAY/K,EAAS6J,QAAQ6C,KAAKC,MACjE,KAAK9pB,EAAE,EAAGA,EAAEf,EAAOgB,OAAQD,IACvB,CAAA,GAAIf,EAAOe,GAAGvB,MAAQsD,EAClB,MAAO9C,GAAOe,GAAGnB,EAChB,IAAII,EAAOe,GAAGnB,IAAMkD,EACrB,MAAO9C,GAAOe,GAAGnB,GAEzB,GAAoB,WAAhBgB,KAAKxB,OAML,OAJqB,gBAAV0D,IAAuBA,IAAUA,GAASA,EAAQ,GAAM,IAC/DwP,QAAYxP,GAAO,mBACnBA,EAAQ,YAAcA,EAAQ,IAC9BwP,QAAYxP,GAAO,2BAChBA,CAGPwP,GAAKxP,EAAO,yBAIpB,KAAKob,GAASS,MAAa,MAC3B,IAAKT,GAASS,MAAe,QAGzB,GAFK7b,GAA0B,gBAAVA,IACjBwP,QAAYxP,GAAO,mBACnBA,YAAiBlC,MAAK0pB,aAAaQ,MACnC,MAAOhoB,EACX,IAAIA,YAAiBob,GAAS6M,QAAQ1B,QAAS,CAE3C,GAAI7U,KACJ,KAAK,GAAIzT,KAAK+B,GACNA,EAAMukB,eAAetmB,KACrByT,EAAIzT,GAAK+B,EAAM/B,GACvB+B,GAAQ0R,EAGZ,MAAO,IAAK5T,MAAK0pB,aAAkB,MAAExnB,GAK7C,KAAMkD,OAAM,gCAAgCpF,KAAK0F,UAAS,GAAM,KAAKxD,EAAM,oBAAoBlC,KAAKjB,KAAK,MAW7G6qB,EAAiBQ,gBAAkB,SAASprB,EAAIkD,GAC5C,GAAc,OAAVA,EAAgB,MAAO,EAE3B,IAAImI,EACJ,QAAQrK,KAAKjB,MACT,IAAKue,GAASS,MAAa,MACvB,MAAO7b,GAAQ,EAAIQ,EAAWqI,kBAAkB7I,GAASQ,EAAWyH,kBAAkBjI,EAC1F,KAAKob,GAASS,MAAc,OACxB,MAAOrb,GAAWyH,kBAAkBjI,EACxC,KAAKob,GAASS,MAAc,OACxB,MAAOrb,GAAWyH,kBAAkBzH,EAAW0H,eAAelI,GAClE,KAAKob,GAASS,MAAe,QAC7B,IAAKT,GAASS,MAAgB,SAC9B,IAAKT,GAASS,MAAa,MACvB,MAAO,EACX,KAAKT,GAASS,MAAa,MAC3B,IAAKT,GAASS,MAAc,OACxB,MAAOrb,GAAWqI,kBAAkB7I,EACxC,KAAKob,GAASS,MAAc,OACxB,MAAOrb,GAAWqI,kBAAkBrI,EAAW2I,eAAenJ,GAClE,KAAKob,GAASS,MAAe,QAC7B,IAAKT,GAASS,MAAgB,SAC1B,MAAO,EACX,KAAKT,GAASS,MAAY,KACtB,MAAO,EACX,KAAKT,GAASS,MAAY,KACtB,MAAOrb,GAAWyH,kBAAkBjI,EACxC,KAAKob,GAASS,MAAc,OACxB,MAAO,EACX,KAAKT,GAASS,MAAc,OAExB,MADA1T,GAAI3H,EAAWkL,mBAAmB1L,GAC3BQ,EAAWyH,kBAAkBE,GAAKA,CAC7C,KAAKiT,GAASS,MAAa,MACvB,GAAI7b,EAAMoO,YAAc,EACpB,KAAMlL,OAAM,qBAAqBpF,KAAK0F,UAAS,GAAM,KAAKxD,EAAMoO,YAAY,mBAChF,OAAO5N,GAAWyH,kBAAkBjI,EAAMoO,aAAepO,EAAMoO,WACnE,KAAKgN,GAASS,MAAe,QAEzB,MADA1T,GAAIrK,KAAK0pB,aAAaW,UAAUnoB,GACzBQ,EAAWyH,kBAAkBE,GAAKA,CAC7C,KAAKiT,GAASS,MAAa,MAEvB,OADA1T,EAAIrK,KAAK0pB,aAAaW,UAAUnoB,IACrBQ,EAAWyH,kBAAmBnL,GAAM,EAAKse,EAASC,WAAWK,UAGhF,KAAMxY,OAAM,yCAAyCpF,KAAK0F,UAAS,GAAM,KAAKxD,EAAM,oBAYxF0nB,EAAiBU,YAAc,SAAStrB,EAAIkD,EAAOhB,GAC/C,GAAc,OAAVgB,EAAgB,MAAOhB,EAG3B,QAAQlB,KAAKjB,MAET,IAAKue,GAASS,MAAa,MAGnB7b,EAAQ,EACRhB,EAAO8K,cAAc9J,GAErBhB,EAAO+E,cAAc/D,EACzB,MAGJ,KAAKob,GAASS,MAAc,OACxB7c,EAAO+E,cAAc/D,EACrB,MAGJ,KAAKob,GAASS,MAAc,OACxB7c,EAAOwJ,oBAAoBxI,EAC3B,MAGJ,KAAKob,GAASS,MAAe,QACzB7c,EAAOiH,YAAYjG,EACnB,MAGJ,KAAKob,GAASS,MAAgB,SAC1B7c,EAAO4G,WAAW5F,EAClB,MAGJ,KAAKob,GAASS,MAAa,MAC3B,IAAKT,GAASS,MAAc,OACxB7c,EAAO8K,cAAc9J,EACrB,MAGJ,KAAKob,GAASS,MAAc,OACxB7c,EAAOgL,oBAAoBhK,EAC3B,MAGJ,KAAKob,GAASS,MAAe,QACzB7c,EAAOiI,YAAYjH,EACnB,MAGJ,KAAKob,GAASS,MAAgB,SAC1B7c,EAAOsH,WAAWtG,EAClB,MAGJ,KAAKob,GAASS,MAAY,KACD,gBAAV7b,GACPhB,EAAO+E,cAAsC,UAAxB/D,EAAMmjB,cAA4B,IAAMnjB,GAE7DhB,EAAO+E,cAAc/D,EAAQ,EAAI,EACrC,MAGJ,KAAKob,GAASS,MAAY,KACtB7c,EAAO+E,cAAc/D,EACrB,MAGJ,KAAKob,GAASS,MAAa,MACvB7c,EAAOsI,aAAatH,EACpB,MAGJ,KAAKob,GAASS,MAAc,OACxB7c,EAAO2I,aAAa3H,EACpB,MAGJ,KAAKob,GAASS,MAAc,OACxB7c,EAAOiN,aAAajM,EACpB,MAGJ,KAAKob,GAASS,MAAa,MACvB,GAAI7b,EAAMoO,YAAc,EACpB,KAAMlL,OAAM,qBAAqBpF,KAAK0F,UAAS,GAAM,KAAKxD,EAAMoO,YAAY,mBAChF,IAAIia,GAAaroB,EAAMf,MACvBD,GAAO+E,cAAc/D,EAAMoO,aAC3BpP,EAAOwF,OAAOxE,GACdA,EAAMf,OAASopB,CACf,MAGJ,KAAKjN,GAASS,MAAe,QACzB,GAAInZ,IAAK,GAAIlC,IAAakN,IAC1B5P,MAAK0pB,aAAarY,OAAOnP,EAAO0C,GAChC1D,EAAO+E,cAAcrB,EAAGzD,QACxBD,EAAOwF,OAAO9B,EAAG6K,OACjB,MAGJ,KAAK6N,GAASS,MAAa,MACvB/d,KAAK0pB,aAAarY,OAAOnP,EAAOhB,GAChCA,EAAO+E,cAAejH,GAAM,EAAKse,EAASC,WAAWK,SACrD,MAEJ,SAEI,KAAMxY,OAAM,yCAAyCpF,KAAK0F,UAAS,GAAM,KAAKxD,EAAM,mBAE5F,MAAOhB,IAYX0oB,EAAiBnY,OAAS,SAASvQ,EAAQ+c,EAAUjf,GACjD,GAAIif,GAAYje,KAAKjB,KAAKkf,SACtB,KAAM7Y,OAAM,mCAEhB,IAAIlD,GAAOZ,CACX,QAAQtB,KAAKjB,MAET,IAAKue,GAASS,MAAa,MACvB,MAA+B,GAAxB7c,EAAOmF,cAGlB,KAAKiX,GAASS,MAAc,OACxB,MAAO7c,GAAOmF,iBAAmB,CAGrC,KAAKiX,GAASS,MAAc,OACxB,MAAqC,GAA9B7c,EAAO0J,oBAGlB,KAAK0S,GAASS,MAAe,QACzB,MAAO7c,GAAOoH,eAAiB,CAEnC,KAAKgV,GAASS,MAAgB,SAC1B,MAA4B,GAArB7c,EAAO+G,WAGlB,KAAKqV,GAASS,MAAa,MACvB,MAAO7c,GAAOiL,cAGlB,KAAKmR,GAASS,MAAc,OACxB,MAAO7c,GAAOiL,eAAeR,YAGjC,KAAK2R,GAASS,MAAc,OACxB,MAAO7c,GAAOmL,oBAGlB,KAAKiR,GAASS,MAAe,QACzB,MAAO7c,GAAOoI,YAGlB,KAAKgU,GAASS,MAAgB,SAC1B,MAAO7c,GAAO+H,WAGlB,KAAKqU,GAASS,MAAY,KACtB,QAAS7c,EAAOmF,cAGpB,KAAKiX,GAASS,MAAY,KAEtB,MAAO7c,GAAOmF,cAGlB,KAAKiX,GAASS,MAAa,MACvB,MAAO7c,GAAO0I,WAGlB,KAAK0T,GAASS,MAAc,OACxB,MAAO7c,GAAO+I,YAGlB,KAAKqT,GAASS,MAAc,OACxB,MAAO7c,GAAOoN,aAGlB,KAAKgP,GAASS,MAAa,MAEvB,GADAzc,EAASJ,EAAOmF,eACZnF,EAAOoP,YAAchP,EACrB,KAAM8D,OAAM,+BAA+BpF,KAAK0F,UAAS,GAAM,KAAKpE,EAAO,0BAA0BJ,EAAOoP,YAIhH,OAHApO,GAAQhB,EAAOoE,QACfpD,EAAMqB,MAAQrB,EAAMf,OAAOG,EAC3BJ,EAAOC,QAAUG,EACVY,CAIX,KAAKob,GAASS,MAAe,QAEzB,MADAzc,GAASJ,EAAOmF,eACTrG,KAAK0pB,aAAajY,OAAOvQ,EAAQI,EAI5C,KAAKgc,GAASS,MAAa,MACvB,MAAO/d,MAAK0pB,aAAajY,OAAOvQ,GAAS,EAAGlC,GAIpD,KAAMoG,OAAM,mCAWhBwkB,EAAiBY,gBAAkB,SAASje,GACxC,IAAKvM,KAAK2pB,SACN,KAAMvkB,OAAM,kDAGhB,QAAQpF,KAAKjB,MACT,IAAKue,GAASS,MAAa,MAC3B,IAAKT,GAASS,MAAc,OAC5B,IAAKT,GAASS,MAAgB,SAC9B,IAAKT,GAASS,MAAc,OAC5B,IAAKT,GAASS,MAAe,QACzB,MAAO/d,MAAK8pB,YAAY/W,SAASxG,GAErC,KAAK+Q,GAASS,MAAa,MAC3B,IAAKT,GAASS,MAAc,OAC5B,IAAKT,GAASS,MAAgB,SAC9B,IAAKT,GAASS,MAAc,OAC5B,IAAKT,GAASS,MAAe,QAEvB,MAAO/d,MAAK8pB,YAAYvd,EAE9B,KAAK+Q,GAASS,MAAY,KACpB,MAAe,SAARxR,CAEb,KAAK+Q,GAASS,MAAc,OACtB,MAAO/d,MAAK8pB,YAAYvd,EAE9B,KAAK+Q,GAASS,MAAa,MACrB,MAAOrb,GAAWuC,WAAWsH,KAmB3Cqd,EAAiBa,cAAgB,SAASvoB,GACtC,IAAKlC,KAAK2pB,SACN,KAAMvkB,OAAM,gDAGhB,OAAIpF,MAAKjB,OAASue,EAASS,MAAa,MAC7B7b,EAAMwD,SAAS,UAEfxD,EAAMwD,YAQrByhB,EAAQsC,QAAUA,CAclB,IAAIhB,GAAU,SAASd,EAASrC,EAAQ1mB,EAAMH,EAAS0nB,EAAS3nB,GAC5DypB,EAAU1iB,KAAKvF,KAAM2nB,EAASrC,EAAQ1mB,EAAMH,EAASD,GAKrDwB,KAAK4nB,UAAY,UAOjB5nB,KAAK0qB,eAAanmB,GAOlBvE,KAAKkqB,MAAQ,KAOblqB,KAAKmmB,UAAYA,EASjBnmB,KAAK2qB,QAAU,KAOf3qB,KAAK4qB,YAAc,KAOnB5qB,KAAK6qB,cAAgB,MAOrBC,EAAmBrC,EAAQznB,UAAY6C,OAAOukB,OAAOH,EAAUjnB,UAUnE8pB,GAAiBxrB,MAAQ,SAASyrB,GAC9B,GAAI/qB,KAAKkqB,QAAUa,EACf,MAAO/qB,MAAKkqB,KAGhB,IAAIA,GAAQ,SAAU5M,EAAUoK,GAqe5B,QAASsD,GAASpX,EAAKqX,EAAgBC,EAAgBxB,GACnD,GAAY,OAAR9V,GAA+B,gBAARA,GAAkB,CAEzC,GAAI8V,GAAgBA,YAAwBpM,GAAS6J,QAAQ6C,KAAM,CAC/D,GAAIprB,GAAO0e,EAAS6J,QAAQ6C,KAAKmB,QAAQzB,EAAa0B,OAAQxX,EAC9D,IAAa,OAAThV,EACA,MAAOA,GAGf,MAAOgV,GAGX,GAAIlR,EAAW+B,aAAamP,GACxB,MAAOqX,GAAiBrX,EAAI9C,WAAa8C,EAAIlD,UAEjD,IAAI4M,EAASxd,KAAK6T,OAAOC,GACrB,MAAOsX,GAAiBtX,EAAIlO,WAAa4X,EAASxd,KAAKwV,UAAU1B,EACrE,IAAItO,EAEJ,IAAIvE,MAAM8hB,QAAQjP,GAKd,MAJAtO,MACAsO,EAAIyX,QAAQ,SAASC,EAAG9mB,GACpBc,EAAMd,GAAKwmB,EAASM,EAAGL,EAAgBC,EAAgBxB,KAEpDpkB,CAIX,IAFAA,KAEIsO,YAAe0J,GAASiO,IAAK,CAE7B,IAAK,GADDC,GAAK5X,EAAI6X,UACJ1rB,EAAIyrB,EAAG9H,QAAS3jB,EAAE2rB,KAAM3rB,EAAIyrB,EAAG9H,OACpCpe,EAAMsO,EAAI+X,QAAQlB,cAAc1qB,EAAEmC,MAAM,KAAO8oB,EAASjrB,EAAEmC,MAAM,GAAI+oB,EAAgBC,EAAgBtX,EAAIgY,UAAUlC,aACtH,OAAOpkB,GAGX,GAAIvG,GAAO6U,EAAIiY,MACXC,MAAQvnB,EACZ,KAAK,GAAIpE,KAAKyT,GACNA,EAAI6S,eAAetmB,KACfpB,IAAS+sB,EAAQ/sB,EAAKypB,SAASroB,IAC/BmF,EAAMnF,GAAK6qB,EAASpX,EAAIzT,GAAI8qB,EAAgBC,EAAgBY,EAAMpC,cAElEpkB,EAAMnF,GAAK6qB,EAASpX,EAAIzT,GAAI8qB,EAAgBC,GAExD,OAAO5lB,GA/gBX,GAAIzG,GAAS6oB,EAAEW,YAAY/K,EAAS6J,QAAQsB,QAAQC,OAChDrC,EAASqB,EAAEW,YAAY/K,EAAS6J,QAAQsB,QAAQsD,OAWhDtD,EAAU,SAASrpB,EAAQ4sB,GAC3B1O,EAAS6M,QAAQ1B,QAAQljB,KAAKvF,KAG9B,KAAK,GAAIG,GAAE,EAAGqE,EAAE6hB,EAAOjmB,OAAQD,EAAEqE,IAAKrE,EAClCH,KAAKqmB,EAAOlmB,GAAGvB,MAAQ,IAE3B,KAAKuB,EAAE,EAAGqE,EAAE3F,EAAOuB,OAAQD,EAAEqE,IAAKrE,EAAG,CACjC,GAAI2rB,GAAQjtB,EAAOsB,EACnBH,MAAK8rB,EAAMltB,MACPktB,EAAMG,YACLH,EAAMI,IAAM,GAAI5O,GAASiO,IAAIO,GAAS,MACtCA,EAAMK,UAAyB,WAAbzE,EAAElpB,QACE,OAAvBstB,EAAM5N,eACNle,KAAK8rB,EAAMltB,MAAQktB,EAAM5N,cAGjC,GAAIzd,UAAUL,OAAS,EAAG,CACtB,GAAI8B,EAEJ,IAAyB,IAArBzB,UAAUL,QAA2B,OAAXhB,GAAqC,gBAAXA,MACE,kBAAlBA,GAAOiS,QAAyBjS,YAAkBqpB,KAC1D1nB,MAAM8hB,QAAQzjB,IACxBA,YAAkBke,GAASiO,KACrB7oB,EAAW+B,aAAarF,IACrBA,YAAkB+D,cAC1Bma,EAASxd,MAAQV,YAAkBke,GAASxd,KAG/D,IAAKK,EAAE,EAAGqE,EAAE/D,UAAUL,OAAQD,EAAEqE,IAAKrE,MACK,MAA1B+B,EAAQzB,UAAUN,KAC1BH,KAAKosB,KAAKvtB,EAAOsB,GAAGvB,KAAMsD,OAJlClC,MAAKosB,KAAKhtB,KAYlB0rB,EAAmBrC,EAAQznB,UAAY6C,OAAOukB,OAAO9K,EAAS6M,QAAQ1B,QAAQznB,UAalF8pB,GAAiBzV,IAAM,SAASwT,EAAK3mB,EAAOW,GACxC,GAAIipB,GAAQpE,EAAEmD,cAAchC,EAC5B,KAAKhmB,EAAU,CACX,IAAKipB,EACD,KAAM1mB,OAAMpF,KAAK,IAAI6oB,EAAI,gBAC7B,MAAMiD,YAAiBxO,GAAS6J,QAAQsB,QAAQC,OAC5C,KAAMtjB,OAAMpF,KAAK,IAAI6oB,EAAI,oBAAoBiD,EAAMpmB,UAAS,GAChE,KAAKomB,EAAMG,SACP,KAAM7mB,OAAMpF,KAAK,IAAI6oB,EAAI,2BAC7B3mB,GAAQ4pB,EAAMhC,YAAY5nB,GAAO,GAKrC,MAHkB,QAAdlC,KAAK6oB,KACL7oB,KAAK6oB,OACT7oB,KAAK6oB,GAAK/nB,KAAKoB,GACRlC,MAcX8qB,EAAiBuB,KAAOvB,EAAiBzV,IAazCyV,EAAiBjmB,IAAM,SAASynB,EAAUpqB,EAAOW,GAC7C,GAAIypB,GAAgC,gBAAbA,GAAuB,CAC1CzpB,EAAWX,CACX,KAAK,GAAIqqB,KAAQD,GAETA,EAAS7F,eAAe8F,QAA6C,MAA5BrqB,EAAQoqB,EAASC,SAAoDhoB,KAA1BmjB,EAAE8E,cAAcD,IACpGvsB,KAAKosB,KAAKG,EAAMrqB,EAAOW,EAE/B,OAAO7C,MAEX,GAAI8rB,GAAQpE,EAAEmD,cAAcyB,EAC5B,IAAKzpB,EAOD7C,KAAKssB,GAAYpqB,MAPN,CACX,IAAK4pB,EACD,KAAM1mB,OAAMpF,KAAK,IAAIssB,EAAS,6BAClC,MAAMR,YAAiBxO,GAAS6J,QAAQsB,QAAQC,OAC5C,KAAMtjB,OAAMpF,KAAK,IAAIssB,EAAS,oBAAoBR,EAAMpmB,UAAS,GACrE1F,MAAK8rB,EAAMltB,MAASsD,EAAQ4pB,EAAMhC,YAAY5nB,GAGlD,GAAI4pB,GAASA,EAAMW,MAAO,CACtB,GAAIC,GAAe1sB,KAAK8rB,EAAMW,MAAM7tB,KACtB,QAAVsD,GACqB,OAAjBwqB,GAAyBA,IAAiBZ,EAAMltB,OAChDoB,KAAK0sB,GAAgB,MACzB1sB,KAAK8rB,EAAMW,MAAM7tB,MAAQktB,EAAMltB,MACD8tB,IAAiBJ,IAC/CtsB,KAAK8rB,EAAMW,MAAM7tB,MAAQ,MAEjC,MAAOoB,OAaX8qB,EAAiBsB,KAAOtB,EAAiBjmB,IAYzCimB,EAAiB6B,IAAM,SAAS9D,EAAKhmB,GACjC,GAAIA,EACA,MAAO7C,MAAK6oB,EAChB,IAAIiD,GAAQpE,EAAEmD,cAAchC,EAC5B,MAAKiD,GAAWA,YAAiBxO,GAAS6J,QAAQsB,QAAQC,OACtD,KAAMtjB,OAAMpF,KAAK,IAAI6oB,EAAI,6BAC7B,MAAMiD,YAAiBxO,GAAS6J,QAAQsB,QAAQC,OAC5C,KAAMtjB,OAAMpF,KAAK,IAAI6oB,EAAI,oBAAoBiD,EAAMpmB,UAAS,GAChE,OAAO1F,MAAK8rB,EAAMltB,OAYtBksB,EAAiB8B,KAAO9B,EAAiB6B,GAIzC,KAAK,GAAIxsB,GAAE,EAAGA,EAAEtB,EAAOuB,OAAQD,IAAK,CAChC,GAAI2rB,GAAQjtB,EAAOsB,EAEf2rB,aAAiBxO,GAAS6J,QAAQsB,QAAQoE,gBAG1CnF,EAAEC,QAAQlpB,QAA2B,mBACrC,SAAUqtB,GAEN,GAAIgB,GAAOhB,EAAMnD,aAAa5H,QAAQ,eAAgB,SAASyC,GAC3D,MAAOA,GAAMjR,cAAcwO,QAAQ,IAAI,KAE3C+L,GAAOA,EAAK9Z,UAAU,EAAE,GAAGT,cAAgBua,EAAK9Z,UAAU,EAG1D,IAAIpU,GAAOktB,EAAMnD,aAAa5H,QAAQ,WAAY,SAASyC,GACvD,MAAO,IAAIA,IAWXuJ,EAAS,SAAS7qB,EAAOW,GAEzB,MADA7C,MAAK8rB,EAAMltB,MAAQiE,EAAWX,EAAQ4pB,EAAMhC,YAAY5nB,GACjDlC,MASPgtB,EAAS,WACT,MAAOhtB,MAAK8rB,EAAMltB,MAGS,QAA3B8oB,EAAEc,SAAS,MAAMsE,KAYjBhC,EAAiB,MAAMgC,GAAQC,GAEH,OAA5BrF,EAAEc,SAAS,OAAO5pB,KAYlBksB,EAAiB,OAAOlsB,GAAQmuB,GAEL,OAA3BrF,EAAEc,SAAS,MAAMsE,KASjBhC,EAAiB,MAAMgC,GAAQE,GAEH,OAA5BtF,EAAEc,SAAS,OAAO5pB,KASlBksB,EAAiB,OAAOlsB,GAAQouB,IAErClB,GAmBXhB,EAAiBzZ,OAAS,SAASnQ,EAAQ+rB,GACjB,iBAAX/rB,KACP+rB,EAAW/rB,EACXA,MAASqD,GACb,IAAI2oB,IAAQ,CACPhsB,KACDA,EAAS,GAAIwB,GACbwqB,GAAQ,EACZ,IAAI7S,GAAKnZ,EAAO0B,YAChB,KAEI,MADA8kB,GAAErW,OAAOrR,KAAMkB,EAAO0O,KAAMqd,IACpBC,EAAQhsB,EAAOuO,OAASvO,GAAQ0O,GAAGyK,GAC7C,MAAOta,GAEL,KADAmB,GAAO0O,GAAGyK,GACL,IAYboO,EAAQpX,OAAS,SAAS+O,EAAMlf,EAAQ+rB,GACpC,MAAO,IAAIxE,GAAQrI,GAAM/O,OAAOnQ,EAAQ+rB,IAW5CnC,EAAiBT,UAAY,WACzB,MAAO3C,GAAE2C,UAAUrqB,OAcvB8qB,EAAiBqC,gBAAkB,SAASjsB,EAAQ+rB,GAChD,GAAIC,IAAQ,CACPhsB,KACDA,EAAS,GAAIwB,GACbwqB,GAAQ,EACZ,IAAIE,IAAM,GAAI1qB,IAAakN,IAI3B,OAHA8X,GAAErW,OAAOrR,KAAMotB,EAAKH,GAAUxd,OAC9BvO,EAAO+E,cAAcmnB,EAAI9c,aACzBpP,EAAOwF,OAAO0mB,GACPF,EAAQhsB,EAAOuO,OAASvO,GAYnC4pB,EAAiBuC,SAAW,WACxB,IACI,MAAOrtB,MAAKqR,SAAST,gBACvB,MAAO7Q,GAEL,KADIA,GAAW,UAAGA,EAAW,QAAIA,EAAW,QAAE6Q,iBACzC,IAabka,EAAiBla,cAAgBka,EAAiBuC,SAWlDvC,EAAiBwC,SAAW,WACxB,IACI,MAAOttB,MAAKqR,SAASX,WACvB,MAAO3Q,GAEL,KADIA,GAAW,UAAGA,EAAW,QAAIA,EAAW,QAAE2Q,YACzC,IAaboa,EAAiBpa,SAAWoa,EAAiBwC,SAW7CxC,EAAiByC,SAAW,WACxB,IACI,MAAOvtB,MAAKqR,SAASP,WACvB,MAAO/Q,GAEL,KADIA,GAAW,UAAGA,EAAW,QAAIA,EAAW,QAAE+Q,YACzC,IAabga,EAAiBha,SAAWga,EAAiByC,SAW7CzC,EAAiB0C,UAAY,WACzB,IACI,MAAOxtB,MAAKqR,SAASN,QACvB,MAAOhR,GAEL,KADIA,GAAW,UAAGA,EAAW,QAAIA,EAAW,QAAEgR,SACzC,IAab+Z,EAAiB/Z,MAAQ+Z,EAAiB0C,UAiE1C1C,EAAiB2C,MAAQ,SAASxC,EAAgBC,GAC9C,MAAOF,GAAShrB,OAAQirB,IAAkBC,EAAgBlrB,KAAK6rB,QAQnEf,EAAiB4C,WAAa,WAC1B,MAAOC,MAAKC,UACR5C,EAAShrB,MACmB,GACA,EACvBA,KAAK6rB,SAmBlBpD,EAAQhX,OAAS,SAASvQ,EAAQd,EAAQgtB,GAChB,gBAAXhtB,KACPgtB,EAAMhtB,EACNA,GAAU,GACQ,gBAAXc,GACPA,EAASwB,EAAWgC,KAAKxD,EAAQksB,GAAY,UACvC1qB,EAAW+B,aAAavD,KAC9BA,EAASwB,EAAWgC,KAAKxD,GAC7B,IAAImZ,GAAKnZ,EAAO0B,YAChB,KACI,GAAIwjB,GAAMsB,EAAEjW,OAAOvQ,EAAO0O,KAAMxP,EAEhC,OADAc,GAAO0O,GAAGyK,GACH+L,EACT,MAAOrmB,GAEL,KADAmB,GAAO0O,GAAGyK,GACL,IAeboO,EAAQoF,gBAAkB,SAAS3sB,EAAQksB,GAKvC,GAJsB,gBAAXlsB,GACPA,EAASwB,EAAWgC,KAAKxD,EAAQksB,GAAY,UACvC1qB,EAAW+B,aAAavD,KAC9BA,EAASwB,EAAWgC,KAAKxD,IACzBA,EAAOoP,YAAc,EACrB,MAAO,KACX,IAAImM,GAAMvb,EAAOC,OACbiM,EAAMlM,EAAOmF,cACjB,IAAInF,EAAOoP,YAAclD,EAErB,MADAlM,GAAOC,OAASsb,EACT,IAEX,KACI,GAAI2J,GAAMsB,EAAEjW,OAAOvQ,EAAOsF,MAAMtF,EAAOC,OAAQD,EAAOC,OAASiM,GAAKwC,KAEpE,OADA1O,GAAOC,QAAUiM,EACVgZ,EACT,MAAOzb,GAEL,KADAzJ,GAAOC,QAAUiM,EACXzC,IAcd8d,EAAQqF,SAAW,SAASvhB,GACxB,MAAOkc,GAAQhX,OAAOlF,EAAK,WAa/Bkc,EAAQsF,UAAY,SAASxhB,GACzB,MAAOkc,GAAQhX,OAAOlF,EAAK,QAa/Bkc,EAAQuF,WAAa,SAASzhB,GAC1B,MAAO,IAAIkc,GAAQkF,KAAKpJ,MAAMhY,KAYlCue,EAAiBplB,SAAW,WACxB,MAAOgiB,GAAEhiB,WA2Cb,OANI7B,QAAOC,iBACPD,OAAOC,eAAe2kB,EAAS,YAAcvmB,MAASwlB,EAAE2B,aACxDxlB,OAAOC,eAAegnB,EAAkB,YAAc5oB,MAASumB,EAAkB,WACjF5kB,OAAOC,eAAe2kB,EAAS,SAAWvmB,MAASwlB,IACnD7jB,OAAOC,eAAegnB,EAAkB,SAAW5oB,MAASwlB,KAEzDe,GAERnL,EAAUtd,KAGbA,MAAK2qB,WACL3qB,KAAK4qB,eACL5qB,KAAK6qB,iBACL7qB,KAAKwsB,gBACL,KAAK,GAAiCjE,GAA7BpoB,EAAE,EAAGqE,EAAExE,KAAKkoB,SAAS9nB,OAAeD,EAAEqE,EAAGrE,IAE9C,IADAooB,EAAQvoB,KAAKkoB,SAAS/nB,aACD6pB,IAAQzB,YAAiBE,IAAWF,YAAiB0F,GAAS,CAC/E,GAAI/D,EAAMzD,eAAe8B,EAAM3pB,MAC3B,KAAMwG,OAAM,4BAA4BpF,KAAK0F,UAAS,GAAM,KAAK6iB,EAAM7iB,UAAS,GAAM,qCAAqC6iB,EAAM3pB,KAAK,IAC1IsrB,GAAM3B,EAAM3pB,MAAQ2pB,EAAMjpB,YACvB,IAAIipB,YAAiBE,GAAQC,MAChCH,EAAMjpB,QACNU,KAAK2qB,QAAQ7pB,KAAKynB,GAClBvoB,KAAK4qB,YAAYrC,EAAMvpB,IAAMupB,EAC7BvoB,KAAK6qB,cAActC,EAAM3pB,MAAQ2pB,MAChC,IAAIA,YAAiBE,GAAQsD,MAC9B/rB,KAAKwsB,cAAcjE,EAAM3pB,MAAQ2pB,MAEhC,MAAMA,YAAiBE,GAAQsD,OAAYxD,YAAiB2F,IAC7D,KAAM9oB,OAAM,4BAA4BpF,KAAK0F,UAAS,GAAM,KAAK1F,KAAKkoB,SAAS/nB,GAAGuF,UAAS,GAGnG,OAAO1F,MAAKkqB,MAAQA,GAYxBY,EAAiBzZ,OAAS,SAAS2N,EAAS9d,EAAQ+rB,GAGhD,IAAK,GADDnB,GACiCjhB,EAFjCsjB,EAAe,KAEVhuB,EAAE,EAAGqE,EAAExE,KAAK2qB,QAAQvqB,OAAaD,EAAEqE,IAAKrE,EAC7C2rB,EAAQ9rB,KAAK2qB,QAAQxqB,GACrB0K,EAAMmU,EAAQ8M,EAAMltB,MAChBktB,EAAMK,UAAoB,OAARthB,EACG,OAAjBsjB,IACAA,EAAerC,GAEnBA,EAAMza,OAAO4b,EAAWpiB,EAAMihB,EAAMhC,YAAYjf,GAAM3J,EAAQ8d,EAEtE,IAAqB,OAAjBmP,EAAuB,CACvB,GAAIxjB,GAAMvF,MAAM,2CAA2CpF,KAAK0F,UAAS,GAAM,KAAKyoB,EAEpF,MADAxjB,GAAa,QAAIzJ,EACZ,EAET,MAAOA,IAUX4pB,EAAiBT,UAAY,SAASrL,GAClC,IAAK,GAAqC8M,GAAOjhB,EAAxCR,EAAE,EAAGlK,EAAE,EAAGqE,EAAExE,KAAK2qB,QAAQvqB,OAAoBD,EAAEqE,IAAKrE,EAAG,CAG5D,GAFA2rB,EAAQ9rB,KAAK2qB,QAAQxqB,GACrB0K,EAAMmU,EAAQ8M,EAAMltB,MAChBktB,EAAMK,UAAoB,OAARthB,EACnB,KAAMzF,OAAM,2CAA2CpF,KAAK0F,UAAS,GAAM,KAAKomB,EAE/EzhB,IAAKyhB,EAAMzB,UAAUxf,EAAKmU,GAElC,MAAO3U,IAqDXygB,EAAiBrZ,OAAS,SAASvQ,EAAQd,EAAQguB,GACzB,gBAAXhuB,KACPA,GAAU,EAId,KAHA,GAEIqnB,GAAKxJ,EAAUjf,EAAI8sB,EAFnBjmB,EAAQ3E,EAAOC,OACfilB,EAAM,GAAKpmB,MAAU,MAElBkB,EAAOC,OAAS0E,EAAMzF,IAAuB,IAAZA,GAAiBc,EAAOoP,YAAc,GAAI,CAI9E,GAHAmX,EAAMvmB,EAAOmF,eACb4X,EAAiB,EAANwJ,EACXzoB,EAAKyoB,IAAQ,EACTxJ,IAAaX,EAASC,WAAWK,SAAU,CAC3C,GAAI5e,IAAOovB,EACP,KAAMhpB,OAAM,mCAAmCpF,KAAK0F,UAAS,GAAM,KAAK1G,EAAG,MAAMovB,EAAqBA,EAAmB,YAAc,eAAe;0HAC1J,OAEJ,GAAMtC,EAAQ9rB,KAAK4qB,YAAY5rB,IAwB/B,GAAI8sB,EAAMG,WAAaH,EAAMrtB,QAAgB,OACzC2nB,EAAI0F,EAAMltB,MAAMkC,KAAKgrB,EAAMra,OAAOwM,EAAU/c,QACzC,IAAI4qB,EAAMI,IAAK,CAClB,GAAImC,GAASvC,EAAMra,OAAOwM,EAAU/c,EACpCklB,GAAI0F,EAAMltB,MAAMiG,IAAIwpB,EAAO,GAAIA,EAAO,QAGtC,IADAjI,EAAI0F,EAAMltB,MAAQktB,EAAMra,OAAOwM,EAAU/c,GACrC4qB,EAAMW,MAAO,CACb,GAAIC,GAAetG,EAAI0F,EAAMW,MAAM7tB,KACd,QAAjB8tB,GAAyBA,IAAiBZ,EAAMltB,OAChDwnB,EAAIsG,GAAgB,MACxBtG,EAAI0F,EAAMW,MAAM7tB,MAAQktB,EAAMltB,UAjClC,QAAQqf,GACJ,IAAKX,GAASC,WAAWC,OACrBtc,EAAOmF,cACP,MACJ,KAAKiX,GAASC,WAAWM,OACrB3c,EAAOC,QAAU,CACjB,MACJ,KAAKmc,GAASC,WAAWE,OACrBvc,EAAOC,QAAU,CACjB,MACJ,KAAKmc,GAASC,WAAWG,OACrB,GAAItQ,GAAMlM,EAAOmF,cACjBnF,GAAOC,QAAUiM,CACjB,MACJ,KAAKkQ,GAASC,WAAWI,WACrB,KAAO2J,EAAiBtoB,EAAIkC,KAC5B,KACJ,SACI,KAAMkE,OAAM,uCAAuCpG,EAAG,OAAOgB,KAAK0F,UAAS,GAAM,YAAYuY,IAqB7G,IAAK,GAAI9d,GAAE,EAAGqE,EAAExE,KAAK2qB,QAAQvqB,OAAQD,EAAEqE,IAAKrE,EAExC,GADA2rB,EAAQ9rB,KAAK2qB,QAAQxqB,GACG,OAApBimB,EAAI0F,EAAMltB,MACV,GAAoB,WAAhBoB,KAAKxB,OACL4nB,EAAI0F,EAAMltB,MAAQktB,EAAM5N,iBACrB,CAAA,GAAI4N,EAAMK,SAAU,CACvB,GAAIxhB,GAAMvF,MAAM,2CAA6CpF,KAAK0F,UAAS,GAAQ,KAAOomB,EAAMltB,KAEhG,MADA+L,GAAa,QAAIyb,EACZ,EACE9I,EAASiC,kBAA2C,OAAvBuM,EAAM5N,eAC1CkI,EAAI0F,EAAMltB,MAAQktB,EAAM5N,cAGpC,MAAOkI,IAOXe,EAAQsB,QAAUA,CAkBlB,IAAIC,GAAQ,SAASf,EAAS3I,EAASlgB,EAAMwvB,EAASvvB,EAAMH,EAAMI,EAAIP,EAASguB,EAAOjuB,GAClFkpB,EAAEniB,KAAKvF,KAAM2nB,EAAS3I,EAASpgB,GAK/BoB,KAAK4nB,UAAY,gBAOjB5nB,KAAKmsB,SAAoB,aAATrtB,EAOhBkB,KAAKisB,SAAoB,aAATntB,EAOhBkB,KAAKksB,IAAe,QAATptB,EAQXkB,KAAKuuB,QAAUD,GAAW,KAQ1BtuB,KAAKjB,KAAOA,EAOZiB,KAAK0pB,aAAe,KAOpB1pB,KAAKhB,GAAKA,EAQVgB,KAAKvB,QAAUA,MAOfuB,KAAKke,aAAe,KAOpBle,KAAKysB,MAAQA,GAAS,KAOtBzsB,KAAKxB,OAASA,GAAU,SAOxBwB,KAAK2oB,aAAe3oB,KAAKpB,KAOzBoB,KAAKwuB,QAAU,KAQfxuB,KAAKyuB,WAAa,MAGdzuB,KAAK2nB,QAAQlpB,QAAkC,0BAAOuB,eAAgByoB,GAAQoE,iBAC9E7sB,KAAKpB,KAAO0e,EAASkC,KAAKsB,YAAY9gB,KAAKpB,QAO/C8vB,EAAiBhG,EAAM1nB,UAAY6C,OAAOukB,OAAOV,EAAE1mB,UAOvD0tB,GAAepvB,MAAQ,WACnBU,KAAKwuB,QAAU,GAAI/E,GAAQzpB,KAAKjB,KAAMiB,KAAK0pB,cAAc,EAAO1pB,KAAKxB,OAAQwB,KAAKpB,MAC9EoB,KAAKksB,MACLlsB,KAAKyuB,WAAa,GAAIhF,GAAQzpB,KAAKuuB,YAAShqB,IAAW,EAAMvE,KAAKxB,OAAQwB,KAAKpB,OAI/D,WAAhBoB,KAAKxB,QAAwBwB,KAAKisB,UAAajsB,KAAKksB,QAIZ,KAA5BlsB,KAAKvB,QAAiB,UAClCuB,KAAKke,aAAele,KAAK8pB,YAAY9pB,KAAKvB,QAAiB,UAJ3DuB,KAAKke,aAAeuL,EAAQI,kBAAkB7pB,KAAKjB,OAe3D2vB,EAAe5E,YAAc,SAAS5nB,EAAOysB,GAGzC,QAASjd,GAAK7G,EAAKub,GACf,KAAMhhB,OAAM,qBAAqB2kB,EAAKrkB,UAAS,GAAM,YAAYqkB,EAAKhrB,KAAKH,KAAK,KAAKiM,EAAI,KAAKub,EAAI,KAHtGuI,EAAeA,IAAgB,CAC/B,IAAI5E,GAAO/pB,IAIX,IAAc,OAAVkC,EAKA,MAJIlC,MAAKmsB,UACLza,QAAYxP,GAAO,YACH,WAAhBlC,KAAKxB,QAAuBwB,KAAKjB,OAASue,EAASS,MAAe,SAClErM,QAAYxP,GAAO,sDAChB,IAEX,IAAI/B,EACJ,IAAIH,KAAKisB,WAAa0C,EAAc,CAC3B5tB,MAAM8hB,QAAQ3gB,KACfA,GAASA,GACb,IAAIoX,KACJ,KAAKnZ,EAAE,EAAGA,EAAE+B,EAAM9B,OAAQD,IACtBmZ,EAAIxY,KAAKd,KAAKwuB,QAAQ1E,YAAY5nB,EAAM/B,IAC5C,OAAOmZ,GAEX,MAAItZ,MAAKksB,MAAQyC,EACPzsB,YAAiBob,GAASiO,IAQrBrpB,GANDA,YAAiB2B,SACnB6N,QAAYxP,GACP,qDAEF,GAAIob,GAASiO,IAAIvrB,KAAMkC,MAMjClC,KAAKisB,UAAYlrB,MAAM8hB,QAAQ3gB,IAChCwP,QAAYxP,GAAO,qBAEhBlC,KAAKwuB,QAAQ1E,YAAY5nB,KAUpCwsB,EAAeE,gBAAkB,SAAS1sB,EAAO8c,GAC7C,GAAoB,WAAhBhf,KAAKxB,OACL,MAAkB,QAAV0D,CACZ,IAAIlC,KAAKysB,OAASzN,EAAQhf,KAAKysB,MAAM7tB,QAAUoB,KAAKpB,KAChD,OAAO,CACX,QAAQoB,KAAKjB,MACT,IAAKue,GAASS,MAAa,MAC3B,IAAKT,GAASS,MAAc,OAC5B,IAAKT,GAASS,MAAgB,SAC9B,IAAKT,GAASS,MAAc,OAC5B,IAAKT,GAASS,MAAe,QACzB,MAAiB,KAAV7b,CAEX,KAAKob,GAASS,MAAa,MAC3B,IAAKT,GAASS,MAAc,OAC5B,IAAKT,GAASS,MAAgB,SAC9B,IAAKT,GAASS,MAAc,OAC5B,IAAKT,GAASS,MAAe,QACzB,MAAqB,KAAd7b,EAAM2G,KAA4B,IAAf3G,EAAM6G,IAEpC,KAAKuU,GAASS,MAAY,KACtB,MAAO7b,EAEX,KAAKob,GAASS,MAAa,MAC3B,IAAKT,GAASS,MAAc,OACxB,MAAiB,KAAV7b,CAEX,KAAKob,GAASS,MAAc,OACxB,MAAO7b,GAAM9B,OAAS,CAE1B,KAAKkd,GAASS,MAAa,MACvB,MAAO7b,GAAMoO,YAAc,CAE/B,KAAKgN,GAASS,MAAY,KACtB,MAAiB,KAAV7b,CAEX,KAAKob,GAASS,MAAe,QACzB,MAAiB,QAAV7b,CACX,SACI,OAAO,IAanBwsB,EAAerd,OAAS,SAASnP,EAAOhB,EAAQ8d,GAC5C,GAAkB,OAAdhf,KAAKjB,MAAsC,gBAAdiB,MAAKjB,KAClC,KAAMqG,OAAM,iCAAiCpF,KAAK0F,UAAS,GAAM,KAAK1F,KAAKjB,KAC/E,IAAc,OAAVmD,GAAmBlC,KAAKisB,UAA4B,GAAhB/pB,EAAM9B,OAC1C,MAAOc,EACX,KACI,GAAIlB,KAAKisB,SAAU,CACf,GAAI9rB,EAGJ,IAAIH,KAAKvB,QAAgB,QAAK6e,EAASQ,oBAAoBzK,QAAQrT,KAAKjB,KAAKkf,WAAa,EAAG,CAIzF/c,EAAO+E,cAAejG,KAAKhB,IAAM,EAAKse,EAASC,WAAWG,QAC1Dxc,EAAOoO,eAAepO,EAAOC,QAAU,EACvC,IAAI0E,GAAQ3E,EAAOC,MACnB,KAAKhB,EAAE,EAAGA,EAAE+B,EAAM9B,OAAQD,IACtBH,KAAKwuB,QAAQlE,YAAYtqB,KAAKhB,GAAIkD,EAAM/B,GAAIe,EAChD,IAAIkM,GAAMlM,EAAOC,OAAO0E,EACpBgpB,EAAYnsB,EAAWyH,kBAAkBiD,EAC7C,IAAIyhB,EAAY,EAAG,CACf,GAAIC,GAAW5tB,EAAOsF,MAAMX,EAAO3E,EAAOC,OAC1C0E,IAASgpB,EAAU,EACnB3tB,EAAOC,OAAS0E,EAChB3E,EAAOwF,OAAOooB,GAElB5tB,EAAO+E,cAAcmH,EAAKvH,EAAMgpB,OAIhC,KAAK1uB,EAAE,EAAGA,EAAE+B,EAAM9B,OAAQD,IACtBe,EAAO+E,cAAejG,KAAKhB,IAAM,EAAKgB,KAAKjB,KAAKkf,UAChDje,KAAKwuB,QAAQlE,YAAYtqB,KAAKhB,GAAIkD,EAAM/B,GAAIe,OAE7ClB,MAAKksB,IAEZhqB,EAAMmpB,QAAQ,SAASxgB,EAAKge,EAAKtnB,GAE7B,GAAInB,GACAsC,EAAWyH,kBAAkB,EAAWnK,KAAKuuB,QAAQtQ,UACrDje,KAAKyuB,WAAWrE,gBAAgB,EAAGvB,GACnCnmB,EAAWyH,kBAAkB,GAAWnK,KAAKjB,KAAKkf,UAClDje,KAAKwuB,QAAQpE,gBAAgB,EAAGvf,EAGpC3J,GAAO+E,cAAejG,KAAKhB,IAAM,EAAKse,EAASC,WAAWG,QAC1Dxc,EAAO+E,cAAc7F,GAGrBc,EAAO+E,cAAc,EAAWjG,KAAKuuB,QAAQtQ,UAC7Cje,KAAKyuB,WAAWnE,YAAY,EAAGzB,EAAK3nB,GACpCA,EAAO+E,cAAc,GAAWjG,KAAKjB,KAAKkf,UAC1Cje,KAAKwuB,QAAQlE,YAAY,EAAGzf,EAAK3J,IAClClB,MAECA,KAAK4uB,gBAAgB1sB,EAAO8c,KAC5B9d,EAAO+E,cAAejG,KAAKhB,IAAM,EAAKgB,KAAKjB,KAAKkf,UAChDje,KAAKwuB,QAAQlE,YAAYtqB,KAAKhB,GAAIkD,EAAOhB,IAGnD,MAAOnB,GACL,KAAMqF,OAAM,qBAAqBpF,KAAK0F,UAAS,GAAM,KAAKxD,EAAM,KAAKnC,EAAE,KAE3E,MAAOmB,IAUXwtB,EAAerE,UAAY,SAASnoB,EAAO8c,GAEvC,GADA9c,EAAQlC,KAAK8pB,YAAY5nB,GACP,OAAdlC,KAAKjB,MAAsC,gBAAdiB,MAAKjB,KAClC,KAAMqG,OAAM,iCAAiCpF,KAAK0F,UAAS,GAAM,KAAK1F,KAAKjB,KAC/E,IAAc,OAAVmD,GAAmBlC,KAAKisB,UAA4B,GAAhB/pB,EAAM9B,OAC1C,MAAO,EACX,IAAIiK,GAAI,CACR,KACI,GAAIrK,KAAKisB,SAAU,CACf,GAAI9rB,GAAG4uB,CACP,IAAI/uB,KAAKvB,QAAgB,QAAK6e,EAASQ,oBAAoBzK,QAAQrT,KAAKjB,KAAKkf,WAAa,EAAG,CAGzF,IAFA5T,GAAK3H,EAAWyH,kBAAmBnK,KAAKhB,IAAM,EAAKse,EAASC,WAAWG,QACvEqR,EAAK,EACA5uB,EAAE,EAAGA,EAAE+B,EAAM9B,OAAQD,IACtB4uB,GAAM/uB,KAAKwuB,QAAQpE,gBAAgBpqB,KAAKhB,GAAIkD,EAAM/B,GACtDkK,IAAK3H,EAAWyH,kBAAkB4kB,GAClC1kB,GAAK0kB,MAEL,KAAK5uB,EAAE,EAAGA,EAAE+B,EAAM9B,OAAQD,IACtBkK,GAAK3H,EAAWyH,kBAAmBnK,KAAKhB,IAAM,EAAKgB,KAAKjB,KAAKkf,UAC7D5T,GAAKrK,KAAKwuB,QAAQpE,gBAAgBpqB,KAAKhB,GAAIkD,EAAM/B,QAElDH,MAAKksB,IAEZhqB,EAAMmpB,QAAQ,SAASxgB,EAAKge,EAAKtnB,GAE7B,GAAInB,GACAsC,EAAWyH,kBAAkB,EAAWnK,KAAKuuB,QAAQtQ,UACrDje,KAAKyuB,WAAWrE,gBAAgB,EAAGvB,GACnCnmB,EAAWyH,kBAAkB,GAAWnK,KAAKjB,KAAKkf,UAClDje,KAAKwuB,QAAQpE,gBAAgB,EAAGvf,EAEpCR,IAAK3H,EAAWyH,kBAAmBnK,KAAKhB,IAAM,EAAKse,EAASC,WAAWG,QACvErT,GAAK3H,EAAWyH,kBAAkB/J,GAClCiK,GAAKjK,GACNJ,MAECA,KAAK4uB,gBAAgB1sB,EAAO8c,KAC5B3U,GAAK3H,EAAWyH,kBAAmBnK,KAAKhB,IAAM,EAAKgB,KAAKjB,KAAKkf,UAC7D5T,GAAKrK,KAAKwuB,QAAQpE,gBAAgBpqB,KAAKhB,GAAIkD,IAGrD,MAAOnC,GACL,KAAMqF,OAAM,qBAAqBpF,KAAK0F,UAAS,GAAM,KAAKxD,EAAM,KAAKnC,EAAE,KAE3E,MAAOsK,IAaXqkB,EAAejd,OAAS,SAASwM,EAAU/c,EAAQytB,GAC/C,GAAIzsB,GAAOZ,CASX,OAJMtB,KAAKksB,KAAOjO,GAAYje,KAAKjB,KAAKkf,WAClC0Q,GAAgB3uB,KAAKisB,UAAYjsB,KAAKvB,QAAgB,QACvDwf,GAAYX,EAASC,WAAWG,QAChC1d,KAAKksB,KAAOjO,GAAYX,EAASC,WAAWG,QAE7C,KAAMtY,OAAM,+BAA+BpF,KAAK0F,UAAS,GAAM,KAAKuY,EAAS,KAAKje,KAAKjB,KAAKkf,SAAS,aAGzG,IAAIA,GAAYX,EAASC,WAAWG,QAAU1d,KAAKisB,UAAYjsB,KAAKvB,QAAgB,QAAK6e,EAASQ,oBAAoBzK,QAAQrT,KAAKjB,KAAKkf,WAAa,IAC5I0Q,EAAc,CACfrtB,EAASJ,EAAOmF,eAChB/E,EAASJ,EAAOC,OAASG,CAEzB,KADA,GAAIlC,MACG8B,EAAOC,OAASG,GACnBlC,EAAO0B,KAAKd,KAAKyR,OAAOzR,KAAKjB,KAAKkf,SAAU/c,GAAQ,GACxD,OAAO9B,GAMf,GAAIY,KAAKksB,IAAK,CAEV,GAAIrD,GAAMY,EAAQI,kBAAkB7pB,KAAKuuB,QAKzC,IAJArsB,EAAQunB,EAAQI,kBAAkB7pB,KAAKjB,MAGvCuC,EAASJ,EAAOmF,eACZnF,EAAOoP,YAAchP,EACrB,KAAM8D,OAAM,+BAA+BpF,KAAK0F,UAAS,GAAM,KAAKpE,EAAO,0BAA0BJ,EAAOoP,YAGhH,IAAI0e,GAAS9tB,EAAOoE,OAIpB,KAHA0pB,EAAOzrB,MAAQyrB,EAAO7tB,OAASG,EAC/BJ,EAAOC,QAAUG,EAEV0tB,EAAO1e,YAAc,GAAG,CAC3B,GAAImX,GAAMuH,EAAO3oB,cACjB4X,GAAiB,EAANwJ,CACX,IAAIzoB,GAAKyoB,IAAQ,CACjB,IAAW,IAAPzoB,EACA6pB,EAAM7oB,KAAKyuB,WAAWhd,OAAOud,EAAQ/Q,EAAUjf,OAC5C,CAAA,GAAW,IAAPA,EAGP,KAAMoG,OAAM,mDAFZlD,GAAQlC,KAAKwuB,QAAQ/c,OAAOud,EAAQ/Q,EAAUjf,IAMtD,OAAQ6pB,EAAK3mB,GAIjB,MAAOlC,MAAKwuB,QAAQ/c,OAAOvQ,EAAQ+c,EAAUje,KAAKhB,KAOtDmoB,EAAQsB,QAAQC,MAAQA,CAexB,IAAImE,GAAiB,SAASlF,EAAS3I,EAASlgB,EAAMC,EAAMH,EAAMI,EAAIP,GAClEiqB,EAAMnjB,KAAKvF,KAAM2nB,EAAS3I,EAASlgB,EAAsB,KAAMC,EAAMH,EAAMI,EAAIP,GAO/EuB,KAAKivB,UAITpC,GAAe7rB,UAAY6C,OAAOukB,OAAOM,EAAM1nB,WAM/CmmB,EAAQsB,QAAQoE,eAAiBA,CAWjC,IAAId,GAAQ,SAASpE,EAAS3I,EAASpgB,GACnC8oB,EAAEniB,KAAKvF,KAAM2nB,EAAS3I,EAASpgB,GAO/BoB,KAAKnB,UAOTsoB,GAAQsB,QAAQsD,MAAQA,CAaxB,IAAI/B,GAAO,SAASrC,EAASrC,EAAQ1mB,EAAMH,EAASD,GAChDypB,EAAU1iB,KAAKvF,KAAM2nB,EAASrC,EAAQ1mB,EAAMH,EAASD,GAKrDwB,KAAK4nB,UAAY,OAOjB5nB,KAAKorB,OAAS,KAUlBpB,GAAKmB,QAAU,SAASrE,EAAK5kB,GAEzB,IAAK,GAAS2mB,GADVU,EAAO1lB,OAAO0lB,KAAKzC,GACd3mB,EAAE,EAAQA,EAAEopB,EAAKnpB,SAAUD,EAChC,GAAI2mB,EAAI+B,EAAMU,EAAKppB,MAAQ+B,EACvB,MAAO2mB,EACf,OAAO,QAOSmB,EAAKhpB,UAAY6C,OAAOukB,OAAOH,EAAUjnB,YAQ/C1B,MAAQ,SAASyrB,GAC3B,GAAI/qB,KAAKorB,SAAWL,EAChB,MAAO/qB,MAAKorB,MAGhB,KAAK,GAFDtE,GAAM,GAAIxJ,GAAS6M,QAAQH,KAC3B5qB,EAASY,KAAKqoB,YAAY2B,EAAKC,OAC1B9pB,EAAE,EAAGqE,EAAEpF,EAAOgB,OAAQD,EAAEqE,IAAKrE,EAClC2mB,EAAI1nB,EAAOe,GAAS,MAAKf,EAAOe,GAAO,EAM3C,OALI0D,QAAOC,gBACPD,OAAOC,eAAegjB,EAAK,YACvB5kB,MAASlC,KAAKqpB,WACdtlB,YAAc,IAEf/D,KAAKorB,OAAStE,GAOzBK,EAAQ6C,KAAOA,CAYf,IAAIC,GAAQ,SAAStC,EAASb,EAAKloB,EAAMI,GACrC0oB,EAAEniB,KAAKvF,KAAM2nB,EAASb,EAAKloB,GAK3BoB,KAAK4nB,UAAY,aAOjB5nB,KAAKhB,GAAKA,EAIdirB,GAAMjpB,UAAY6C,OAAOukB,OAAOV,EAAE1mB,WAMlCmmB,EAAQ6C,KAAKC,MAAQA,CAWrB,IAAIiE,GAAY,SAASvG,EAASrC,EAAQ1mB,EAAMktB,GAC5CpE,EAAEniB,KAAKvF,KAAM2nB,EAASrC,EAAQ1mB,GAO9BoB,KAAK8rB,MAAQA,EAIjBoC,GAAUltB,UAAY6C,OAAOukB,OAAOV,EAAE1mB,WAMtCmmB,EAAQ+G,UAAYA,CAYpB,IAAID,GAAU,SAAStG,EAASuH,EAAMtwB,EAAMH,GACxCwpB,EAAU1iB,KAAKvF,KAAM2nB,EAASuH,EAAMtwB,EAAMH,GAK1CuB,KAAK4nB,UAAY,UAMjB5nB,KAAKkqB,MAAQ,OAOM+D,EAAQjtB,UAAY6C,OAAOukB,OAAOH,EAAUjnB,YAUlD1B,MAAQ,SAASyrB,GAC9B,MAAI/qB,MAAKkqB,QAAUa,EACR/qB,KAAKkqB,MAGTlqB,KAAKkqB,MAAQ,SAAU5M,EAAUoK,GAuDpC,IAAK,GA7CDuG,GAAU,SAASkB,GACnB7R,EAAS6M,QAAQ8D,QAAQ1oB,KAAKvF,MAQ9BA,KAAKmvB,QAAUA,GAAW,SAASvwB,EAAMwnB,EAAKnG,GAI1CpF,WAAWoF,EAASrT,KAAK5M,KAAMoF,MAAM,+EAAgF,KAQzHgqB,EAAmBnB,EAAQjtB,UAAY6C,OAAOukB,OAAO9K,EAAS6M,QAAQ8D,QAAQjtB,WAuB9E2kB,EAAM+B,EAAEW,YAAY/K,EAAS6J,QAAQ8G,QAAQoB,WACxClvB,EAAE,EAAGA,EAAEwlB,EAAIvlB,OAAQD,KACxB,SAAU0lB,GAGNuJ,EAAiBvJ,EAAOjnB,MAAQ,SAAS0wB,EAAKrP,GAC1C,IACI,IAEIqP,EAAMzJ,EAAO0J,oBAAoBrF,MAAMzY,OAAO/O,EAAWgC,KAAK4qB,IAChE,MAAO3kB,GACL,KAAMA,YAAetF,YACjB,KAAMsF,GAEd,GAAY,OAAR2kB,GAA+B,gBAARA,GACvB,KAAMlqB,OAAM,oBACVkqB,aAAezJ,GAAO0J,oBAAoBrF,QAC5CoF,EAAM,GAAIzJ,GAAO0J,oBAAoBrF,MAAMoF,IAC/CtvB,KAAKmvB,QAAQtJ,EAAOiC,MAAOwH,EAAK,SAAS3kB,EAAK2O,GAC1C,GAAI3O,EAEA,WADAsV,GAAStV,EAID,QAAR2O,IACAA,EAAM,GACV,KAAMA,EAAMuM,EAAO2J,qBAAqBtF,MAAMzY,OAAO6H,GAAQ,MAAOmW,IACpE,KAAKnW,GAASA,YAAeuM,GAAO2J,qBAAqBtF,OAErD,WADAjK,GAAS7a,MAAM,oDAAqDsiB,EAAE9oB,KAAK,IAAIinB,EAAOjnB,MAG1FqhB,GAAS,KAAM3G,KAErB,MAAO3O,GACLkQ,WAAWoF,EAASrT,KAAK5M,KAAM2K,GAAM,KAK7CsjB,EAAQpI,EAAOjnB,MAAQ,SAASuwB,EAASG,EAAKrP,GAC1C,GAAIgO,GAAQkB,GAAStJ,EAAOjnB,MAAM0wB,EAAKrP,IAGvCpc,OAAOC,iBACPD,OAAOC,eAAemqB,EAAQpI,EAAOjnB,MAAO,YAAcsD,MAAS2jB,EAAOwD,aAC1ExlB,OAAOC,eAAesrB,EAAiBvJ,EAAOjnB,MAAO,YAAcsD,MAAS+rB,EAAQpI,EAAOjnB,MAAgB,aAChH+mB,EAAIxlB,GA2CX,OANI0D,QAAOC,iBACPD,OAAOC,eAAemqB,EAAS,YAAc/rB,MAASwlB,EAAE2B,aACxDxlB,OAAOC,eAAesrB,EAAkB,YAAcltB,MAAS+rB,EAAkB,WACjFpqB,OAAOC,eAAemqB,EAAS,SAAW/rB,MAASwlB,IACnD7jB,OAAOC,eAAesrB,EAAkB,SAAWltB,MAASwlB,KAEzDuG,GAER3Q,EAAUtd,OAOjBmnB,EAAQ8G,QAAUA,CAYlB,IAAIyB,GAAS,SAAS/H,EAASjC,EAAK9mB,EAAMH,GACtCipB,EAAEniB,KAAKvF,KAAM2nB,EAASjC,EAAK9mB,GAK3BoB,KAAK4nB,UAAY,iBAOjB5nB,KAAKvB,QAAUA,QAOGixB,EAAO1uB,UAAY6C,OAAOukB,OAAOV,EAAE1mB,YAQzCqoB,SAAWlB,EAAmBkB,SAM9ClC,EAAQ8G,QAAQyB,OAASA,CAgBzB,IAAIL,GAAY,SAAS1H,EAASjC,EAAK9mB,EAAMknB,EAASC,EAAUC,EAAgBC,EAAiBxnB,GAC7FixB,EAAOnqB,KAAKvF,KAAM2nB,EAASjC,EAAK9mB,EAAMH,GAKtCuB,KAAK4nB,UAAY,oBAOjB5nB,KAAK2vB,YAAc7J,EAOnB9lB,KAAK4vB,aAAe7J,EAOpB/lB,KAAK6vB,cAAgB7J,EAOrBhmB,KAAK8vB,eAAiB7J,EAOtBjmB,KAAKuvB,oBAAsB,KAO3BvvB,KAAKwvB,qBAAuB,KAYhC,OARAH,GAAUruB,UAAY6C,OAAOukB,OAAOsH,EAAO1uB,WAM3CmmB,EAAQ8G,QAAQoB,UAAYA,EAErBlI,GAER7J,GAMHA,EAAS6M,QAAU,SAAU7M,EAAU4D,EAAMiG,GA6UzC,QAAS4I,GAAgBzK,GACjBA,EAAiB,UACjBA,EAAiB,SAAE+F,QAAQ,SAAS9C,GAChCA,EAAc,OAAIjD,EAAe,OACjCyK,EAAgBxH,KAGpBjD,EAAc,OACdA,EAAc,MAAE+F,QAAQ,SAAS9C,GAC7BA,EAAc,OAAIjD,EAAe,SA5U7C,GAAI6E,GAAU,SAAS1rB,GAOnBuB,KAAKopB,GAAK,GAAIjC,GAAQc,UAAUjoB,KAAM,KAAM,IAO5CA,KAAK+nB,IAAM/nB,KAAKopB,GAOhBppB,KAAKgwB,UAAW,EAOhBhwB,KAAKiV,OAAS,KAOdjV,KAAKiwB,SAOLjwB,KAAKkwB,WAAa,KAOlBlwB,KAAKvB,QAAUA,OAOf0xB,EAAmBhG,EAAQnpB,SAijB/B,OAviBAmpB,GAAQiG,UAAY,SAASC,GAEzB,MAA2B,gBAAhBA,GAAU,WAGQ,KAAlBA,EAAY,YAA2C,KAAfA,EAAS,MAWhElG,EAAQmG,eAAiB,SAASD,GAE9B,MAA2B,gBAAhBA,GAAU,MAAyC,gBAAhBA,GAAU,MAAyC,gBAAhBA,GAAU,UAAuC,KAAdA,EAAQ,IAWhIlG,EAAQoG,OAAS,SAASF,GAEtB,MAA2B,gBAAhBA,GAAU,YAGQ,KAAlBA,EAAY,SAAsBtvB,MAAM8hB,QAAQwN,EAAY,SAA+B,IAAzBA,EAAY,OAAEjwB,SAW/F+pB,EAAQqG,UAAY,SAASH,GAEzB,QAA2B,gBAAhBA,GAAU,MAAwC,gBAAfA,GAAS,MAAmBA,EAAS,MAWvFlG,EAAQsG,SAAW,SAASJ,GAExB,MAA0B,gBAAfA,GAAS,KAYxBF,EAAiB5f,MAAQ,WAErB,MADAvQ,MAAK+nB,IAAM/nB,KAAKopB,GACTppB,MASXmwB,EAAiBtwB,OAAS,SAAS6wB,GAC/B,GAAyB,gBAAdA,KAA2BxP,EAAKM,QAAQ3P,KAAK6e,GACpD,KAAMtrB,OAAM,sBAAsBsrB,EAOtC,OANAA,GAAUxH,MAAM,KAAKmC,QAAQ,SAASpC,GAClC,GAAIG,GAAKppB,KAAK+nB,IAAIS,SAASS,EAChB,QAAPG,GACAppB,KAAK+nB,IAAIO,SAASc,EAAK,GAAIjC,GAAQc,UAAUjoB,KAAMA,KAAK+nB,IAAKkB,IACjEjpB,KAAK+nB,IAAMqB,GACZppB,MACIA,MAUXmwB,EAAiB/H,OAAS,SAASuI,GAC/B,IAAKA,EACD,MAAO3wB,KACX,IAAKe,MAAM8hB,QAAQ8N,GAEd,CACD,GAAoB,IAAhBA,EAAKvwB,OACL,MAAOJ,KACX2wB,GAAOA,EAAKnqB,YAJZmqB,IAAQA,EASZ,KADA,GAAIzN,IAASyN,GACNzN,EAAM9iB,OAAS,GAAG,CAGrB,GAFAuwB,EAAOzN,EAAM0N,OAER7vB,MAAM8hB,QAAQ8N,GACf,KAAMvrB,OAAM,0BAA0BuoB,KAAKC,UAAU+C,GAEzD,MAAOA,EAAKvwB,OAAS,GAAG,CACpB,GAAIiwB,GAAMM,EAAKhN,OAEf,IAAIwG,EAAQiG,UAAUC,GAAM,CACxB,GAAIzc,GAAM,GAAIuT,GAAQsB,QAAQzoB,KAAMA,KAAK+nB,IAAKsI,EAAU,KAAGA,EAAa,QAAGA,EAAa,QAAGA,EAAY,QAGnGhK,IACAgK,GAAY,QACZxsB,OAAO0lB,KAAK8G,EAAY,QAAGhF,QAAQ,SAASzsB,GACxCgV,EAAI0U,SAASjC,EAAOznB,GAAQ,GAAIuoB,GAAQsB,QAAQsD,MAAM/rB,KAAM4T,EAAKhV,KAClEoB,MAGHqwB,EAAY,QACZA,EAAY,OAAEhF,QAAQ,SAASnF,GAC3B,GAAkC,OAA9BtS,EAAI4U,SAAmB,EAAVtC,EAAQ,IACrB,KAAM9gB,OAAM,oCAAoCwO,EAAIhV,KAAK,KAAKsnB,EAAQ,GAC1E,IAAIA,EAAa,SAA+B,gBAAnBA,GAAa,QACtC,KAAM9gB,OAAM,4BAA4BwO,EAAIhV,KAAK,IAAIsnB,EAAU,KACnE,IAAIuG,GAAQ,IACZ,IAA4B,gBAAjBvG,GAAW,SAAoBuG,EAAQpG,EAAOH,EAAW,QAChE,KAAM9gB,OAAM,oBAAoBwO,EAAIhV,KAAK,IAAIsnB,EAAU,KAAE,KAAKA,EAAW,MAC7EA,GAAM,GAAIiB,GAAQsB,QAAQC,MAAM1oB,KAAM4T,EAAKsS,EAAU,KAAGA,EAAa,QAAGA,EAAU,KAAGA,EAAU,KAAGA,EAAQ,GAAGA,EAAa,QAAGuG,EAAO4D,EAAY,QAC5I5D,GACAA,EAAM5tB,OAAOiC,KAAKolB,GACtBtS,EAAI0U,SAASpC,IACdlmB,KAGP,IAAI6wB,KAwBJ,IAvBIR,EAAW,OACXA,EAAW,MAAEhF,QAAQ,SAASvE,GAC1B+J,EAAO/vB,KAAKgmB,KAEhBuJ,EAAc,UACdA,EAAc,SAAEhF,QAAQ,SAASjF,GAC7ByK,EAAO/vB,KAAKslB,KAEhBiK,EAAc,UACdA,EAAc,SAAEhF,QAAQ,SAAS3F,GAC7BmL,EAAO/vB,KAAK4kB,KAIhB2K,EAAgB,aACoB,gBAAzBA,GAAgB,WAAE,GACzBzc,EAAI8W,YAAe2F,EAAgB,YAEnCzc,EAAI8W,WAAa2F,EAAgB,YAIzCrwB,KAAK+nB,IAAIO,SAAS1U,GACdid,EAAOzwB,OAAS,EAAG,CACnB8iB,EAAMpiB,KAAK6vB,GACXA,EAAOE,EACPA,EAAS,KACT7wB,KAAK+nB,IAAMnU,EACXA,EAAM,IACN,UAEJid,EAAS,SAEN,IAAI1G,EAAQoG,OAAOF,GAEtBzc,EAAM,GAAIuT,GAAQ6C,KAAKhqB,KAAMA,KAAK+nB,IAAKsI,EAAU,KAAGA,EAAa,QAAGA,EAAY,QAChFA,EAAY,OAAEhF,QAAQ,SAASxgB,GAC3B+I,EAAI0U,SAAS,GAAInB,GAAQ6C,KAAKC,MAAMjqB,KAAM4T,EAAK/I,EAAU,KAAGA,EAAQ,MACrE7K,MACHA,KAAK+nB,IAAIO,SAAS1U,OAEf,IAAIuW,EAAQqG,UAAUH,GAEzBzc,EAAM,GAAIuT,GAAQ8G,QAAQjuB,KAAMA,KAAK+nB,IAAKsI,EAAU,KAAGA,EAAa,SACpExsB,OAAO0lB,KAAK8G,EAAS,KAAGhF,QAAQ,SAASzsB,GACrC,GAAIkyB,GAAMT,EAAS,IAAEzxB,EACrBgV,GAAI0U,SAAS,GAAInB,GAAQ8G,QAAQoB,UAAUrvB,KAAM4T,EAAKhV,EAAMkyB,EAAa,QAAGA,EAAc,WAAKA,EAAoB,iBAAKA,EAAqB,gBAAGA,EAAa,WAC9J9wB,MACHA,KAAK+nB,IAAIO,SAAS1U,OAEf,CAAA,IAAIuW,EAAQsG,SAASJ,GAoCxB,KAAMjrB,OAAM,2BAA2BuoB,KAAKC,UAAUyC,GAjCtD,IADAzc,EAAM5T,KAAK+nB,IAAIe,QAAQuH,EAAS,KAAG,GAE/BA,EAAY,OAAEhF,QAAQ,SAASnF,GAC3B,GAAkC,OAA9BtS,EAAI4U,SAAmB,EAAVtC,EAAQ,IACrB,KAAM9gB,OAAM,kCAAkCwO,EAAIhV,KAAK,KAAKsnB,EAAQ,GAExE,IAAItS,EAAI8W,WAAY,CAChB,GAAIqG,IAAQ,CAKZ,IAJAnd,EAAI8W,WAAWW,QAAQ,SAAStE,GACxBb,EAAQ,IAAKa,EAAM,IAAMb,EAAQ,IAAKa,EAAM,KAC5CgK,GAAQ,MAEXA,EACD,KAAM3rB,OAAM,gCAAgCwO,EAAIhV,KAAK,KAAKsnB,EAAQ,GAAE,8BAG5E,GAAItnB,GAAOsnB,EAAU,IACjBlmB,MAAKvB,QAAkC,2BACvCG,EAAO0e,EAASkC,KAAKsB,YAAYliB,GAErC,IAAIktB,GAAQ,GAAI3E,GAAQsB,QAAQoE,eAAe7sB,KAAM4T,EAAKsS,EAAU,KAAGA,EAAU,KAAGlmB,KAAK+nB,IAAID,MAAM,IAAIlpB,EAAMsnB,EAAQ,GAAGA,EAAa,SAIjIe,EAAM,GAAIE,GAAQ+G,UAAUluB,KAAMA,KAAK+nB,IAAK7B,EAAU,KAAG4F,EAC7DA,GAAMmD,UAAYhI,EAClBjnB,KAAK+nB,IAAIO,SAASrB,GAClBrT,EAAI0U,SAASwD,IACd9rB,UAEA,KAAK,wBAAwB6R,KAAKwe,EAAS,KAC9C,KAAMjrB,OAAM,oBAAoBirB,EAAS,IAAE,mBAKnDA,EAAM,KACNzc,EAAM,KAGV+c,EAAO,KACP3wB,KAAK+nB,IAAM/nB,KAAK+nB,IAAIzC,OAIxB,MAFAtlB,MAAKgwB,UAAW,EAChBhwB,KAAKiV,OAAS,KACPjV,MA8BXmwB,EAAyB,OAAI,SAASa,EAAMC,GACxC,GAAI/L,GAAQ,GAIZ,IAAwB,gBAAb+L,GAAuB,CAI9B,GAFI3T,EAASkC,KAAKC,UACdwR,EAAW5yB,QAAQ,QAAiB,QAAE4yB,KACb,IAAzBjxB,KAAKiwB,MAAMgB,GACX,MAAOjxB,MAAKuQ,OAChBvQ,MAAKiwB,MAAMgB,IAAY,MAEpB,IAAwB,gBAAbA,GAAuB,CAErC,GAAI/B,GAAO+B,EAAS/B,IAChB5R,GAASkC,KAAKC,UACdyP,EAAO7wB,QAAQ,QAAiB,QAAE6wB,KAClCA,EAAK7b,QAAQ,OAAS,GAAK4d,EAASC,KAAK7d,QAAQ,OAAS,KAC1D6R,EAAQ,KACZ,IAAIiM,EAKJ,IAHIA,EADA7T,EAASkC,KAAKC,QACNphB,QAAQ,QAAc,KAAE6wB,EAAM+B,EAASC,MAEvChC,EAAOhK,EAAQ+L,EAASC,MACV,IAAtBlxB,KAAKiwB,MAAMkB,GACX,MAAOnxB,MAAKuQ,OAChBvQ,MAAKiwB,MAAMkB,IAAS,EAKxB,GAAIH,EAAc,SAAKA,EAAc,QAAE5wB,OAAS,EAAG,CAC/C,GAAI8vB,GACAkB,GAAY,CAEQ,iBAAbH,IAEPjxB,KAAKkwB,WAAae,EAAe,KAAGG,GAAY,EAChDlB,EAAalwB,KAAKkwB,WAClBe,EAAWA,EAAe,MACtBf,EAAW7c,QAAQ,OAAS,GAAK4d,EAAS5d,QAAQ,OAAS,KAC3D6R,EAAQ,OAEe,gBAAb+L,GAEVjxB,KAAKkwB,WACLA,EAAalwB,KAAKkwB,WAEde,EAAS5d,QAAQ,MAAQ,EAEY,MADrC6c,EAAae,EAASlQ,QAAQ,YAAa,OAEvCmP,EAAa,KACVe,EAAS5d,QAAQ,OAAS,GACjC6c,EAAae,EAASlQ,QAAQ,YAAa,IAC3CmE,EAAQ,MAERgL,EAAa,IAIrBA,EAAa,IAEjB,KAAK,GAAI/vB,GAAE,EAAGA,EAAE6wB,EAAc,QAAE5wB,OAAQD,IACpC,GAAkC,gBAAvB6wB,GAAc,QAAE7wB,GAAiB,CACxC,IAAK+vB,EACD,KAAM9qB,OAAM,+BAChB,IAAIisB,GAAiBL,EAAc,QAAE7wB,EACrC,IAAuB,qCAAnBkxB,EACA,QAKJ,IAHIA,EADA/T,EAASkC,KAAKC,QACGphB,QAAQ,QAAc,KAAE6xB,EAAYmB,GAEpCnB,EAAahL,EAAQmM,GACP,IAA/BrxB,KAAKiwB,MAAMoB,GACX,QACA,aAAYxf,KAAKwf,KAAoB/T,EAASgF,WAC9C+O,EAAiBA,EAAetQ,QAAQ,WAAY,SACxD,IAAI+N,GAAWxR,EAASkC,KAAKO,MAAMsR,EACnC,IAAiB,OAAbvC,EACA,KAAM1pB,OAAM,qBAAqBisB,EAAe,SAASJ,EAAS,oBAClE,YAAWpf,KAAKwf,GAChBrxB,KAAa,OAAE2tB,KAAKpJ,MAAMuK,EAAS,IAAKuC,GAExCrxB,KAAa,OAAEsd,EAASgF,SAAS6B,OAAOI,MAAMuK,GAAWuC,OAExDJ,GAEI,WAAWpf,KAAKof,GACrBjxB,KAAa,OAAEgxB,EAAc,QAAE7wB,GAAI8wB,EAASlQ,QAAQ,gBAAiB,SAASC,EAAIC,EAAIqQ,GAAM,MAAOrQ,GAAG,UAAU9gB,EAAE,IAAImxB,KAEtHtxB,KAAa,OAAEgxB,EAAc,QAAE7wB,GAAI8wB,EAAS,UAAU9wB,GAJtDH,KAAa,OAAEgxB,EAAc,QAAE7wB,GAMvCixB,KACApxB,KAAKkwB,WAAa,MAKtBc,EAAc,SACdhxB,KAAKH,OAAOmxB,EAAc,SAC1BA,EAAa,QACbjB,EAAgBiB,EACpB,IAAIO,GAAOvxB,KAAK+nB,GAiBhB,OAhBIiJ,GAAc,SACdntB,OAAO0lB,KAAKyH,EAAc,SAAG3F,QAAQ,SAASxC,GAC1C0I,EAAK9yB,QAAQoqB,GAAOmI,EAAc,QAAEnI,KAExCmI,EAAe,WACfhxB,KAAKooB,OAAO4I,EAAe,UAC3BhxB,KAAK+nB,IAAMwJ,GACXP,EAAY,QACZhxB,KAAKooB,OAAO4I,EAAY,OACxBhxB,KAAK+nB,IAAMwJ,GACXP,EAAe,WACfhxB,KAAKooB,OAAO4I,EAAe,UAC3BhxB,KAAK+nB,IAAMwJ,GACXP,EAAc,SACdhxB,KAAKooB,OAAO4I,EAAc,SAEvBhxB,KAAKuQ,SAShB4f,EAAiBqB,WAAa,WAE1B,GAAIlY,EACJ,IAAgB,MAAZtZ,KAAK+nB,KAAwC,gBAAlB/nB,MAAK+nB,IAAIhpB,KACpC,MAAOiB,KAEX,IAAIA,KAAK+nB,cAAeZ,GAAQc,UAE5BjoB,KAAK+nB,IAAIG,SAASmD,QAAQ,SAAS9C,GAC/BvoB,KAAK+nB,IAAMQ,EACXvoB,KAAKwxB,cACNxxB,UAEA,IAAIA,KAAK+nB,cAAeZ,GAAQsB,QAAQC,MAAO,CAElD,GAAKxH,EAAKG,KAAKxP,KAAK7R,KAAK+nB,IAAIhpB,MAiBzBiB,KAAK+nB,IAAIhpB,KAAOue,EAASS,MAAM/d,KAAK+nB,IAAIhpB,UAjBR,CAChC,IAAKmiB,EAAKM,QAAQ3P,KAAK7R,KAAK+nB,IAAIhpB,MAC5B,KAAMqG,OAAM,6BAA6BpF,KAAK+nB,IAAIriB,UAAS,GAAM,KAAK1F,KAAK+nB,IAAIhpB,KAEnF,MADAua,GAAOtZ,KAAK+nB,cAAeZ,GAAQsB,QAAQoE,eAAiB7sB,KAAK+nB,IAAIkH,UAAU3J,OAAStlB,KAAK+nB,IAAIzC,QAAQwD,QAAQ9oB,KAAK+nB,IAAIhpB,MAAM,IAE5H,KAAMqG,OAAM,kCAAkCpF,KAAK+nB,IAAIriB,UAAS,GAAM,KAAK1F,KAAK+nB,IAAIhpB,KAExF,IADAiB,KAAK+nB,IAAI2B,aAAepQ,EACpBA,YAAe6N,GAAQ6C,MAEvB,GADAhqB,KAAK+nB,IAAIhpB,KAAOue,EAASS,MAAY,KACb,WAApB/d,KAAK+nB,IAAIvpB,QAAsC,WAAf8a,EAAI9a,OACpC,KAAM4G,OAAM,mDAEf,CAAA,KAAIkU,YAAe6N,GAAQsB,SAG5B,KAAMrjB,OAAM,6BAA6BpF,KAAK+nB,IAAIriB,UAAS,GAAM,KAAK1F,KAAK+nB,IAAIhpB,KAF/EiB,MAAK+nB,IAAIhpB,KAAOua,EAAI6M,QAAU7I,EAASS,MAAa,MAAIT,EAASS,MAAe,SAQxF,GAAI/d,KAAK+nB,IAAImE,IAAK,CACd,IAAKhL,EAAKG,KAAKxP,KAAK7R,KAAK+nB,IAAIwG,SACzB,KAAMnpB,OAAM,qCAAqCpF,KAAK+nB,IAAIriB,UAAS,GAAM,KAAK1F,KAAK+nB,IAAIwG,QAC3FvuB,MAAK+nB,IAAIwG,QAAUjR,EAASS,MAAM/d,KAAK+nB,IAAIwG,SAMzB,WAApBvuB,KAAK+nB,IAAIvpB,QACTwB,KAAK+nB,IAAIkE,cAAwC1nB,KAA5BvE,KAAK+nB,IAAItpB,QAAQgzB,SAC4B,IAAlEnU,EAASQ,oBAAoBzK,QAAQrT,KAAK+nB,IAAIhpB,KAAKkf,YAEnDje,KAAK+nB,IAAItpB,QAAQgzB,QAAS,OAGzB,IAAIzxB,KAAK+nB,cAAezK,GAAS6J,QAAQ8G,QAAQyB,OAAQ,CAE5D,KAAI1vB,KAAK+nB,cAAezK,GAAS6J,QAAQ8G,QAAQoB,WAU7C,KAAMjqB,OAAM,2BAA2BpF,KAAK+nB,IAAIriB,UAAS,GARzD,OADA4T,EAAMtZ,KAAK+nB,IAAIzC,OAAOwD,QAAQ9oB,KAAK+nB,IAAI4H,aAAa,KACtCrW,YAAegE,GAAS6J,QAAQsB,SAC1C,KAAMrjB,OAAM,6BAA6BpF,KAAK+nB,IAAIriB,UAAS,GAAM,KAAK1F,KAAK+nB,IAAI4H,YAGnF,IAFA3vB,KAAK+nB,IAAIwH,oBAAsBjW,KAC/BA,EAAMtZ,KAAK+nB,IAAIzC,OAAOwD,QAAQ9oB,KAAK+nB,IAAI6H,cAAc,KACvCtW,YAAegE,GAAS6J,QAAQsB,SAC1C,KAAMrjB,OAAM,6BAA6BpF,KAAK+nB,IAAIriB,UAAS,GAAM,KAAK1F,KAAK+nB,IAAI6H,aACnF5vB,MAAK+nB,IAAIyH,qBAAuBlW,MAIjC,MACDtZ,KAAK+nB,cAAezK,GAAS6J,QAAQsB,QAAQsD,OAC7C/rB,KAAK+nB,cAAezK,GAAS6J,QAAQ+G,WACrCluB,KAAK+nB,cAAezK,GAAS6J,QAAQ6C,KAAKC,OAE5C,KAAM7kB,OAAM,sCAAuCpF,MAAQ,IAAE,KAAKA,KAAK+nB,IAE3E,OAAO/nB,MAAKuQ,SAWhB4f,EAAiB7wB,MAAQ,SAAS0gB,GAQ9B,GAPAhgB,KAAKuQ,QACAvQ,KAAKgwB,WACNhwB,KAAKwxB,aACLxxB,KAAKgwB,UAAW,EAChBhwB,KAAKiV,OAAS,MACE,OAAhBjV,KAAKiV,SACLjV,KAAKiV,OAASjV,KAAKopB,GAAG9pB,UACrB0gB,EACD,MAAOhgB,MAAKiV,MAGhB,KAAK,GAFDgU,GAAuB,gBAATjJ,GAAoBA,EAAKkJ,MAAM,KAAOlJ,EACpD+H,EAAM/nB,KAAKiV,OACN9U,EAAE,EAAGA,EAAE8oB,EAAK7oB,OAAQD,IACzB,CAAA,IAAI4nB,EAAIkB,EAAK9oB,IAER,CACD4nB,EAAM,IACN,OAHAA,EAAMA,EAAIkB,EAAK9oB,IAKvB,MAAO4nB,IASXoI,EAAiBuB,OAAS,SAAS1R,EAAMgJ,GACrC,MAAOhJ,GAAOhgB,KAAKopB,GAAGN,QAAQ9I,EAAMgJ,GAAuBhpB,KAAKopB,IAQpE+G,EAAiBzqB,SAAW,WACxB,MAAO,WASXykB,EAAQ1B,QAAU,aAKlB0B,EAAQH,KAAO,aAKfG,EAAQ8D,QAAU,aAEX9D,GAER7M,EAAUA,EAAS4D,KAAM5D,EAAS6J,SAMrC7J,EAASiO,IAAM,SAAUjO,EAAU6J,GA+E/B,QAASwK,GAAcC,GACnB,GAAIC,GAAM,CACV,QACInO,KAAM,WACF,MAAImO,GAAMD,EAAIxxB,QACDsrB,MAAM,EAAOxpB,MAAO0vB,EAAIC,OAC5BnG,MAAM,KAvE3B,GAAIH,GAAM,SAASO,EAAOgD,GACtB,IAAKhD,EAAMI,IACP,KAAM9mB,OAAM,qBA4ChB,IAtCApF,KAAK8rB,MAAQA,EAMb9rB,KAAK2rB,QAAU,GAAIxE,GAAQsC,QAAQqC,EAAMyC,QAAS,MAAM,EAAMzC,EAAMttB,QAMpEwB,KAAK4rB,UAAY,GAAIzE,GAAQsC,QAAQqC,EAAM/sB,KAAM+sB,EAAMpC,cAAc,EAAOoC,EAAMttB,QAgBlFwB,KAAKksB,OAKLroB,OAAOC,eAAe9D,KAAM,QACxB2sB,IAAK,WAAa,MAAO9oB,QAAO0lB,KAAKvpB,KAAKksB,KAAK9rB,UAI/C0uB,EAEA,IAAK,GADDvF,GAAO1lB,OAAO0lB,KAAKuF,GACd3uB,EAAI,EAAGA,EAAIopB,EAAKnpB,OAAQD,IAAK,CAClC,GAAI0oB,GAAM7oB,KAAK2rB,QAAQnB,gBAAgBjB,EAAKppB,IACxC0K,EAAM7K,KAAK4rB,UAAU9B,YAAYgF,EAASvF,EAAKppB,IACnDH,MAAKksB,IAAIlsB,KAAK2rB,QAAQlB,cAAc5B,KAC9BA,IAAKA,EAAK3mB,MAAO2I,KAK/BinB,EAAevG,EAAIvqB,SAwHvB,OAlGA8wB,GAAaljB,MAAQ,WACjB5O,KAAKksB,QAOT4F,EAAqB,OAAI,SAASjJ,GAC9B,GAAIkJ,GAAW/xB,KAAK2rB,QAAQlB,cAAczqB,KAAK2rB,QAAQ7B,YAAYjB,IAC/DmJ,EAASD,IAAY/xB,MAAKksB,GAE9B,cADOlsB,MAAKksB,IAAI6F,GACTC,GAOXF,EAAarG,QAAU,WAGnB,IAAK,GAAWwG,GAFZxG,KACAyG,EAAUruB,OAAO0lB,KAAKvpB,KAAKksB,KACtB/rB,EAAI,EAAUA,EAAI+xB,EAAQ9xB,OAAQD,IACvCsrB,EAAQ3qB,OAAOmxB,EAAMjyB,KAAKksB,IAAIgG,EAAQ/xB,KAAK0oB,IAAKoJ,EAAM/vB,OAC1D,OAAOyvB,GAAclG,IAOzBqG,EAAavI,KAAO,WAGhB,IAAK,GAFDA,MACA2I,EAAUruB,OAAO0lB,KAAKvpB,KAAKksB,KACtB/rB,EAAI,EAAGA,EAAI+xB,EAAQ9xB,OAAQD,IAChCopB,EAAKzoB,KAAKd,KAAKksB,IAAIgG,EAAQ/xB,IAAI0oB,IACnC,OAAO8I,GAAcpI,IAOzBuI,EAAa1yB,OAAS,WAGlB,IAAK,GAFDA,MACA8yB,EAAUruB,OAAO0lB,KAAKvpB,KAAKksB,KACtB/rB,EAAI,EAAGA,EAAI+xB,EAAQ9xB,OAAQD,IAChCf,EAAO0B,KAAKd,KAAKksB,IAAIgG,EAAQ/xB,IAAI+B,MACrC,OAAOyvB,GAAcvyB,IAQzB0yB,EAAazG,QAAU,SAAS8G,EAAIC,GAEhC,IAAK,GAAWH,GADZC,EAAUruB,OAAO0lB,KAAKvpB,KAAKksB,KACtB/rB,EAAI,EAAUA,EAAI+xB,EAAQ9xB,OAAQD,IACvCgyB,EAAG5sB,KAAK6sB,GAAUH,EAAMjyB,KAAKksB,IAAIgG,EAAQ/xB,KAAK+B,MAAO+vB,EAAMpJ,IAAK7oB,OASxE8xB,EAAajtB,IAAM,SAASgkB,EAAK3mB,GAC7B,GAAI6vB,GAAW/xB,KAAK2rB,QAAQ7B,YAAYjB,GACpCwJ,EAAWryB,KAAK4rB,UAAU9B,YAAY5nB,EAG1C,OAFAlC,MAAKksB,IAAIlsB,KAAK2rB,QAAQlB,cAAcsH,KAC9BlJ,IAAKkJ,EAAU7vB,MAAOmwB,GACrBryB,MAQX8xB,EAAanF,IAAM,SAAS9D,GACxB,GAAIkJ,GAAW/xB,KAAK2rB,QAAQlB,cAAczqB,KAAK2rB,QAAQ7B,YAAYjB,GACnE,IAAMkJ,IAAY/xB,MAAKksB,IAEvB,MAAOlsB,MAAKksB,IAAI6F,GAAU7vB,OAQ9B4vB,EAAaQ,IAAM,SAASzJ,GAExB,MADe7oB,MAAK2rB,QAAQlB,cAAczqB,KAAK2rB,QAAQ7B,YAAYjB,KAC/C7oB,MAAKksB,KAGtBX,GACRjO,EAAUA,EAAS6J,SAYtB7J,EAASiV,UAAY,SAASxP,EAAO4E,EAASsJ,GAI1C,OAHuB,gBAAZtJ,IAAyBA,GAAsC,gBAApBA,GAAc,MAA6C,gBAApBA,GAAc,QACvGsJ,EAAWtJ,EACXA,MAAUpjB,IACP+Y,EAASkV,SAASlV,EAASgF,SAAS6B,OAAOI,MAAMxB,GAAQ4E,EAASsJ,IAa7E3T,EAASmV,gBAAkBnV,EAASiV,UAcpCjV,EAASoV,cAAgB,SAASzB,EAAUhR,EAAU0H,GAMlD,GALI1H,GAAgC,gBAAbA,IACnB0H,EAAU1H,EACVA,EAAW,MACLA,GAAgC,kBAAbA,KACzBA,EAAW,MACXA,EACA,MAAO3C,GAASkC,KAAKO,MAA0B,gBAAbkR,GAAwBA,EAAWA,EAAe,KAAE,IAAIA,EAAe,KAAG,SAASnC,GACjH,GAAiB,OAAbA,EAEA,WADA7O,GAAS7a,MAAM,wBAGnB,KACI6a,EAAS,KAAM3C,EAASiV,UAAUzD,EAAUnH,EAASsJ,IACvD,MAAOlxB,GACLkgB,EAASlgB,KAGrB,IAAI+uB,GAAWxR,EAASkC,KAAKO,MAA0B,gBAAbkR,GAAwBA,EAAe,KAAE,IAAIA,EAAe,KAAIA,EAC1G,OAAoB,QAAbnC,EAAoB,KAAOxR,EAASiV,UAAUzD,EAAUnH,EAASsJ,IAgB5E3T,EAASqV,cAAgBrV,EAASoV,cASlCpV,EAAShf,WAAa,SAASG,GAM3B,MALAA,GAAUA,UACyC,KAAxCA,EAAkC,2BACzCA,EAAkC,yBAAI6e,EAAS+B,8BACP,KAAjC5gB,EAA2B,oBAClCA,EAA2B,kBAAI6e,EAASgC,mBACrC,GAAIhC,GAAS6M,QAAQ1rB,IAYhC6e,EAASkV,SAAW,SAASxB,EAAMrJ,EAASsJ,GAUxC,OATuB,gBAAZtJ,IAAyBA,GAAsC,gBAApBA,GAAc,MAA6C,gBAApBA,GAAc,QACvGsJ,EAAWtJ,EACXA,EAAU,MACTA,GAA8B,gBAAZA,KACnBA,EAAUrK,EAAShf,cACH,gBAAT0yB,KACPA,EAAOrD,KAAKpJ,MAAMyM,IACtBrJ,EAAgB,OAAEqJ,EAAMC,GACxBtJ,EAAQ6J,aACD7J,GAeXrK,EAASsV,aAAe,SAAS3B,EAAUhR,EAAU0H,GAMjD,GALI1H,GAAgC,gBAAbA,IACnB0H,EAAU1H,EACVA,EAAW,MACLA,GAAgC,kBAAbA,KACzBA,EAAW,MACXA,EACA,MAAO3C,GAASkC,KAAKO,MAA0B,gBAAbkR,GAAwBA,EAAWA,EAAe,KAAE,IAAIA,EAAe,KAAG,SAASnC,GACjH,GAAiB,OAAbA,EAEA,WADA7O,GAAS7a,MAAM,wBAGnB,KACI6a,EAAS,KAAM3C,EAASkV,SAAS7E,KAAKpJ,MAAMuK,GAAWnH,EAASsJ,IAClE,MAAOlxB,GACLkgB,EAASlgB,KAGrB,IAAI+uB,GAAWxR,EAASkC,KAAKO,MAA0B,gBAAbkR,GAAwBA,EAAe,KAAE,IAAIA,EAAe,KAAIA,EAC1G,OAAoB,QAAbnC,EAAoB,KAAOxR,EAASkV,SAAS7E,KAAKpJ,MAAMuK,GAAWnH,EAASsJ,IAGhF3T","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","module.exports = require(\"protobufjs\").newBuilder({})['import']({\n    \"package\": null,\n    \"syntax\": \"proto2\",\n    \"options\": {\n        \"java_package\": \"fi.kapsi.koti.jpa.nanopb\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"NanoPBOptions\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_size\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_count\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"IntSize\",\n                    \"name\": \"int_size\",\n                    \"id\": 7,\n                    \"options\": {\n                        \"default\": \"IS_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"FieldType\",\n                    \"name\": \"type\",\n                    \"id\": 3,\n                    \"options\": {\n                        \"default\": \"FT_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"long_names\",\n                    \"id\": 4,\n                    \"options\": {\n                        \"default\": true\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"packed_struct\",\n                    \"id\": 5,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"skip_message\",\n                    \"id\": 6,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"no_unions\",\n                    \"id\": 8,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"uint32\",\n                    \"name\": \"msgid\",\n                    \"id\": 9\n                }\n            ]\n        },\n        {\n            \"name\": \"machinetalk\",\n            \"fields\": [],\n            \"syntax\": \"proto2\",\n            \"messages\": [\n                {\n                    \"name\": \"PmCartesian\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 300\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"x\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"y\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"z\",\n                            \"id\": 30\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcPose\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 301\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"tran\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"a\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"b\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"c\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"u\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"v\",\n                            \"id\": 60\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"w\",\n                            \"id\": 70\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MotionCommand\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 600\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"cmd_code_t\",\n                            \"name\": \"command\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"commandNum\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"motor_offset\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"maxLimit\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"minLimit\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"pos\",\n                            \"id\": 60\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"center\",\n                            \"id\": 70\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"normal\",\n                            \"id\": 80\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"turn\",\n                            \"id\": 90\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"vel\",\n                            \"id\": 100\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"ini_maxvel\",\n                            \"id\": 110\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"MotionType\",\n                            \"name\": \"motion_type\",\n                            \"id\": 120\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"spindlesync\",\n                            \"id\": 130\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"acc\",\n                            \"id\": 140\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"backlash\",\n                            \"id\": 150\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"id\",\n                            \"id\": 160\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"termCond\",\n                            \"id\": 170\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"tolerance\",\n                            \"id\": 180\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"axis\",\n                            \"id\": 190\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"scale\",\n                            \"id\": 200\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"offset\",\n                            \"id\": 210\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"home\",\n                            \"id\": 220\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"home_final_vel\",\n                            \"id\": 230\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"search_vel\",\n                            \"id\": 240\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"latch_vel\",\n                            \"id\": 250\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"flags\",\n                            \"id\": 260\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"home_sequence\",\n                            \"id\": 270\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"volatile_home\",\n                            \"id\": 280\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"minFerror\",\n                            \"id\": 290\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"maxFerror\",\n                            \"id\": 300\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"wdWait\",\n                            \"id\": 310\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"debug\",\n                            \"id\": 320\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"now\",\n                            \"id\": 330\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"out\",\n                            \"id\": 340\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"start\",\n                            \"id\": 350\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"end\",\n                            \"id\": 360\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"mode\",\n                            \"id\": 370\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"comp_nominal\",\n                            \"id\": 380\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"comp_forward\",\n                            \"id\": 390\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"comp_reverse\",\n                            \"id\": 400\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"probe_type\",\n                            \"id\": 410\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"tool_offset\",\n                            \"id\": 420\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MotionStatus\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 601\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"cmd_code_t\",\n                            \"name\": \"commandEcho\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"commandNumEcho\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"cmd_status_t\",\n                            \"name\": \"commandStatus\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"carte_pos_fb\",\n                            \"id\": 40\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Set_G5x\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 100\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"origin\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"OriginIndex\",\n                            \"name\": \"g5x_index\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Set_G92\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 101\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"origin\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Set_Rotation\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 102\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"rotation\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Linear_Move\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 103\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"MotionType\",\n                            \"name\": \"type\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"end\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"vel\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"ini_maxvel\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"acc\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"feed_mode\",\n                            \"id\": 60\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"indexrotary\",\n                            \"id\": 70\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Probe\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 104\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"MotionType\",\n                            \"name\": \"type\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"pos\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"vel\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"ini_maxvel\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"acc\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"uint32\",\n                            \"name\": \"probe_type\",\n                            \"id\": 60\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Circular_Move\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 105\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"MotionType\",\n                            \"name\": \"type\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"end\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"center\",\n                            \"id\": 25\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"normal\",\n                            \"id\": 27\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"vel\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"ini_maxvel\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"acc\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"feed_mode\",\n                            \"id\": 60\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"turn\",\n                            \"id\": 70\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Rigid_Tap\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 106\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"pos\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"vel\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"ini_maxvel\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"acc\",\n                            \"id\": 50\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Set_Term_Cond\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 107\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"TermConditionType\",\n                            \"name\": \"cond\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"tolerance\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Set_Spindlesync\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 108\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"feed_per_revolution\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"velocity_mode\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Delay\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 109\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"delay\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Spindle_On\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 110\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"speed\",\n                            \"id\": 10,\n                            \"options\": {\n                                \"default\": 0\n                            }\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"factor\",\n                            \"id\": 20,\n                            \"options\": {\n                                \"default\": 0\n                            }\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"xoffset\",\n                            \"id\": 30,\n                            \"options\": {\n                                \"default\": 0\n                            }\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Spindle_Speed\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 111\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"speed\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"factor\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"xoffset\",\n                            \"id\": 30\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Spindle_Orient\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 112\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"orientation\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"CanonDirection\",\n                            \"name\": \"mode\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Spindle_Wait_Orient_Complete\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 113\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"timeout\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Tool_Set_Offset\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 114\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"pocket\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"toolno\",\n                            \"id\": 15\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"offset\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"diameter\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"frontangle\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"backangle\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"orientation\",\n                            \"id\": 60\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Set_Offset\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 115\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"offset\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Tool_Prepare\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 116\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"pocket\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"tool\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Tool_Set_Number\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 117\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"tool\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Set_Fo_Enable\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 118\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"mode\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Set_So_Enable\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 119\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"mode\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Set_Fh_Enable\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 120\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"mode\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Motion_Adaptive\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 121\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"status\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Operator_Display\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 122\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"id\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"display\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Operator_Text\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 123\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"id\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"text\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Operator_Error\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 124\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"id\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"error\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Motion_Set_Dout\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 125\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"uint32\",\n                            \"name\": \"index\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"start\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"end\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"now\",\n                            \"id\": 40\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Motion_Set_Aout\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 126\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"uint32\",\n                            \"name\": \"index\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"start\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"end\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"now\",\n                            \"id\": 40\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Aux_Input_Wait\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 127\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"uint32\",\n                            \"name\": \"index\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"InputType\",\n                            \"name\": \"input_type\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"WaitType\",\n                            \"name\": \"wait_type\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"timeout\",\n                            \"id\": 40\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Exec_Plugin_Ca1l\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 128\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bytes\",\n                            \"name\": \"call\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Io_Plugin_Call\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 129\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bytes\",\n                            \"name\": \"call\",\n                            \"id\": 20\n                        }\n                    ]\n                }\n            ],\n            \"enums\": [\n                {\n                    \"name\": \"ValueType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_BIT\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"HAL_FLOAT\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"HAL_S32\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"HAL_U32\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"HAL_S64\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"HAL_U64\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"STRING\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"BYTES\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"INT32\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"UINT32\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"INT64\",\n                            \"id\": 40\n                        },\n                        {\n                            \"name\": \"UINT64\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"DOUBLE\",\n                            \"id\": 60\n                        },\n                        {\n                            \"name\": \"BOOL\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"CARTESIAN\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"LEGACY_CARTESIAN\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"POSE\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"LEGACY_POSE\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalPinDirection\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_IN\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"HAL_OUT\",\n                            \"id\": 32\n                        },\n                        {\n                            \"name\": \"HAL_IO\",\n                            \"id\": 48\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalParamDirection\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_RO\",\n                            \"id\": 64\n                        },\n                        {\n                            \"name\": \"HAL_RW\",\n                            \"id\": 192\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalFunctType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"FS_LEGACY_THREADFUNC\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"FS_XTHREADFUNC\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"FS_USERLAND\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ObjectType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_OBJECT_INVALID\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"HAL_PIN\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"HAL_SIGNAL\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"HAL_PARAM\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"HAL_THREAD\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"HAL_FUNCT\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"HAL_COMPONENT\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"HAL_VTABLE\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"HAL_INST\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"HAL_RING\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"HAL_GROUP\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"HAL_PLUG\",\n                            \"id\": 12\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"msgidType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"MSGID_MAX\",\n                            \"id\": 4000\n                        },\n                        {\n                            \"name\": \"MSGID_ROUTE_DELIMITER\",\n                            \"id\": 4001\n                        },\n                        {\n                            \"name\": \"MSGID_ERROR_MSG\",\n                            \"id\": 4002\n                        },\n                        {\n                            \"name\": \"MSGID_BLOB\",\n                            \"id\": 4003\n                        },\n                        {\n                            \"name\": \"MSGID_STRING\",\n                            \"id\": 4004\n                        },\n                        {\n                            \"name\": \"MSGID_HOP\",\n                            \"id\": 4005\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"socketType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ST_ZMQ_PAIR\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_PUB\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_SUB\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_REQ\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_REP\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_DEALER\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_ROUTER\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_PULL\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_PUSH\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_XPUB\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_XSUB\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_STREAM\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_INVALID\",\n                            \"id\": 15\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"securityMechanism\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"SM_ZMQ_NONE\",\n                            \"id\": -1\n                        },\n                        {\n                            \"name\": \"SM_ZMQ_NULL\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"SM_ZMQ_PLAIN\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"SM_ZMQ_CURVE\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"RCS_STATUS\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"UNINITIALIZED_STATUS\",\n                            \"id\": -1\n                        },\n                        {\n                            \"name\": \"RCS_DONE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"RCS_EXEC\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"RCS_ERROR\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"RCS_RECEIVED\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MsgOrigin\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"MSG_KERNEL\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"MSG_RTUSER\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"MSG_ULAPI\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MsgLevel\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"RTAPI_MSG_NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_ERR\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_WARN\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_INFO\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_DBG\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_ALL\",\n                            \"id\": 5\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginDetail\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"UNIX_SIGNAL\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"INSTANCE_SHUTDOWN\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"ZMQ_SOCKET\",\n                            \"id\": 70\n                        },\n                        {\n                            \"name\": \"NML_LAYER\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"RCS_LAYER\",\n                            \"id\": 90\n                        },\n                        {\n                            \"name\": \"CMS_LAYER\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"IP_LAYER\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"TCP_LAYER\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"PGM_LAYER\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"PROCESS\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"USER_THREAD\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"RT_THREAD\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"COMPONENT\",\n                            \"id\": 40\n                        },\n                        {\n                            \"name\": \"THREAD_FUNCTION\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"COMPONENT_INIT\",\n                            \"id\": 60\n                        },\n                        {\n                            \"name\": \"COMPONENT_EXIT\",\n                            \"id\": 70\n                        },\n                        {\n                            \"name\": \"GROUP\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"PIN\",\n                            \"id\": 90\n                        },\n                        {\n                            \"name\": \"SIGNAL\",\n                            \"id\": 100\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Severity\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"S_INFORMATIONAL\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"S_WARNING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"S_FAIL\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"StatusType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ENQUEUED\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"PROCESSING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"COMPLETE\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"FAILED\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ReplyType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ON_RECEPTION\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ON_QUEUED\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ON_COMPLETION\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ALL_STEPS\",\n                            \"id\": 255\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ST_LOGGING\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ST_CONFIG\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ST_REDIS\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ST_HTTP\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ST_HTTPS\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ST_WEBSOCKET\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ST_WEBSOCKETS\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ST_RTAPI_COMMAND\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ST_STP_HALGROUP\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"ST_STP_HALRCOMP\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"ST_STP_INTERP\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"ST_STP_TASK\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"ST_HAL_RCOMMAND\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"ST_TASK_COMMAND\",\n                            \"id\": 14\n                        },\n                        {\n                            \"name\": \"ST_INTERP_COMMAND\",\n                            \"id\": 15\n                        },\n                        {\n                            \"name\": \"ST_MESSAGEBUS_COMMAND\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"ST_MESSAGEBUS_RESPONSE\",\n                            \"id\": 17\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceAPI\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"SA_ZMQ_PROTOBUF\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"SA_WS_JSON\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ContainerType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"MT_RTMESSAGE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"MT_MOTCMD\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"MT_MOTSTATUS\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTCMD\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTSTATUS\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"MT_WOU\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"MT_HALUPDATE\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_MESSAGE\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"MT_LOG_MESSAGE\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"MT_PREVIEW\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"MT_PROGRESS\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"MT_INTERP_STAT\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"MT_SYSLOG\",\n                            \"id\": 18\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_NML\",\n                            \"id\": 19\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTCONFIG\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"MT_STP_UPDATE_FULL\",\n                            \"id\": 26\n                        },\n                        {\n                            \"name\": \"MT_STP_UPDATE\",\n                            \"id\": 28\n                        },\n                        {\n                            \"name\": \"MT_STP_NOGROUP\",\n                            \"id\": 27\n                        },\n                        {\n                            \"name\": \"MT_SHUTDOWN\",\n                            \"id\": 45\n                        },\n                        {\n                            \"name\": \"MT_CONFIRM_SHUTDOWN\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE0\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE1\",\n                            \"id\": 31\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE2\",\n                            \"id\": 32\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE3\",\n                            \"id\": 33\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE4\",\n                            \"id\": 34\n                        },\n                        {\n                            \"name\": \"MT_ASCII\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"MT_UNICODE\",\n                            \"id\": 101\n                        },\n                        {\n                            \"name\": \"MT_GCODE\",\n                            \"id\": 102\n                        },\n                        {\n                            \"name\": \"MT_PYTHON\",\n                            \"id\": 103\n                        },\n                        {\n                            \"name\": \"MT_PICKLE\",\n                            \"id\": 104\n                        },\n                        {\n                            \"name\": \"MT_TCL\",\n                            \"id\": 105\n                        },\n                        {\n                            \"name\": \"MT_XML\",\n                            \"id\": 106\n                        },\n                        {\n                            \"name\": \"MT_JSON\",\n                            \"id\": 107\n                        },\n                        {\n                            \"name\": \"MT_JPEG\",\n                            \"id\": 108\n                        },\n                        {\n                            \"name\": \"MT_PNG\",\n                            \"id\": 109\n                        },\n                        {\n                            \"name\": \"MT_TIFF\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"MT_POSTSCRIPT\",\n                            \"id\": 111\n                        },\n                        {\n                            \"name\": \"MT_SVG\",\n                            \"id\": 112\n                        },\n                        {\n                            \"name\": \"MT_ZMQ_SUBSCRIBE\",\n                            \"id\": 150\n                        },\n                        {\n                            \"name\": \"MT_ZMQ_UNSUBSCRIBE\",\n                            \"id\": 151\n                        },\n                        {\n                            \"name\": \"MT_PING\",\n                            \"id\": 210\n                        },\n                        {\n                            \"name\": \"MT_PING_ACKNOWLEDGE\",\n                            \"id\": 215\n                        },\n                        {\n                            \"name\": \"MT_REJECT\",\n                            \"id\": 220\n                        },\n                        {\n                            \"name\": \"MT_DONE\",\n                            \"id\": 240\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_REQUEST\",\n                            \"id\": 250\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_ANNOUNCEMENT\",\n                            \"id\": 251\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_PROBE\",\n                            \"id\": 252\n                        },\n                        {\n                            \"name\": \"MT_MESSAGEBUS_NO_DESTINATION\",\n                            \"id\": 255\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND\",\n                            \"id\": 256\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND_CONFIRM\",\n                            \"id\": 257\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND_REJECT\",\n                            \"id\": 258\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_SET\",\n                            \"id\": 259\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_SET_REJECT\",\n                            \"id\": 260\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_ACK\",\n                            \"id\": 263\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_SET\",\n                            \"id\": 265\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_SET_REJECT\",\n                            \"id\": 266\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_GET\",\n                            \"id\": 267\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_GET_REJECT\",\n                            \"id\": 268\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_CREATE\",\n                            \"id\": 269\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_CREATE_REJECT\",\n                            \"id\": 270\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DELETE\",\n                            \"id\": 271\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DELETE_REJECT\",\n                            \"id\": 272\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_ACK\",\n                            \"id\": 273\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_ERROR\",\n                            \"id\": 274\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DESCRIBE\",\n                            \"id\": 276\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DESCRIPTION\",\n                            \"id\": 277\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_FULL_UPDATE\",\n                            \"id\": 288\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_INCREMENTAL_UPDATE\",\n                            \"id\": 289\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_ERROR\",\n                            \"id\": 290\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND\",\n                            \"id\": 294\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND_CONFIRM\",\n                            \"id\": 295\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND_REJECT\",\n                            \"id\": 296\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_FULL_UPDATE\",\n                            \"id\": 297\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_INCREMENTAL_UPDATE\",\n                            \"id\": 298\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_ERROR\",\n                            \"id\": 299\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_EXIT\",\n                            \"id\": 300\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_PING\",\n                            \"id\": 301\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_LOADRT\",\n                            \"id\": 302\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_LOG\",\n                            \"id\": 303\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_UNLOADRT\",\n                            \"id\": 305\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_NEWINST\",\n                            \"id\": 306\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_NEWTHREAD\",\n                            \"id\": 307\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_DELTHREAD\",\n                            \"id\": 308\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_CALLFUNC\",\n                            \"id\": 309\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_REPLY\",\n                            \"id\": 310\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_DELINST\",\n                            \"id\": 311\n                        },\n                        {\n                            \"name\": \"MT_LIST_APPLICATIONS\",\n                            \"id\": 350\n                        },\n                        {\n                            \"name\": \"MT_DESCRIBE_APPLICATION\",\n                            \"id\": 351\n                        },\n                        {\n                            \"name\": \"MT_RETRIEVE_APPLICATION\",\n                            \"id\": 352\n                        },\n                        {\n                            \"name\": \"MT_APPLICATION_DETAIL\",\n                            \"id\": 353\n                        },\n                        {\n                            \"name\": \"MT_ERROR\",\n                            \"id\": 360\n                        },\n                        {\n                            \"name\": \"MT_FULL_UPDATE\",\n                            \"id\": 370\n                        },\n                        {\n                            \"name\": \"MT_INCREMENTAL_UPDATE\",\n                            \"id\": 371\n                        },\n                        {\n                            \"name\": \"MT_TASK_REPLY\",\n                            \"id\": 400\n                        },\n                        {\n                            \"name\": \"MT_TICKET_UPDATE\",\n                            \"id\": 401\n                        },\n                        {\n                            \"name\": \"MT_CREDIT_UPDATE\",\n                            \"id\": 450\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_LOWER\",\n                            \"id\": 1000\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_UPPER\",\n                            \"id\": 1100\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ABORT\",\n                            \"id\": 1001\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_AXIS_ABORT\",\n                            \"id\": 1002\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE\",\n                            \"id\": 1003\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE\",\n                            \"id\": 1004\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE_AMPLIFIER\",\n                            \"id\": 1005\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE_AMPLIFIER\",\n                            \"id\": 1006\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE_WATCHDOG\",\n                            \"id\": 1007\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE_WATCHDOG\",\n                            \"id\": 1008\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ACTIVATE_JOINT\",\n                            \"id\": 1009\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DEACTIVATE_JOINT\",\n                            \"id\": 1010\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_PAUSE\",\n                            \"id\": 1011\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_RESUME\",\n                            \"id\": 1012\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_STEP\",\n                            \"id\": 1013\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FREE\",\n                            \"id\": 1014\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COORD\",\n                            \"id\": 1015\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_TELEOP\",\n                            \"id\": 1016\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_SCALE\",\n                            \"id\": 1017\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SS_ENABLE\",\n                            \"id\": 1018\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FEED_SCALE\",\n                            \"id\": 1019\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FS_ENABLE\",\n                            \"id\": 1020\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FH_ENABLE\",\n                            \"id\": 1021\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_AF_ENABLE\",\n                            \"id\": 1022\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_OVERRIDE_LIMITS\",\n                            \"id\": 1023\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_HOME\",\n                            \"id\": 1024\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_UNHOME\",\n                            \"id\": 1025\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_CONT\",\n                            \"id\": 1026\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_INCR\",\n                            \"id\": 1027\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_ABS\",\n                            \"id\": 1028\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_LINE\",\n                            \"id\": 1029\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_CIRCLE\",\n                            \"id\": 1030\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_TELEOP_VECTOR\",\n                            \"id\": 1031\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_CLEAR_PROBE_FLAGS\",\n                            \"id\": 1032\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_PROBE\",\n                            \"id\": 1033\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_RIGID_TAP\",\n                            \"id\": 1034\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_POSITION_LIMITS\",\n                            \"id\": 1035\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_BACKLASH\",\n                            \"id\": 1036\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MIN_FERROR\",\n                            \"id\": 1037\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MAX_FERROR\",\n                            \"id\": 1038\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_VEL\",\n                            \"id\": 1039\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_VEL_LIMIT\",\n                            \"id\": 1040\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_VEL_LIMIT\",\n                            \"id\": 1041\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_ACC_LIMIT\",\n                            \"id\": 1042\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_ACC\",\n                            \"id\": 1043\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_TERM_COND\",\n                            \"id\": 1044\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_NUM_AXES\",\n                            \"id\": 1045\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_WORLD_HOME\",\n                            \"id\": 1046\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_HOMING_PARAMS\",\n                            \"id\": 1047\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_DEBUG\",\n                            \"id\": 1048\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_DOUT\",\n                            \"id\": 1049\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_AOUT\",\n                            \"id\": 1050\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_SPINDLESYNC\",\n                            \"id\": 1051\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_ON\",\n                            \"id\": 1052\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_OFF\",\n                            \"id\": 1053\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_INCREASE\",\n                            \"id\": 1054\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_DECREASE\",\n                            \"id\": 1055\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 1056\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 1057\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MOTOR_OFFSET\",\n                            \"id\": 1058\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_COMP\",\n                            \"id\": 1059\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_OFFSET\",\n                            \"id\": 1060\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_OK\",\n                            \"id\": 1061\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_UNKNOWN_COMMAND\",\n                            \"id\": 1062\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_INVALID_COMMAND\",\n                            \"id\": 1063\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_INVALID_PARAMS\",\n                            \"id\": 1064\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_BAD_EXEC\",\n                            \"id\": 1065\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_DISABLED\",\n                            \"id\": 1066\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_FREE\",\n                            \"id\": 1067\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_TELEOP\",\n                            \"id\": 1068\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_COORD\",\n                            \"id\": 1069\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOINT_FLAG\",\n                            \"id\": 1070\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_FLAG\",\n                            \"id\": 1071\n                        },\n                        {\n                            \"name\": \"MT_PRU_FIRMWARE\",\n                            \"id\": 2048\n                        },\n                        {\n                            \"name\": \"MT_MESA_5I20_FIRMWARE\",\n                            \"id\": 3000\n                        },\n                        {\n                            \"name\": \"MT_BLOB\",\n                            \"id\": 4000\n                        },\n                        {\n                            \"name\": \"MT_TEST1\",\n                            \"id\": 5001\n                        },\n                        {\n                            \"name\": \"MT_TEST2\",\n                            \"id\": 5002\n                        },\n                        {\n                            \"name\": \"MT_TEST3\",\n                            \"id\": 5003\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_LOWER\",\n                            \"id\": 10000\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_UPPER\",\n                            \"id\": 13000\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_ERROR\",\n                            \"id\": 10011\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_TEXT\",\n                            \"id\": 10012\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_DISPLAY\",\n                            \"id\": 10013\n                        },\n                        {\n                            \"name\": \"MT_EMC_NULL\",\n                            \"id\": 10021\n                        },\n                        {\n                            \"name\": \"MT_EMC_SET_DEBUG\",\n                            \"id\": 10022\n                        },\n                        {\n                            \"name\": \"MT_EMC_SYSTEM_CMD\",\n                            \"id\": 10030\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_AXIS\",\n                            \"id\": 10101\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_UNITS\",\n                            \"id\": 10102\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MIN_POSITION_LIMIT\",\n                            \"id\": 10107\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MAX_POSITION_LIMIT\",\n                            \"id\": 10108\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_START_CHANGE\",\n                            \"id\": 1110\n                        },\n                        {\n                            \"name\": \"MT_EMC_EXEC_PLUGIN_CALL\",\n                            \"id\": 1112\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_PLUGIN_CALL\",\n                            \"id\": 1113\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_FERROR\",\n                            \"id\": 10111\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_HOMING_PARAMS\",\n                            \"id\": 10112\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MIN_FERROR\",\n                            \"id\": 10115\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MAX_VELOCITY\",\n                            \"id\": 10116\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_INIT\",\n                            \"id\": 10118\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_HALT\",\n                            \"id\": 10119\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ABORT\",\n                            \"id\": 10120\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ENABLE\",\n                            \"id\": 10121\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_DISABLE\",\n                            \"id\": 10122\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_HOME\",\n                            \"id\": 10123\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_UNHOME\",\n                            \"id\": 10135\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_JOG\",\n                            \"id\": 10124\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_INCR_JOG\",\n                            \"id\": 10125\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ABS_JOG\",\n                            \"id\": 10126\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ACTIVATE\",\n                            \"id\": 10127\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_DEACTIVATE\",\n                            \"id\": 10128\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_OVERRIDE_LIMITS\",\n                            \"id\": 10129\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_LOAD_COMP\",\n                            \"id\": 10131\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_BACKLASH\",\n                            \"id\": 10134\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_STAT\",\n                            \"id\": 10199\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_AXES\",\n                            \"id\": 10201\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_UNITS\",\n                            \"id\": 10202\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_CYCLE_TIME\",\n                            \"id\": 10203\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MODE\",\n                            \"id\": 10204\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_VELOCITY\",\n                            \"id\": 10205\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_ACCELERATION\",\n                            \"id\": 10206\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MAX_VELOCITY\",\n                            \"id\": 10207\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MAX_ACCELERATION\",\n                            \"id\": 10208\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SCALE\",\n                            \"id\": 10209\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MOTION_ID\",\n                            \"id\": 10210\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_INIT\",\n                            \"id\": 10211\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_HALT\",\n                            \"id\": 10212\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_ENABLE\",\n                            \"id\": 10213\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_DISABLE\",\n                            \"id\": 10214\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_ABORT\",\n                            \"id\": 10215\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_PAUSE\",\n                            \"id\": 10216\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_STEP\",\n                            \"id\": 10217\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_RESUME\",\n                            \"id\": 10218\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_DELAY\",\n                            \"id\": 10219\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_LINEAR_MOVE\",\n                            \"id\": 10220\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_CIRCULAR_MOVE\",\n                            \"id\": 10221\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TERM_COND\",\n                            \"id\": 10222\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_OFFSET\",\n                            \"id\": 10223\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_G5X\",\n                            \"id\": 10224\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_HOME\",\n                            \"id\": 10225\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_ROTATION\",\n                            \"id\": 10226\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_G92\",\n                            \"id\": 10227\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_CLEAR_PROBE_TRIPPED_FLAG\",\n                            \"id\": 10228\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_PROBE\",\n                            \"id\": 10229\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TELEOP_ENABLE\",\n                            \"id\": 10230\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TELEOP_VECTOR\",\n                            \"id\": 10231\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SPINDLESYNC\",\n                            \"id\": 10232\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SPINDLE_SCALE\",\n                            \"id\": 10233\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_FO_ENABLE\",\n                            \"id\": 10234\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SO_ENABLE\",\n                            \"id\": 10235\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_FH_ENABLE\",\n                            \"id\": 10236\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_RIGID_TAP\",\n                            \"id\": 10237\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_RAPID_SCALE\",\n                            \"id\": 10238\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_STAT\",\n                            \"id\": 10299\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_INIT\",\n                            \"id\": 10301\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_HALT\",\n                            \"id\": 10302\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_ABORT\",\n                            \"id\": 10303\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_SET_AOUT\",\n                            \"id\": 10304\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_SET_DOUT\",\n                            \"id\": 10305\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_ADAPTIVE\",\n                            \"id\": 10306\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_ORIENT\",\n                            \"id\": 10317\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_WAIT_ORIENT_COMPLETE\",\n                            \"id\": 10318\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_STAT\",\n                            \"id\": 10399\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_INIT\",\n                            \"id\": 10501\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_HALT\",\n                            \"id\": 10502\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_ABORT\",\n                            \"id\": 10503\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_SET_MODE\",\n                            \"id\": 10504\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_SET_STATE\",\n                            \"id\": 10505\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_OPEN\",\n                            \"id\": 10506\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RUN\",\n                            \"id\": 10507\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_READ\",\n                            \"id\": 10508\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_EXECUTE\",\n                            \"id\": 10509\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_PAUSE\",\n                            \"id\": 10510\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_STEP\",\n                            \"id\": 10511\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RESUME\",\n                            \"id\": 10512\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_END\",\n                            \"id\": 10513\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_CLOSE\",\n                            \"id\": 10514\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_INIT\",\n                            \"id\": 10515\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SYNCH\",\n                            \"id\": 10516\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SET_OPTIONAL_STOP\",\n                            \"id\": 10517\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SET_BLOCK_DELETE\",\n                            \"id\": 10518\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_OPTIONAL_STOP\",\n                            \"id\": 10519\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RESET\",\n                            \"id\": 10520\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_REPLY\",\n                            \"id\": 10530\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_STAT\",\n                            \"id\": 10599\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_INIT\",\n                            \"id\": 11101\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_HALT\",\n                            \"id\": 11102\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_ABORT\",\n                            \"id\": 11103\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_PREPARE\",\n                            \"id\": 11104\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_LOAD\",\n                            \"id\": 11105\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_UNLOAD\",\n                            \"id\": 11106\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_LOAD_TOOL_TABLE\",\n                            \"id\": 11107\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_SET_OFFSET\",\n                            \"id\": 11108\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_SET_NUMBER\",\n                            \"id\": 11109\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_UPDATE_TOOL_TABLE\",\n                            \"id\": 11110\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_STAT\",\n                            \"id\": 11199\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_ON\",\n                            \"id\": 11206\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_OFF\",\n                            \"id\": 11207\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_RESET\",\n                            \"id\": 11208\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_INPUT_WAIT\",\n                            \"id\": 11209\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_STAT\",\n                            \"id\": 11299\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_ON\",\n                            \"id\": 11304\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_OFF\",\n                            \"id\": 11305\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_INCREASE\",\n                            \"id\": 11309\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_DECREASE\",\n                            \"id\": 11310\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_CONSTANT\",\n                            \"id\": 11311\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 11312\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 11313\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_SPEED\",\n                            \"id\": 11316\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_STAT\",\n                            \"id\": 11399\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_MIST_ON\",\n                            \"id\": 11404\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_MIST_OFF\",\n                            \"id\": 11405\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_FLOOD_ON\",\n                            \"id\": 11406\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_FLOOD_OFF\",\n                            \"id\": 11407\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_STAT\",\n                            \"id\": 11499\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_ON\",\n                            \"id\": 11504\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_OFF\",\n                            \"id\": 11505\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_STAT\",\n                            \"id\": 11599\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_INIT\",\n                            \"id\": 11601\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_HALT\",\n                            \"id\": 11602\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_ABORT\",\n                            \"id\": 11603\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_SET_CYCLE_TIME\",\n                            \"id\": 11604\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_STAT\",\n                            \"id\": 11699\n                        },\n                        {\n                            \"name\": \"MT_EMC_INIT\",\n                            \"id\": 11901\n                        },\n                        {\n                            \"name\": \"MT_EMC_HALT\",\n                            \"id\": 11902\n                        },\n                        {\n                            \"name\": \"MT_EMC_ABORT\",\n                            \"id\": 11903\n                        },\n                        {\n                            \"name\": \"MT_EMC_STAT\",\n                            \"id\": 11999\n                        },\n                        {\n                            \"name\": \"MT_EMCSTAT_FULL_UPDATE\",\n                            \"id\": 12500\n                        },\n                        {\n                            \"name\": \"MT_EMCSTAT_INCREMENTAL_UPDATE\",\n                            \"id\": 12501\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_ERROR\",\n                            \"id\": 12510\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_TEXT\",\n                            \"id\": 12511\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_DISPLAY\",\n                            \"id\": 12512\n                        },\n                        {\n                            \"name\": \"MT_EMCCMD_EXECUTED\",\n                            \"id\": 12520\n                        },\n                        {\n                            \"name\": \"MT_EMCCMD_COMPLETED\",\n                            \"id\": 12521\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_FULL_UPDATE\",\n                            \"id\": 12600\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_INCREMENTAL_UPDATE\",\n                            \"id\": 12601\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_ERROR\",\n                            \"id\": 12602\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_START\",\n                            \"id\": 12610\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_TERMINATE\",\n                            \"id\": 12611\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_KILL\",\n                            \"id\": 12612\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_WRITE_STDIN\",\n                            \"id\": 12613\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_CALL\",\n                            \"id\": 12614\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_SHUTDOWN\",\n                            \"id\": 12615\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_SET\",\n                            \"id\": 12616\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginIndex\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ORIGIN_UNKNOWN\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ORIGIN_G54\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ORIGIN_G55\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ORIGIN_G56\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ORIGIN_G57\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ORIGIN_G58\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_1\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_2\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_3\",\n                            \"id\": 9\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TermConditionType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"_EMC_TRAJ_TERM_COND_STOP\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_EMC_TRAJ_TERM_COND_BLEND\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"CanonDirection\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"_CANON_STOPPED\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_CANON_CLOCKWISE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"_CANON_COUNTERCLOCKWISE\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"InputType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"_ANALOG_INPUT\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"_DIGITAL_INPUT\",\n                            \"id\": 1\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"WaitType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"IMMEDIATE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"RISE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"FALL\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"BE_HIGH\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"BE_LOW\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"InterpreterStateType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"INTERP_IDLE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"INTERP_RUNNING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"INTERP_SYNC_WAIT\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"INTERP_PAUSED\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"INTERP_QUEUE_WAIT\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"INTERP_ABORT_WAIT\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"INTERP_STATE_UNSET\",\n                            \"id\": 99\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MotionType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_TRAVERSE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_FEED\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_ARC\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_TOOLCHANGE\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_PROBING\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_INDEXROTARY\",\n                            \"id\": 6\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"cmd_code_t\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMCMOT_ABORT\",\n                            \"id\": 4000\n                        },\n                        {\n                            \"name\": \"EMCMOT_AXIS_ABORT\",\n                            \"id\": 4001\n                        },\n                        {\n                            \"name\": \"EMCMOT_ENABLE\",\n                            \"id\": 4002\n                        },\n                        {\n                            \"name\": \"EMCMOT_DISABLE\",\n                            \"id\": 4003\n                        },\n                        {\n                            \"name\": \"EMCMOT_ENABLE_AMPLIFIER\",\n                            \"id\": 4004\n                        },\n                        {\n                            \"name\": \"EMCMOT_DISABLE_AMPLIFIER\",\n                            \"id\": 4005\n                        },\n                        {\n                            \"name\": \"EMCMOT_ENABLE_WATCHDOG\",\n                            \"id\": 4006\n                        },\n                        {\n                            \"name\": \"EMCMOT_DISABLE_WATCHDOG\",\n                            \"id\": 4007\n                        },\n                        {\n                            \"name\": \"EMCMOT_ACTIVATE_JOINT\",\n                            \"id\": 4008\n                        },\n                        {\n                            \"name\": \"EMCMOT_DEACTIVATE_JOINT\",\n                            \"id\": 4009\n                        },\n                        {\n                            \"name\": \"EMCMOT_PAUSE\",\n                            \"id\": 4010\n                        },\n                        {\n                            \"name\": \"EMCMOT_RESUME\",\n                            \"id\": 4011\n                        },\n                        {\n                            \"name\": \"EMCMOT_STEP\",\n                            \"id\": 4012\n                        },\n                        {\n                            \"name\": \"EMCMOT_FREE\",\n                            \"id\": 4013\n                        },\n                        {\n                            \"name\": \"EMCMOT_COORD\",\n                            \"id\": 4014\n                        },\n                        {\n                            \"name\": \"EMCMOT_TELEOP\",\n                            \"id\": 4015\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_SCALE\",\n                            \"id\": 4016\n                        },\n                        {\n                            \"name\": \"EMCMOT_SS_ENABLE\",\n                            \"id\": 4017\n                        },\n                        {\n                            \"name\": \"EMCMOT_FEED_SCALE\",\n                            \"id\": 4018\n                        },\n                        {\n                            \"name\": \"EMCMOT_FS_ENABLE\",\n                            \"id\": 4019\n                        },\n                        {\n                            \"name\": \"EMCMOT_FH_ENABLE\",\n                            \"id\": 4020\n                        },\n                        {\n                            \"name\": \"EMCMOT_AF_ENABLE\",\n                            \"id\": 4021\n                        },\n                        {\n                            \"name\": \"EMCMOT_OVERRIDE_LIMITS\",\n                            \"id\": 4022\n                        },\n                        {\n                            \"name\": \"EMCMOT_HOME\",\n                            \"id\": 4023\n                        },\n                        {\n                            \"name\": \"EMCMOT_UNHOME\",\n                            \"id\": 4024\n                        },\n                        {\n                            \"name\": \"EMCMOT_JOG_CONT\",\n                            \"id\": 4025\n                        },\n                        {\n                            \"name\": \"EMCMOT_JOG_INCR\",\n                            \"id\": 4026\n                        },\n                        {\n                            \"name\": \"EMCMOT_JOG_ABS\",\n                            \"id\": 4027\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_LINE\",\n                            \"id\": 4028\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_CIRCLE\",\n                            \"id\": 4029\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_TELEOP_VECTOR\",\n                            \"id\": 4030\n                        },\n                        {\n                            \"name\": \"EMCMOT_CLEAR_PROBE_FLAGS\",\n                            \"id\": 4031\n                        },\n                        {\n                            \"name\": \"EMCMOT_PROBE\",\n                            \"id\": 4032\n                        },\n                        {\n                            \"name\": \"EMCMOT_RIGID_TAP\",\n                            \"id\": 4033\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_POSITION_LIMITS\",\n                            \"id\": 4034\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_BACKLASH\",\n                            \"id\": 4035\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_MIN_FERROR\",\n                            \"id\": 4036\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_MAX_FERROR\",\n                            \"id\": 4037\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_VEL\",\n                            \"id\": 4038\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_VEL_LIMIT\",\n                            \"id\": 4039\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_JOINT_VEL_LIMIT\",\n                            \"id\": 4040\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_JOINT_ACC_LIMIT\",\n                            \"id\": 4041\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_ACC\",\n                            \"id\": 4042\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_TERM_COND\",\n                            \"id\": 4043\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_NUM_AXES\",\n                            \"id\": 4044\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_WORLD_HOME\",\n                            \"id\": 4045\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_HOMING_PARAMS\",\n                            \"id\": 4046\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_DEBUG\",\n                            \"id\": 4047\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_DOUT\",\n                            \"id\": 4048\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_AOUT\",\n                            \"id\": 4049\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_SPINDLESYNC\",\n                            \"id\": 4050\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_ON\",\n                            \"id\": 4051\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_OFF\",\n                            \"id\": 4052\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_INCREASE\",\n                            \"id\": 4053\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_DECREASE\",\n                            \"id\": 4054\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 4055\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 4056\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_MOTOR_OFFSET\",\n                            \"id\": 4057\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_JOINT_COMP\",\n                            \"id\": 4058\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_OFFSET\",\n                            \"id\": 4059\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"cmd_status_t\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMCMOT_COMMAND_OK\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"EMCMOT_COMMAND_UNKNOWN_COMMAND\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMCMOT_COMMAND_INVALID_COMMAND\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"EMCMOT_COMMAND_INVALID_PARAMS\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"EMCMOT_COMMAND_BAD_EXEC\",\n                            \"id\": 4\n                        }\n                    ]\n                }\n            ],\n            \"isNamespace\": true\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"FieldType\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"FT_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"FT_CALLBACK\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"FT_POINTER\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"FT_STATIC\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"FT_IGNORE\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"IntSize\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"IS_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"IS_8\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"IS_16\",\n                    \"id\": 16\n                },\n                {\n                    \"name\": \"IS_32\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"IS_64\",\n                    \"id\": 64\n                }\n            ]\n        }\n    ],\n    \"isNamespace\": true\n}).build();","module.exports = require(\"protobufjs\").newBuilder({})['import']({\n    \"package\": null,\n    \"syntax\": \"proto2\",\n    \"options\": {\n        \"java_package\": \"fi.kapsi.koti.jpa.nanopb\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"NanoPBOptions\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_size\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_count\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"IntSize\",\n                    \"name\": \"int_size\",\n                    \"id\": 7,\n                    \"options\": {\n                        \"default\": \"IS_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"FieldType\",\n                    \"name\": \"type\",\n                    \"id\": 3,\n                    \"options\": {\n                        \"default\": \"FT_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"long_names\",\n                    \"id\": 4,\n                    \"options\": {\n                        \"default\": true\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"packed_struct\",\n                    \"id\": 5,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"skip_message\",\n                    \"id\": 6,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"no_unions\",\n                    \"id\": 8,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"uint32\",\n                    \"name\": \"msgid\",\n                    \"id\": 9\n                }\n            ]\n        },\n        {\n            \"name\": \"machinetalk\",\n            \"fields\": [],\n            \"syntax\": \"proto2\",\n            \"messages\": [\n                {\n                    \"name\": \"File\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 200\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"FileContent\",\n                            \"name\": \"encoding\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bytes\",\n                            \"name\": \"blob\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Application\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 201\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"description\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"ApplicationType\",\n                            \"name\": \"type\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"weburi\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"File\",\n                            \"name\": \"file\",\n                            \"id\": 5\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"StdoutLine\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 202\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"line\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MachineInfo\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 203\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"type\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"manufacturer\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"model\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"variant\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Launcher\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 204\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"description\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"File\",\n                            \"name\": \"image\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"MachineInfo\",\n                            \"name\": \"info\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"running\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"terminating\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"command\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"shell\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"StdoutLine\",\n                            \"name\": \"output\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"returncode\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"workdir\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"uint32\",\n                            \"name\": \"priority\",\n                            \"id\": 13\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"uint32\",\n                            \"name\": \"importance\",\n                            \"id\": 14\n                        }\n                    ]\n                }\n            ],\n            \"enums\": [\n                {\n                    \"name\": \"ApplicationType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"QT5_QML\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"GLADEVCP\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"JAVASCRIPT\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"FileContent\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"CLEARTEXT\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ZLIB\",\n                            \"id\": 2\n                        }\n                    ]\n                }\n            ],\n            \"isNamespace\": true\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"FieldType\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"FT_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"FT_CALLBACK\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"FT_POINTER\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"FT_STATIC\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"FT_IGNORE\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"IntSize\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"IS_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"IS_8\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"IS_16\",\n                    \"id\": 16\n                },\n                {\n                    \"name\": \"IS_32\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"IS_64\",\n                    \"id\": 64\n                }\n            ]\n        }\n    ],\n    \"isNamespace\": true\n}).build();","module.exports = require(\"protobufjs\").newBuilder({})['import']({\n    \"package\": null,\n    \"syntax\": \"proto2\",\n    \"options\": {\n        \"java_package\": \"fi.kapsi.koti.jpa.nanopb\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"NanoPBOptions\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_size\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_count\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"IntSize\",\n                    \"name\": \"int_size\",\n                    \"id\": 7,\n                    \"options\": {\n                        \"default\": \"IS_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"FieldType\",\n                    \"name\": \"type\",\n                    \"id\": 3,\n                    \"options\": {\n                        \"default\": \"FT_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"long_names\",\n                    \"id\": 4,\n                    \"options\": {\n                        \"default\": true\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"packed_struct\",\n                    \"id\": 5,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"skip_message\",\n                    \"id\": 6,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"no_unions\",\n                    \"id\": 8,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"uint32\",\n                    \"name\": \"msgid\",\n                    \"id\": 9\n                }\n            ]\n        },\n        {\n            \"name\": \"machinetalk\",\n            \"fields\": [],\n            \"syntax\": \"proto2\",\n            \"messages\": [\n                {\n                    \"name\": \"PmCartesian\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 300\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"x\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"y\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"z\",\n                            \"id\": 30\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcPose\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 301\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"tran\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"a\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"b\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"c\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"u\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"v\",\n                            \"id\": 60\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"w\",\n                            \"id\": 70\n                        }\n                    ]\n                }\n            ],\n            \"isNamespace\": true\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"FieldType\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"FT_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"FT_CALLBACK\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"FT_POINTER\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"FT_STATIC\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"FT_IGNORE\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"IntSize\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"IS_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"IS_8\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"IS_16\",\n                    \"id\": 16\n                },\n                {\n                    \"name\": \"IS_32\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"IS_64\",\n                    \"id\": 64\n                }\n            ]\n        }\n    ],\n    \"isNamespace\": true\n}).build();","module.exports = require(\"protobufjs\").newBuilder({})['import']({\n    \"package\": null,\n    \"syntax\": \"proto2\",\n    \"options\": {\n        \"java_package\": \"fi.kapsi.koti.jpa.nanopb\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"NanoPBOptions\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_size\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_count\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"IntSize\",\n                    \"name\": \"int_size\",\n                    \"id\": 7,\n                    \"options\": {\n                        \"default\": \"IS_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"FieldType\",\n                    \"name\": \"type\",\n                    \"id\": 3,\n                    \"options\": {\n                        \"default\": \"FT_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"long_names\",\n                    \"id\": 4,\n                    \"options\": {\n                        \"default\": true\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"packed_struct\",\n                    \"id\": 5,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"skip_message\",\n                    \"id\": 6,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"no_unions\",\n                    \"id\": 8,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"uint32\",\n                    \"name\": \"msgid\",\n                    \"id\": 9\n                }\n            ]\n        },\n        {\n            \"name\": \"machinetalk\",\n            \"fields\": [],\n            \"syntax\": \"proto2\",\n            \"messages\": [\n                {\n                    \"name\": \"Connector\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 380\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1,\n                            \"options\": {\n                                \"(nanopb).max_size\": 20\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"pins\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Firmware\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 385\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"build_sha\",\n                            \"id\": 1,\n                            \"options\": {\n                                \"(nanopb).max_size\": 40\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"fpga_part_number\",\n                            \"id\": 2,\n                            \"options\": {\n                                \"(nanopb).max_size\": 20\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Connector\",\n                            \"name\": \"connector\",\n                            \"id\": 3,\n                            \"options\": {\n                                \"(nanopb).max_count\": 16\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"num_leds\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"board_name\",\n                            \"id\": 5,\n                            \"options\": {\n                                \"(nanopb).max_size\": 30\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"comment\",\n                            \"id\": 6,\n                            \"options\": {\n                                \"(nanopb).max_size\": 80\n                            }\n                        }\n                    ]\n                }\n            ],\n            \"isNamespace\": true\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"FieldType\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"FT_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"FT_CALLBACK\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"FT_POINTER\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"FT_STATIC\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"FT_IGNORE\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"IntSize\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"IS_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"IS_8\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"IS_16\",\n                    \"id\": 16\n                },\n                {\n                    \"name\": \"IS_32\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"IS_64\",\n                    \"id\": 64\n                }\n            ]\n        }\n    ],\n    \"isNamespace\": true\n}).build();","module.exports = require(\"protobufjs\").newBuilder({})['import']({\n    \"package\": null,\n    \"syntax\": \"proto2\",\n    \"options\": {\n        \"java_package\": \"fi.kapsi.koti.jpa.nanopb\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"NanoPBOptions\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_size\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_count\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"IntSize\",\n                    \"name\": \"int_size\",\n                    \"id\": 7,\n                    \"options\": {\n                        \"default\": \"IS_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"FieldType\",\n                    \"name\": \"type\",\n                    \"id\": 3,\n                    \"options\": {\n                        \"default\": \"FT_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"long_names\",\n                    \"id\": 4,\n                    \"options\": {\n                        \"default\": true\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"packed_struct\",\n                    \"id\": 5,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"skip_message\",\n                    \"id\": 6,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"no_unions\",\n                    \"id\": 8,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"uint32\",\n                    \"name\": \"msgid\",\n                    \"id\": 9\n                }\n            ]\n        },\n        {\n            \"name\": \"machinetalk\",\n            \"fields\": [],\n            \"syntax\": \"proto2\",\n            \"messages\": [\n                {\n                    \"name\": \"JplanJoint\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 352\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"pos_cmd\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_vel\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_acc\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"enable\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"JplanCommand\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 354\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"JplanJoint\",\n                            \"name\": \"joint\",\n                            \"id\": 2,\n                            \"options\": {\n                                \"(nanopb).max_count\": 10\n                            }\n                        }\n                    ]\n                }\n            ],\n            \"isNamespace\": true\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"FieldType\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"FT_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"FT_CALLBACK\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"FT_POINTER\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"FT_STATIC\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"FT_IGNORE\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"IntSize\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"IS_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"IS_8\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"IS_16\",\n                    \"id\": 16\n                },\n                {\n                    \"name\": \"IS_32\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"IS_64\",\n                    \"id\": 64\n                }\n            ]\n        }\n    ],\n    \"isNamespace\": true\n}).build();","module.exports = require(\"protobufjs\").newBuilder({})['import']({\n    \"package\": null,\n    \"syntax\": \"proto2\",\n    \"options\": {\n        \"java_package\": \"fi.kapsi.koti.jpa.nanopb\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"NanoPBOptions\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_size\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_count\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"IntSize\",\n                    \"name\": \"int_size\",\n                    \"id\": 7,\n                    \"options\": {\n                        \"default\": \"IS_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"FieldType\",\n                    \"name\": \"type\",\n                    \"id\": 3,\n                    \"options\": {\n                        \"default\": \"FT_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"long_names\",\n                    \"id\": 4,\n                    \"options\": {\n                        \"default\": true\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"packed_struct\",\n                    \"id\": 5,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"skip_message\",\n                    \"id\": 6,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"no_unions\",\n                    \"id\": 8,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"uint32\",\n                    \"name\": \"msgid\",\n                    \"id\": 9\n                }\n            ]\n        },\n        {\n            \"name\": \"machinetalk\",\n            \"fields\": [],\n            \"syntax\": \"proto2\",\n            \"messages\": [\n                {\n                    \"name\": \"LogMessage\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 400\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"MsgOrigin\",\n                            \"name\": \"origin\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"pid\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"MsgLevel\",\n                            \"name\": \"level\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"tag\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"text\",\n                            \"id\": 50\n                        }\n                    ]\n                }\n            ],\n            \"enums\": [\n                {\n                    \"name\": \"ValueType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_BIT\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"HAL_FLOAT\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"HAL_S32\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"HAL_U32\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"HAL_S64\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"HAL_U64\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"STRING\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"BYTES\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"INT32\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"UINT32\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"INT64\",\n                            \"id\": 40\n                        },\n                        {\n                            \"name\": \"UINT64\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"DOUBLE\",\n                            \"id\": 60\n                        },\n                        {\n                            \"name\": \"BOOL\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"CARTESIAN\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"LEGACY_CARTESIAN\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"POSE\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"LEGACY_POSE\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalPinDirection\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_IN\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"HAL_OUT\",\n                            \"id\": 32\n                        },\n                        {\n                            \"name\": \"HAL_IO\",\n                            \"id\": 48\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalParamDirection\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_RO\",\n                            \"id\": 64\n                        },\n                        {\n                            \"name\": \"HAL_RW\",\n                            \"id\": 192\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalFunctType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"FS_LEGACY_THREADFUNC\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"FS_XTHREADFUNC\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"FS_USERLAND\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ObjectType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_OBJECT_INVALID\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"HAL_PIN\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"HAL_SIGNAL\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"HAL_PARAM\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"HAL_THREAD\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"HAL_FUNCT\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"HAL_COMPONENT\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"HAL_VTABLE\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"HAL_INST\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"HAL_RING\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"HAL_GROUP\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"HAL_PLUG\",\n                            \"id\": 12\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"msgidType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"MSGID_MAX\",\n                            \"id\": 4000\n                        },\n                        {\n                            \"name\": \"MSGID_ROUTE_DELIMITER\",\n                            \"id\": 4001\n                        },\n                        {\n                            \"name\": \"MSGID_ERROR_MSG\",\n                            \"id\": 4002\n                        },\n                        {\n                            \"name\": \"MSGID_BLOB\",\n                            \"id\": 4003\n                        },\n                        {\n                            \"name\": \"MSGID_STRING\",\n                            \"id\": 4004\n                        },\n                        {\n                            \"name\": \"MSGID_HOP\",\n                            \"id\": 4005\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"socketType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ST_ZMQ_PAIR\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_PUB\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_SUB\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_REQ\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_REP\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_DEALER\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_ROUTER\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_PULL\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_PUSH\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_XPUB\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_XSUB\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_STREAM\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_INVALID\",\n                            \"id\": 15\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"securityMechanism\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"SM_ZMQ_NONE\",\n                            \"id\": -1\n                        },\n                        {\n                            \"name\": \"SM_ZMQ_NULL\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"SM_ZMQ_PLAIN\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"SM_ZMQ_CURVE\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"RCS_STATUS\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"UNINITIALIZED_STATUS\",\n                            \"id\": -1\n                        },\n                        {\n                            \"name\": \"RCS_DONE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"RCS_EXEC\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"RCS_ERROR\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"RCS_RECEIVED\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MsgOrigin\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"MSG_KERNEL\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"MSG_RTUSER\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"MSG_ULAPI\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MsgLevel\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"RTAPI_MSG_NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_ERR\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_WARN\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_INFO\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_DBG\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_ALL\",\n                            \"id\": 5\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginDetail\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"UNIX_SIGNAL\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"INSTANCE_SHUTDOWN\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"ZMQ_SOCKET\",\n                            \"id\": 70\n                        },\n                        {\n                            \"name\": \"NML_LAYER\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"RCS_LAYER\",\n                            \"id\": 90\n                        },\n                        {\n                            \"name\": \"CMS_LAYER\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"IP_LAYER\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"TCP_LAYER\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"PGM_LAYER\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"PROCESS\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"USER_THREAD\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"RT_THREAD\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"COMPONENT\",\n                            \"id\": 40\n                        },\n                        {\n                            \"name\": \"THREAD_FUNCTION\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"COMPONENT_INIT\",\n                            \"id\": 60\n                        },\n                        {\n                            \"name\": \"COMPONENT_EXIT\",\n                            \"id\": 70\n                        },\n                        {\n                            \"name\": \"GROUP\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"PIN\",\n                            \"id\": 90\n                        },\n                        {\n                            \"name\": \"SIGNAL\",\n                            \"id\": 100\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Severity\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"S_INFORMATIONAL\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"S_WARNING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"S_FAIL\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"StatusType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ENQUEUED\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"PROCESSING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"COMPLETE\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"FAILED\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ReplyType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ON_RECEPTION\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ON_QUEUED\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ON_COMPLETION\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ALL_STEPS\",\n                            \"id\": 255\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ST_LOGGING\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ST_CONFIG\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ST_REDIS\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ST_HTTP\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ST_HTTPS\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ST_WEBSOCKET\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ST_WEBSOCKETS\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ST_RTAPI_COMMAND\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ST_STP_HALGROUP\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"ST_STP_HALRCOMP\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"ST_STP_INTERP\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"ST_STP_TASK\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"ST_HAL_RCOMMAND\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"ST_TASK_COMMAND\",\n                            \"id\": 14\n                        },\n                        {\n                            \"name\": \"ST_INTERP_COMMAND\",\n                            \"id\": 15\n                        },\n                        {\n                            \"name\": \"ST_MESSAGEBUS_COMMAND\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"ST_MESSAGEBUS_RESPONSE\",\n                            \"id\": 17\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceAPI\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"SA_ZMQ_PROTOBUF\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"SA_WS_JSON\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ContainerType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"MT_RTMESSAGE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"MT_MOTCMD\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"MT_MOTSTATUS\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTCMD\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTSTATUS\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"MT_WOU\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"MT_HALUPDATE\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_MESSAGE\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"MT_LOG_MESSAGE\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"MT_PREVIEW\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"MT_PROGRESS\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"MT_INTERP_STAT\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"MT_SYSLOG\",\n                            \"id\": 18\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_NML\",\n                            \"id\": 19\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTCONFIG\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"MT_STP_UPDATE_FULL\",\n                            \"id\": 26\n                        },\n                        {\n                            \"name\": \"MT_STP_UPDATE\",\n                            \"id\": 28\n                        },\n                        {\n                            \"name\": \"MT_STP_NOGROUP\",\n                            \"id\": 27\n                        },\n                        {\n                            \"name\": \"MT_SHUTDOWN\",\n                            \"id\": 45\n                        },\n                        {\n                            \"name\": \"MT_CONFIRM_SHUTDOWN\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE0\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE1\",\n                            \"id\": 31\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE2\",\n                            \"id\": 32\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE3\",\n                            \"id\": 33\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE4\",\n                            \"id\": 34\n                        },\n                        {\n                            \"name\": \"MT_ASCII\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"MT_UNICODE\",\n                            \"id\": 101\n                        },\n                        {\n                            \"name\": \"MT_GCODE\",\n                            \"id\": 102\n                        },\n                        {\n                            \"name\": \"MT_PYTHON\",\n                            \"id\": 103\n                        },\n                        {\n                            \"name\": \"MT_PICKLE\",\n                            \"id\": 104\n                        },\n                        {\n                            \"name\": \"MT_TCL\",\n                            \"id\": 105\n                        },\n                        {\n                            \"name\": \"MT_XML\",\n                            \"id\": 106\n                        },\n                        {\n                            \"name\": \"MT_JSON\",\n                            \"id\": 107\n                        },\n                        {\n                            \"name\": \"MT_JPEG\",\n                            \"id\": 108\n                        },\n                        {\n                            \"name\": \"MT_PNG\",\n                            \"id\": 109\n                        },\n                        {\n                            \"name\": \"MT_TIFF\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"MT_POSTSCRIPT\",\n                            \"id\": 111\n                        },\n                        {\n                            \"name\": \"MT_SVG\",\n                            \"id\": 112\n                        },\n                        {\n                            \"name\": \"MT_ZMQ_SUBSCRIBE\",\n                            \"id\": 150\n                        },\n                        {\n                            \"name\": \"MT_ZMQ_UNSUBSCRIBE\",\n                            \"id\": 151\n                        },\n                        {\n                            \"name\": \"MT_PING\",\n                            \"id\": 210\n                        },\n                        {\n                            \"name\": \"MT_PING_ACKNOWLEDGE\",\n                            \"id\": 215\n                        },\n                        {\n                            \"name\": \"MT_REJECT\",\n                            \"id\": 220\n                        },\n                        {\n                            \"name\": \"MT_DONE\",\n                            \"id\": 240\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_REQUEST\",\n                            \"id\": 250\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_ANNOUNCEMENT\",\n                            \"id\": 251\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_PROBE\",\n                            \"id\": 252\n                        },\n                        {\n                            \"name\": \"MT_MESSAGEBUS_NO_DESTINATION\",\n                            \"id\": 255\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND\",\n                            \"id\": 256\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND_CONFIRM\",\n                            \"id\": 257\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND_REJECT\",\n                            \"id\": 258\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_SET\",\n                            \"id\": 259\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_SET_REJECT\",\n                            \"id\": 260\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_ACK\",\n                            \"id\": 263\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_SET\",\n                            \"id\": 265\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_SET_REJECT\",\n                            \"id\": 266\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_GET\",\n                            \"id\": 267\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_GET_REJECT\",\n                            \"id\": 268\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_CREATE\",\n                            \"id\": 269\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_CREATE_REJECT\",\n                            \"id\": 270\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DELETE\",\n                            \"id\": 271\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DELETE_REJECT\",\n                            \"id\": 272\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_ACK\",\n                            \"id\": 273\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_ERROR\",\n                            \"id\": 274\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DESCRIBE\",\n                            \"id\": 276\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DESCRIPTION\",\n                            \"id\": 277\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_FULL_UPDATE\",\n                            \"id\": 288\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_INCREMENTAL_UPDATE\",\n                            \"id\": 289\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_ERROR\",\n                            \"id\": 290\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND\",\n                            \"id\": 294\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND_CONFIRM\",\n                            \"id\": 295\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND_REJECT\",\n                            \"id\": 296\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_FULL_UPDATE\",\n                            \"id\": 297\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_INCREMENTAL_UPDATE\",\n                            \"id\": 298\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_ERROR\",\n                            \"id\": 299\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_EXIT\",\n                            \"id\": 300\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_PING\",\n                            \"id\": 301\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_LOADRT\",\n                            \"id\": 302\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_LOG\",\n                            \"id\": 303\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_UNLOADRT\",\n                            \"id\": 305\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_NEWINST\",\n                            \"id\": 306\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_NEWTHREAD\",\n                            \"id\": 307\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_DELTHREAD\",\n                            \"id\": 308\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_CALLFUNC\",\n                            \"id\": 309\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_REPLY\",\n                            \"id\": 310\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_DELINST\",\n                            \"id\": 311\n                        },\n                        {\n                            \"name\": \"MT_LIST_APPLICATIONS\",\n                            \"id\": 350\n                        },\n                        {\n                            \"name\": \"MT_DESCRIBE_APPLICATION\",\n                            \"id\": 351\n                        },\n                        {\n                            \"name\": \"MT_RETRIEVE_APPLICATION\",\n                            \"id\": 352\n                        },\n                        {\n                            \"name\": \"MT_APPLICATION_DETAIL\",\n                            \"id\": 353\n                        },\n                        {\n                            \"name\": \"MT_ERROR\",\n                            \"id\": 360\n                        },\n                        {\n                            \"name\": \"MT_FULL_UPDATE\",\n                            \"id\": 370\n                        },\n                        {\n                            \"name\": \"MT_INCREMENTAL_UPDATE\",\n                            \"id\": 371\n                        },\n                        {\n                            \"name\": \"MT_TASK_REPLY\",\n                            \"id\": 400\n                        },\n                        {\n                            \"name\": \"MT_TICKET_UPDATE\",\n                            \"id\": 401\n                        },\n                        {\n                            \"name\": \"MT_CREDIT_UPDATE\",\n                            \"id\": 450\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_LOWER\",\n                            \"id\": 1000\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_UPPER\",\n                            \"id\": 1100\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ABORT\",\n                            \"id\": 1001\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_AXIS_ABORT\",\n                            \"id\": 1002\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE\",\n                            \"id\": 1003\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE\",\n                            \"id\": 1004\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE_AMPLIFIER\",\n                            \"id\": 1005\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE_AMPLIFIER\",\n                            \"id\": 1006\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE_WATCHDOG\",\n                            \"id\": 1007\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE_WATCHDOG\",\n                            \"id\": 1008\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ACTIVATE_JOINT\",\n                            \"id\": 1009\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DEACTIVATE_JOINT\",\n                            \"id\": 1010\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_PAUSE\",\n                            \"id\": 1011\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_RESUME\",\n                            \"id\": 1012\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_STEP\",\n                            \"id\": 1013\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FREE\",\n                            \"id\": 1014\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COORD\",\n                            \"id\": 1015\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_TELEOP\",\n                            \"id\": 1016\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_SCALE\",\n                            \"id\": 1017\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SS_ENABLE\",\n                            \"id\": 1018\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FEED_SCALE\",\n                            \"id\": 1019\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FS_ENABLE\",\n                            \"id\": 1020\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FH_ENABLE\",\n                            \"id\": 1021\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_AF_ENABLE\",\n                            \"id\": 1022\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_OVERRIDE_LIMITS\",\n                            \"id\": 1023\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_HOME\",\n                            \"id\": 1024\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_UNHOME\",\n                            \"id\": 1025\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_CONT\",\n                            \"id\": 1026\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_INCR\",\n                            \"id\": 1027\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_ABS\",\n                            \"id\": 1028\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_LINE\",\n                            \"id\": 1029\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_CIRCLE\",\n                            \"id\": 1030\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_TELEOP_VECTOR\",\n                            \"id\": 1031\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_CLEAR_PROBE_FLAGS\",\n                            \"id\": 1032\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_PROBE\",\n                            \"id\": 1033\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_RIGID_TAP\",\n                            \"id\": 1034\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_POSITION_LIMITS\",\n                            \"id\": 1035\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_BACKLASH\",\n                            \"id\": 1036\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MIN_FERROR\",\n                            \"id\": 1037\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MAX_FERROR\",\n                            \"id\": 1038\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_VEL\",\n                            \"id\": 1039\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_VEL_LIMIT\",\n                            \"id\": 1040\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_VEL_LIMIT\",\n                            \"id\": 1041\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_ACC_LIMIT\",\n                            \"id\": 1042\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_ACC\",\n                            \"id\": 1043\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_TERM_COND\",\n                            \"id\": 1044\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_NUM_AXES\",\n                            \"id\": 1045\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_WORLD_HOME\",\n                            \"id\": 1046\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_HOMING_PARAMS\",\n                            \"id\": 1047\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_DEBUG\",\n                            \"id\": 1048\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_DOUT\",\n                            \"id\": 1049\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_AOUT\",\n                            \"id\": 1050\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_SPINDLESYNC\",\n                            \"id\": 1051\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_ON\",\n                            \"id\": 1052\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_OFF\",\n                            \"id\": 1053\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_INCREASE\",\n                            \"id\": 1054\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_DECREASE\",\n                            \"id\": 1055\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 1056\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 1057\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MOTOR_OFFSET\",\n                            \"id\": 1058\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_COMP\",\n                            \"id\": 1059\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_OFFSET\",\n                            \"id\": 1060\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_OK\",\n                            \"id\": 1061\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_UNKNOWN_COMMAND\",\n                            \"id\": 1062\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_INVALID_COMMAND\",\n                            \"id\": 1063\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_INVALID_PARAMS\",\n                            \"id\": 1064\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_BAD_EXEC\",\n                            \"id\": 1065\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_DISABLED\",\n                            \"id\": 1066\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_FREE\",\n                            \"id\": 1067\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_TELEOP\",\n                            \"id\": 1068\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_COORD\",\n                            \"id\": 1069\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOINT_FLAG\",\n                            \"id\": 1070\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_FLAG\",\n                            \"id\": 1071\n                        },\n                        {\n                            \"name\": \"MT_PRU_FIRMWARE\",\n                            \"id\": 2048\n                        },\n                        {\n                            \"name\": \"MT_MESA_5I20_FIRMWARE\",\n                            \"id\": 3000\n                        },\n                        {\n                            \"name\": \"MT_BLOB\",\n                            \"id\": 4000\n                        },\n                        {\n                            \"name\": \"MT_TEST1\",\n                            \"id\": 5001\n                        },\n                        {\n                            \"name\": \"MT_TEST2\",\n                            \"id\": 5002\n                        },\n                        {\n                            \"name\": \"MT_TEST3\",\n                            \"id\": 5003\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_LOWER\",\n                            \"id\": 10000\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_UPPER\",\n                            \"id\": 13000\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_ERROR\",\n                            \"id\": 10011\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_TEXT\",\n                            \"id\": 10012\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_DISPLAY\",\n                            \"id\": 10013\n                        },\n                        {\n                            \"name\": \"MT_EMC_NULL\",\n                            \"id\": 10021\n                        },\n                        {\n                            \"name\": \"MT_EMC_SET_DEBUG\",\n                            \"id\": 10022\n                        },\n                        {\n                            \"name\": \"MT_EMC_SYSTEM_CMD\",\n                            \"id\": 10030\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_AXIS\",\n                            \"id\": 10101\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_UNITS\",\n                            \"id\": 10102\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MIN_POSITION_LIMIT\",\n                            \"id\": 10107\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MAX_POSITION_LIMIT\",\n                            \"id\": 10108\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_START_CHANGE\",\n                            \"id\": 1110\n                        },\n                        {\n                            \"name\": \"MT_EMC_EXEC_PLUGIN_CALL\",\n                            \"id\": 1112\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_PLUGIN_CALL\",\n                            \"id\": 1113\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_FERROR\",\n                            \"id\": 10111\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_HOMING_PARAMS\",\n                            \"id\": 10112\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MIN_FERROR\",\n                            \"id\": 10115\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MAX_VELOCITY\",\n                            \"id\": 10116\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_INIT\",\n                            \"id\": 10118\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_HALT\",\n                            \"id\": 10119\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ABORT\",\n                            \"id\": 10120\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ENABLE\",\n                            \"id\": 10121\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_DISABLE\",\n                            \"id\": 10122\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_HOME\",\n                            \"id\": 10123\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_UNHOME\",\n                            \"id\": 10135\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_JOG\",\n                            \"id\": 10124\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_INCR_JOG\",\n                            \"id\": 10125\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ABS_JOG\",\n                            \"id\": 10126\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ACTIVATE\",\n                            \"id\": 10127\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_DEACTIVATE\",\n                            \"id\": 10128\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_OVERRIDE_LIMITS\",\n                            \"id\": 10129\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_LOAD_COMP\",\n                            \"id\": 10131\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_BACKLASH\",\n                            \"id\": 10134\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_STAT\",\n                            \"id\": 10199\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_AXES\",\n                            \"id\": 10201\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_UNITS\",\n                            \"id\": 10202\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_CYCLE_TIME\",\n                            \"id\": 10203\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MODE\",\n                            \"id\": 10204\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_VELOCITY\",\n                            \"id\": 10205\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_ACCELERATION\",\n                            \"id\": 10206\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MAX_VELOCITY\",\n                            \"id\": 10207\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MAX_ACCELERATION\",\n                            \"id\": 10208\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SCALE\",\n                            \"id\": 10209\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MOTION_ID\",\n                            \"id\": 10210\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_INIT\",\n                            \"id\": 10211\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_HALT\",\n                            \"id\": 10212\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_ENABLE\",\n                            \"id\": 10213\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_DISABLE\",\n                            \"id\": 10214\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_ABORT\",\n                            \"id\": 10215\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_PAUSE\",\n                            \"id\": 10216\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_STEP\",\n                            \"id\": 10217\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_RESUME\",\n                            \"id\": 10218\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_DELAY\",\n                            \"id\": 10219\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_LINEAR_MOVE\",\n                            \"id\": 10220\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_CIRCULAR_MOVE\",\n                            \"id\": 10221\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TERM_COND\",\n                            \"id\": 10222\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_OFFSET\",\n                            \"id\": 10223\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_G5X\",\n                            \"id\": 10224\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_HOME\",\n                            \"id\": 10225\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_ROTATION\",\n                            \"id\": 10226\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_G92\",\n                            \"id\": 10227\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_CLEAR_PROBE_TRIPPED_FLAG\",\n                            \"id\": 10228\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_PROBE\",\n                            \"id\": 10229\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TELEOP_ENABLE\",\n                            \"id\": 10230\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TELEOP_VECTOR\",\n                            \"id\": 10231\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SPINDLESYNC\",\n                            \"id\": 10232\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SPINDLE_SCALE\",\n                            \"id\": 10233\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_FO_ENABLE\",\n                            \"id\": 10234\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SO_ENABLE\",\n                            \"id\": 10235\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_FH_ENABLE\",\n                            \"id\": 10236\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_RIGID_TAP\",\n                            \"id\": 10237\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_RAPID_SCALE\",\n                            \"id\": 10238\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_STAT\",\n                            \"id\": 10299\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_INIT\",\n                            \"id\": 10301\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_HALT\",\n                            \"id\": 10302\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_ABORT\",\n                            \"id\": 10303\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_SET_AOUT\",\n                            \"id\": 10304\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_SET_DOUT\",\n                            \"id\": 10305\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_ADAPTIVE\",\n                            \"id\": 10306\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_ORIENT\",\n                            \"id\": 10317\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_WAIT_ORIENT_COMPLETE\",\n                            \"id\": 10318\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_STAT\",\n                            \"id\": 10399\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_INIT\",\n                            \"id\": 10501\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_HALT\",\n                            \"id\": 10502\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_ABORT\",\n                            \"id\": 10503\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_SET_MODE\",\n                            \"id\": 10504\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_SET_STATE\",\n                            \"id\": 10505\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_OPEN\",\n                            \"id\": 10506\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RUN\",\n                            \"id\": 10507\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_READ\",\n                            \"id\": 10508\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_EXECUTE\",\n                            \"id\": 10509\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_PAUSE\",\n                            \"id\": 10510\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_STEP\",\n                            \"id\": 10511\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RESUME\",\n                            \"id\": 10512\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_END\",\n                            \"id\": 10513\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_CLOSE\",\n                            \"id\": 10514\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_INIT\",\n                            \"id\": 10515\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SYNCH\",\n                            \"id\": 10516\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SET_OPTIONAL_STOP\",\n                            \"id\": 10517\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SET_BLOCK_DELETE\",\n                            \"id\": 10518\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_OPTIONAL_STOP\",\n                            \"id\": 10519\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RESET\",\n                            \"id\": 10520\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_REPLY\",\n                            \"id\": 10530\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_STAT\",\n                            \"id\": 10599\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_INIT\",\n                            \"id\": 11101\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_HALT\",\n                            \"id\": 11102\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_ABORT\",\n                            \"id\": 11103\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_PREPARE\",\n                            \"id\": 11104\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_LOAD\",\n                            \"id\": 11105\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_UNLOAD\",\n                            \"id\": 11106\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_LOAD_TOOL_TABLE\",\n                            \"id\": 11107\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_SET_OFFSET\",\n                            \"id\": 11108\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_SET_NUMBER\",\n                            \"id\": 11109\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_UPDATE_TOOL_TABLE\",\n                            \"id\": 11110\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_STAT\",\n                            \"id\": 11199\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_ON\",\n                            \"id\": 11206\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_OFF\",\n                            \"id\": 11207\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_RESET\",\n                            \"id\": 11208\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_INPUT_WAIT\",\n                            \"id\": 11209\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_STAT\",\n                            \"id\": 11299\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_ON\",\n                            \"id\": 11304\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_OFF\",\n                            \"id\": 11305\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_INCREASE\",\n                            \"id\": 11309\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_DECREASE\",\n                            \"id\": 11310\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_CONSTANT\",\n                            \"id\": 11311\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 11312\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 11313\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_SPEED\",\n                            \"id\": 11316\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_STAT\",\n                            \"id\": 11399\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_MIST_ON\",\n                            \"id\": 11404\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_MIST_OFF\",\n                            \"id\": 11405\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_FLOOD_ON\",\n                            \"id\": 11406\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_FLOOD_OFF\",\n                            \"id\": 11407\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_STAT\",\n                            \"id\": 11499\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_ON\",\n                            \"id\": 11504\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_OFF\",\n                            \"id\": 11505\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_STAT\",\n                            \"id\": 11599\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_INIT\",\n                            \"id\": 11601\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_HALT\",\n                            \"id\": 11602\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_ABORT\",\n                            \"id\": 11603\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_SET_CYCLE_TIME\",\n                            \"id\": 11604\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_STAT\",\n                            \"id\": 11699\n                        },\n                        {\n                            \"name\": \"MT_EMC_INIT\",\n                            \"id\": 11901\n                        },\n                        {\n                            \"name\": \"MT_EMC_HALT\",\n                            \"id\": 11902\n                        },\n                        {\n                            \"name\": \"MT_EMC_ABORT\",\n                            \"id\": 11903\n                        },\n                        {\n                            \"name\": \"MT_EMC_STAT\",\n                            \"id\": 11999\n                        },\n                        {\n                            \"name\": \"MT_EMCSTAT_FULL_UPDATE\",\n                            \"id\": 12500\n                        },\n                        {\n                            \"name\": \"MT_EMCSTAT_INCREMENTAL_UPDATE\",\n                            \"id\": 12501\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_ERROR\",\n                            \"id\": 12510\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_TEXT\",\n                            \"id\": 12511\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_DISPLAY\",\n                            \"id\": 12512\n                        },\n                        {\n                            \"name\": \"MT_EMCCMD_EXECUTED\",\n                            \"id\": 12520\n                        },\n                        {\n                            \"name\": \"MT_EMCCMD_COMPLETED\",\n                            \"id\": 12521\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_FULL_UPDATE\",\n                            \"id\": 12600\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_INCREMENTAL_UPDATE\",\n                            \"id\": 12601\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_ERROR\",\n                            \"id\": 12602\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_START\",\n                            \"id\": 12610\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_TERMINATE\",\n                            \"id\": 12611\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_KILL\",\n                            \"id\": 12612\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_WRITE_STDIN\",\n                            \"id\": 12613\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_CALL\",\n                            \"id\": 12614\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_SHUTDOWN\",\n                            \"id\": 12615\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_SET\",\n                            \"id\": 12616\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginIndex\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ORIGIN_UNKNOWN\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ORIGIN_G54\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ORIGIN_G55\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ORIGIN_G56\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ORIGIN_G57\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ORIGIN_G58\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_1\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_2\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_3\",\n                            \"id\": 9\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TermConditionType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"_EMC_TRAJ_TERM_COND_STOP\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_EMC_TRAJ_TERM_COND_BLEND\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"CanonDirection\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"_CANON_STOPPED\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_CANON_CLOCKWISE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"_CANON_COUNTERCLOCKWISE\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"InputType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"_ANALOG_INPUT\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"_DIGITAL_INPUT\",\n                            \"id\": 1\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"WaitType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"IMMEDIATE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"RISE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"FALL\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"BE_HIGH\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"BE_LOW\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"InterpreterStateType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"INTERP_IDLE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"INTERP_RUNNING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"INTERP_SYNC_WAIT\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"INTERP_PAUSED\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"INTERP_QUEUE_WAIT\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"INTERP_ABORT_WAIT\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"INTERP_STATE_UNSET\",\n                            \"id\": 99\n                        }\n                    ]\n                }\n            ],\n            \"isNamespace\": true\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"FieldType\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"FT_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"FT_CALLBACK\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"FT_POINTER\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"FT_STATIC\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"FT_IGNORE\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"IntSize\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"IS_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"IS_8\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"IS_16\",\n                    \"id\": 16\n                },\n                {\n                    \"name\": \"IS_32\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"IS_64\",\n                    \"id\": 64\n                }\n            ]\n        }\n    ],\n    \"isNamespace\": true\n}).build();","module.exports = require(\"protobufjs\").newBuilder({})['import']({\n    \"package\": null,\n    \"syntax\": \"proto2\",\n    \"options\": {\n        \"java_package\": \"fi.kapsi.koti.jpa.nanopb\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"NanoPBOptions\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_size\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_count\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"IntSize\",\n                    \"name\": \"int_size\",\n                    \"id\": 7,\n                    \"options\": {\n                        \"default\": \"IS_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"FieldType\",\n                    \"name\": \"type\",\n                    \"id\": 3,\n                    \"options\": {\n                        \"default\": \"FT_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"long_names\",\n                    \"id\": 4,\n                    \"options\": {\n                        \"default\": true\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"packed_struct\",\n                    \"id\": 5,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"skip_message\",\n                    \"id\": 6,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"no_unions\",\n                    \"id\": 8,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"uint32\",\n                    \"name\": \"msgid\",\n                    \"id\": 9\n                }\n            ]\n        },\n        {\n            \"name\": \"machinetalk\",\n            \"fields\": [],\n            \"syntax\": \"proto2\",\n            \"messages\": [\n                {\n                    \"name\": \"Instance\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 700\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"id\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceAnnouncement\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 701\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"ServiceType\",\n                            \"name\": \"stype\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"version\",\n                            \"id\": 2,\n                            \"options\": {\n                                \"default\": 0\n                            }\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"instance\",\n                            \"id\": 3,\n                            \"options\": {\n                                \"default\": 0\n                            }\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"ServiceAPI\",\n                            \"name\": \"api\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"uri\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"description\",\n                            \"id\": 7\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Originator\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 702\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"OriginType\",\n                            \"name\": \"origin\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"OriginDetail\",\n                            \"name\": \"detail\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"id\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Instance\",\n                            \"name\": \"instance\",\n                            \"id\": 5\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"AnError\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 703\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"error_code\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Severity\",\n                            \"name\": \"severity\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"error_text\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Originator\",\n                            \"name\": \"origin\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Pin\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 704\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"ValueType\",\n                            \"name\": \"type\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"handle\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"HalPinDirection\",\n                            \"name\": \"dir\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"halbit\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"halfloat\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"hals32\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"halu32\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"owner\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"linked\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"oldname\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"epsilon\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"flags\",\n                            \"id\": 13\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Signal\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 705\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"ValueType\",\n                            \"name\": \"type\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"handle\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"halbit\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"halfloat\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"hals32\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"halu32\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"strval\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bytes\",\n                            \"name\": \"blob\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"readers\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"writers\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"bidirs\",\n                            \"id\": 13\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Param\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 706\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"ValueType\",\n                            \"name\": \"type\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"handle\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"halbit\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"halfloat\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"hals32\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"halu32\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"strval\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bytes\",\n                            \"name\": \"blob\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"HalParamDirection\",\n                            \"name\": \"dir\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"oldname\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"owner\",\n                            \"id\": 13\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"runtime\",\n                            \"id\": 14\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"maytime\",\n                            \"id\": 15\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Function\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 707\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"handle\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"owner_id\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"users\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"runtime\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"maxtime\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"reentrant\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"HalFunctType\",\n                            \"name\": \"type\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"maxtime_increased\",\n                            \"id\": 9\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Thread\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 708\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"handle\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"uses_fp\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"period\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"priority\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"task_id\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"cpu_id\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"string\",\n                            \"name\": \"function\",\n                            \"id\": 8\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Component\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 709\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"ninst\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"comp_id\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"type\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"state\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"last_update\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"last_bound\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"last_unbound\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"pid\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"args\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"timer\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"userarg1\",\n                            \"id\": 14\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"userarg2\",\n                            \"id\": 15\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Pin\",\n                            \"name\": \"pin\",\n                            \"id\": 16\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Param\",\n                            \"name\": \"param\",\n                            \"id\": 17\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Function\",\n                            \"name\": \"funct\",\n                            \"id\": 19\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"no_create\",\n                            \"id\": 18\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Ring\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 710\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"handle\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"owner\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"stream\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"wmutex\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"rmutex\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"rtapi_shm\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"reader\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"writer\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"total_size\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"scratchpad\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"ring_shmkey\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"encodings\",\n                            \"id\": 13\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Member\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 711\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"ObjectType\",\n                            \"name\": \"mtype\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"userarg1\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"epsilon\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Signal\",\n                            \"name\": \"signal\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"groupname\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"handle\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Pin\",\n                            \"name\": \"pin\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Param\",\n                            \"name\": \"param\",\n                            \"id\": 8\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Group\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 712\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"handle\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"userarg1\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"userarg2\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"refcount\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Member\",\n                            \"name\": \"member\",\n                            \"id\": 7\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ProtocolParameters\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 713\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"keepalive_timer\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"group_timer\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"rcomp_timer\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Vtable\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 714\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"handle\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"owner_id\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"context\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"refcount\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"version\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed64\",\n                            \"name\": \"vtable\",\n                            \"id\": 8\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Inst\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 715\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"comp_id\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"inst_id\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"inst_size\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed64\",\n                            \"name\": \"vtable\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Pin\",\n                            \"name\": \"pin\",\n                            \"id\": 16\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Param\",\n                            \"name\": \"param\",\n                            \"id\": 17\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Function\",\n                            \"name\": \"funct\",\n                            \"id\": 19\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"LogMessage\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 400\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"MsgOrigin\",\n                            \"name\": \"origin\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"pid\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"MsgLevel\",\n                            \"name\": \"level\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"tag\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"text\",\n                            \"id\": 50\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"PmCartesian\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 300\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"x\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"y\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"z\",\n                            \"id\": 30\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcPose\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 301\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"tran\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"a\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"b\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"c\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"u\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"v\",\n                            \"id\": 60\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"w\",\n                            \"id\": 70\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MotionCommand\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 600\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"cmd_code_t\",\n                            \"name\": \"command\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"commandNum\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"motor_offset\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"maxLimit\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"minLimit\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"pos\",\n                            \"id\": 60\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"center\",\n                            \"id\": 70\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"normal\",\n                            \"id\": 80\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"turn\",\n                            \"id\": 90\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"vel\",\n                            \"id\": 100\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"ini_maxvel\",\n                            \"id\": 110\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"MotionType\",\n                            \"name\": \"motion_type\",\n                            \"id\": 120\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"spindlesync\",\n                            \"id\": 130\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"acc\",\n                            \"id\": 140\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"backlash\",\n                            \"id\": 150\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"id\",\n                            \"id\": 160\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"termCond\",\n                            \"id\": 170\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"tolerance\",\n                            \"id\": 180\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"axis\",\n                            \"id\": 190\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"scale\",\n                            \"id\": 200\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"offset\",\n                            \"id\": 210\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"home\",\n                            \"id\": 220\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"home_final_vel\",\n                            \"id\": 230\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"search_vel\",\n                            \"id\": 240\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"latch_vel\",\n                            \"id\": 250\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"flags\",\n                            \"id\": 260\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"home_sequence\",\n                            \"id\": 270\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"volatile_home\",\n                            \"id\": 280\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"minFerror\",\n                            \"id\": 290\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"maxFerror\",\n                            \"id\": 300\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"wdWait\",\n                            \"id\": 310\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"debug\",\n                            \"id\": 320\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"now\",\n                            \"id\": 330\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"out\",\n                            \"id\": 340\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"start\",\n                            \"id\": 350\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"end\",\n                            \"id\": 360\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"mode\",\n                            \"id\": 370\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"comp_nominal\",\n                            \"id\": 380\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"comp_forward\",\n                            \"id\": 390\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"comp_reverse\",\n                            \"id\": 400\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"probe_type\",\n                            \"id\": 410\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"tool_offset\",\n                            \"id\": 420\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MotionStatus\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 601\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"cmd_code_t\",\n                            \"name\": \"commandEcho\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"commandNumEcho\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"cmd_status_t\",\n                            \"name\": \"commandStatus\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"carte_pos_fb\",\n                            \"id\": 40\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TaskPlanExecute\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1200\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"command\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"line\",\n                            \"id\": 30\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TaskPlanBlockDelete\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1201\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"state\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TaskPlanOptionalStop\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1202\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"state\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TaskPlanOpen\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1203\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"filename\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TaskPlanReply\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1204\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"ContainerType\",\n                            \"name\": \"cmd\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"errormsg\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TaskReply\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1205\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"ticket\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TicketUpdate\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1206\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"cticket\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"RCS_STATUS\",\n                            \"name\": \"status\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"text\",\n                            \"id\": 30\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Set_G5x\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 100\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"origin\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"OriginIndex\",\n                            \"name\": \"g5x_index\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Set_G92\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 101\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"origin\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Set_Rotation\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 102\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"rotation\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Linear_Move\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 103\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"MotionType\",\n                            \"name\": \"type\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"end\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"vel\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"ini_maxvel\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"acc\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"feed_mode\",\n                            \"id\": 60\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"indexrotary\",\n                            \"id\": 70\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Probe\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 104\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"MotionType\",\n                            \"name\": \"type\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"pos\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"vel\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"ini_maxvel\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"acc\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"uint32\",\n                            \"name\": \"probe_type\",\n                            \"id\": 60\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Circular_Move\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 105\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"MotionType\",\n                            \"name\": \"type\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"end\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"center\",\n                            \"id\": 25\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"normal\",\n                            \"id\": 27\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"vel\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"ini_maxvel\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"acc\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"feed_mode\",\n                            \"id\": 60\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"turn\",\n                            \"id\": 70\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Rigid_Tap\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 106\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"pos\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"vel\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"ini_maxvel\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"acc\",\n                            \"id\": 50\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Set_Term_Cond\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 107\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"TermConditionType\",\n                            \"name\": \"cond\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"tolerance\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Set_Spindlesync\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 108\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"feed_per_revolution\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"velocity_mode\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Delay\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 109\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"delay\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Spindle_On\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 110\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"speed\",\n                            \"id\": 10,\n                            \"options\": {\n                                \"default\": 0\n                            }\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"factor\",\n                            \"id\": 20,\n                            \"options\": {\n                                \"default\": 0\n                            }\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"xoffset\",\n                            \"id\": 30,\n                            \"options\": {\n                                \"default\": 0\n                            }\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Spindle_Speed\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 111\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"speed\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"factor\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"xoffset\",\n                            \"id\": 30\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Spindle_Orient\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 112\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"orientation\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"CanonDirection\",\n                            \"name\": \"mode\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Spindle_Wait_Orient_Complete\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 113\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"timeout\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Tool_Set_Offset\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 114\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"pocket\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"toolno\",\n                            \"id\": 15\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"offset\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"diameter\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"frontangle\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"backangle\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"orientation\",\n                            \"id\": 60\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Set_Offset\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 115\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"offset\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Tool_Prepare\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 116\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"pocket\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"tool\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Tool_Set_Number\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 117\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"tool\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Set_Fo_Enable\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 118\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"mode\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Set_So_Enable\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 119\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"mode\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Traj_Set_Fh_Enable\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 120\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"mode\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Motion_Adaptive\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 121\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"status\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Operator_Display\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 122\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"id\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"display\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Operator_Text\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 123\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"id\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"text\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Operator_Error\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 124\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"id\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"error\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Motion_Set_Dout\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 125\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"uint32\",\n                            \"name\": \"index\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"start\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"end\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"now\",\n                            \"id\": 40\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Motion_Set_Aout\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 126\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"uint32\",\n                            \"name\": \"index\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"start\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"end\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"now\",\n                            \"id\": 40\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Aux_Input_Wait\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 127\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"uint32\",\n                            \"name\": \"index\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"InputType\",\n                            \"name\": \"input_type\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"WaitType\",\n                            \"name\": \"wait_type\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"double\",\n                            \"name\": \"timeout\",\n                            \"id\": 40\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Exec_Plugin_Ca1l\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 128\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bytes\",\n                            \"name\": \"call\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Emc_Io_Plugin_Call\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 129\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bytes\",\n                            \"name\": \"call\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Value\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1500\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"ValueType\",\n                            \"name\": \"type\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"halbit\",\n                            \"id\": 100\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"halfloat\",\n                            \"id\": 101\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"hals32\",\n                            \"id\": 102\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"halu32\",\n                            \"id\": 103\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bytes\",\n                            \"name\": \"v_bytes\",\n                            \"id\": 120\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"v_int32\",\n                            \"id\": 130\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed64\",\n                            \"name\": \"v_int64\",\n                            \"id\": 140\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"v_uint32\",\n                            \"id\": 150\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed64\",\n                            \"name\": \"v_uint64\",\n                            \"id\": 160\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"v_double\",\n                            \"id\": 170\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"v_string\",\n                            \"id\": 180,\n                            \"options\": {\n                                \"(nanopb).max_size\": 41\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"v_bool\",\n                            \"id\": 190\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"carte\",\n                            \"id\": 200\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"pose\",\n                            \"id\": 220\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"RTAPICommand\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 900\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"instance\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"modname\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"rt_msglevel\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"user_msglevel\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"string\",\n                            \"name\": \"argv\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"threadname\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"threadperiod\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"use_fp\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"cpu\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"comp\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"func\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"instname\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"flags\",\n                            \"id\": 13\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"RTAPI_Message\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1000\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"msglevel\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"format\",\n                            \"id\": 20,\n                            \"options\": {\n                                \"default\": \"*** uninitialized ***\",\n                                \"(nanopb).max_size\": 100\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Value\",\n                            \"name\": \"arg\",\n                            \"id\": 30,\n                            \"options\": {\n                                \"(nanopb).max_count\": 10\n                            }\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"File\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 200\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"FileContent\",\n                            \"name\": \"encoding\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bytes\",\n                            \"name\": \"blob\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Application\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 201\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"description\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"ApplicationType\",\n                            \"name\": \"type\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"weburi\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"File\",\n                            \"name\": \"file\",\n                            \"id\": 5\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"StdoutLine\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 202\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"line\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MachineInfo\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 203\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"type\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"manufacturer\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"model\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"variant\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Launcher\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 204\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"description\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"File\",\n                            \"name\": \"image\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"MachineInfo\",\n                            \"name\": \"info\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"running\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"terminating\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"command\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"shell\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"StdoutLine\",\n                            \"name\": \"output\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"returncode\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"workdir\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"uint32\",\n                            \"name\": \"priority\",\n                            \"id\": 13\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"uint32\",\n                            \"name\": \"importance\",\n                            \"id\": 14\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Position\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 800\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"x\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"y\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"z\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"a\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"b\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"c\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"u\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"v\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"w\",\n                            \"id\": 11\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Preview\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 801\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"PreviewOpType\",\n                            \"name\": \"type\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"line_number\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"pos\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"first_end\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"second_end\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"first_axis\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"second_axis\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"rotation\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"axis_end_point\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"xy_rotation\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"plane\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"rate\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"feed_mode\",\n                            \"id\": 13\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"time\",\n                            \"id\": 14\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"text\",\n                            \"id\": 15\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"angular_units\",\n                            \"id\": 101\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"length_units\",\n                            \"id\": 102\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"probetype\",\n                            \"id\": 103\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"KinematicsType\",\n                            \"name\": \"kins\",\n                            \"id\": 104,\n                            \"options\": {\n                                \"default\": \"KT_JOINT\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"axismask\",\n                            \"id\": 105\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"g5_index\",\n                            \"id\": 106\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"pocket\",\n                            \"id\": 107\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"SourceType\",\n                            \"name\": \"stype\",\n                            \"id\": 110\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"filename\",\n                            \"id\": 111\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"cmdstring\",\n                            \"id\": 112\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"call_level\",\n                            \"id\": 113\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcToolData\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1100\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"id\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"diameter\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"frontangle\",\n                            \"id\": 13\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"backangle\",\n                            \"id\": 14\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"orientation\",\n                            \"id\": 15\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"offset\",\n                            \"id\": 16\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"comment\",\n                            \"id\": 17\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"pocket\",\n                            \"id\": 18\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusMotionAxis\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1101\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"enabled\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"fault\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"ferror_current\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"ferror_highmark\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"homed\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"homing\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"inpos\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"input\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"max_hard_limit\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"max_soft_limit\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"min_hard_limit\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"min_soft_limit\",\n                            \"id\": 13\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"output\",\n                            \"id\": 14\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"override_limits\",\n                            \"id\": 15\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"velocity\",\n                            \"id\": 16\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusConfigAxis\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1102\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcAxisType\",\n                            \"name\": \"axis_type\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"backlash\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_ferror\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_position_limit\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"min_ferror\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"min_position_limit\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"home_sequence\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_acceleration\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_velocity\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"increments\",\n                            \"id\": 12\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcProgramExtension\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1103\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"extension\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusAnalogIO\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1104\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"value\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusDigitalIO\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1105\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"value\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusLimit\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1106\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"value\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusGCode\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1107\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"value\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusMCode\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1108\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"value\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusSetting\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1109\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"value\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusConfig\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1110\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"default_acceleration\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"axes\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusConfigAxis\",\n                            \"name\": \"axis\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"axis_mask\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"cycle_time\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"debug\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcKinematicsType\",\n                            \"name\": \"kinematics_type\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_acceleration\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_velocity\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcLinearUnitsType\",\n                            \"name\": \"linear_units\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"default_velocity\",\n                            \"id\": 13\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcProgramExtension\",\n                            \"name\": \"program_extension\",\n                            \"id\": 14\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPositionOffsetType\",\n                            \"name\": \"position_offset\",\n                            \"id\": 15\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPositionFeedbackType\",\n                            \"name\": \"position_feedback\",\n                            \"id\": 16\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_feed_override\",\n                            \"id\": 17\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"min_feed_override\",\n                            \"id\": 18\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_spindle_override\",\n                            \"id\": 19\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"min_spindle_override\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"default_spindle_speed\",\n                            \"id\": 21\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"default_linear_velocity\",\n                            \"id\": 22\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"min_velocity\",\n                            \"id\": 23\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_linear_velocity\",\n                            \"id\": 24\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"min_linear_velocity\",\n                            \"id\": 25\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"default_angular_velocity\",\n                            \"id\": 26\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_angular_velocity\",\n                            \"id\": 27\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"min_angular_velocity\",\n                            \"id\": 28\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"increments\",\n                            \"id\": 29\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"grids\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"lathe\",\n                            \"id\": 31\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"geometry\",\n                            \"id\": 32\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"uint32\",\n                            \"name\": \"arcdivision\",\n                            \"id\": 33\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"no_force_homing\",\n                            \"id\": 34\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"remote_path\",\n                            \"id\": 35\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcTimeUnitsType\",\n                            \"name\": \"time_units\",\n                            \"id\": 36\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 37\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusUserCommand\",\n                            \"name\": \"user_command\",\n                            \"id\": 38\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcAngularUnitsType\",\n                            \"name\": \"angular_units\",\n                            \"id\": 39\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusMotion\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1111\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"active_queue\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"actual_position\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"adaptive_feed_enabled\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusAnalogIO\",\n                            \"name\": \"ain\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusAnalogIO\",\n                            \"name\": \"aout\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusMotionAxis\",\n                            \"name\": \"axis\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"block_delete\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"current_line\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"current_vel\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"delay_left\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusDigitalIO\",\n                            \"name\": \"din\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"distance_to_go\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusDigitalIO\",\n                            \"name\": \"dout\",\n                            \"id\": 13\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"dtg\",\n                            \"id\": 14\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"enabled\",\n                            \"id\": 15\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"feed_hold_enabled\",\n                            \"id\": 16\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"feed_override_enabled\",\n                            \"id\": 17\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"feedrate\",\n                            \"id\": 18\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"OriginIndex\",\n                            \"name\": \"g5x_index\",\n                            \"id\": 19\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"g5x_offset\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"g92_offset\",\n                            \"id\": 21\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"id\",\n                            \"id\": 23\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"inpos\",\n                            \"id\": 24\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"joint_actual_position\",\n                            \"id\": 25\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"joint_position\",\n                            \"id\": 26\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusLimit\",\n                            \"name\": \"limit\",\n                            \"id\": 27\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"motion_line\",\n                            \"id\": 28\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"MotionType\",\n                            \"name\": \"motion_type\",\n                            \"id\": 29\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcTrajectoryModeType\",\n                            \"name\": \"motion_mode\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"paused\",\n                            \"id\": 31\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"position\",\n                            \"id\": 32\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"probe_tripped\",\n                            \"id\": 33\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"probe_val\",\n                            \"id\": 34\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"probed_position\",\n                            \"id\": 35\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"probing\",\n                            \"id\": 36\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"queue\",\n                            \"id\": 37\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"queue_full\",\n                            \"id\": 38\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"rotation_xy\",\n                            \"id\": 39\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"spindle_brake\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"spindle_direction\",\n                            \"id\": 41\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"spindle_enabled\",\n                            \"id\": 42\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"spindle_increasing\",\n                            \"id\": 43\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"spindle_override_enabled\",\n                            \"id\": 44\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"spindle_speed\",\n                            \"id\": 45\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"spindlerate\",\n                            \"id\": 46\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"RCS_STATUS\",\n                            \"name\": \"state\",\n                            \"id\": 47\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_velocity\",\n                            \"id\": 48\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_acceleration\",\n                            \"id\": 49\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"rapidrate\",\n                            \"id\": 50\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusIo\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1112\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"estop\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"flood\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"lube\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"lube_level\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"mist\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"tool_offset\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcToolData\",\n                            \"name\": \"tool_table\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"pocket_prepped\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"tool_in_spindle\",\n                            \"id\": 11\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusTask\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1113\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"echo_serial_number\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcTaskExecStateType\",\n                            \"name\": \"exec_state\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"file\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"input_timeout\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"optional_stop\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"read_line\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcTaskModeType\",\n                            \"name\": \"task_mode\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"task_paused\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcTaskStateType\",\n                            \"name\": \"task_state\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"total_lines\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusInterp\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1114\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"command\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusGCode\",\n                            \"name\": \"gcodes\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcInterpStateType\",\n                            \"name\": \"interp_state\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcInterpExitCodeType\",\n                            \"name\": \"interpreter_errcode\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusMCode\",\n                            \"name\": \"mcodes\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusSetting\",\n                            \"name\": \"settings\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcCanonUnitsType\",\n                            \"name\": \"program_units\",\n                            \"id\": 7\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcCommandParameters\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1115\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"uint32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"uint32\",\n                            \"name\": \"debug_level\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"line_number\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"scale\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"velocity\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"distance\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"value\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"enable\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"command\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"path\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcTaskModeType\",\n                            \"name\": \"task_mode\",\n                            \"id\": 100\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcTaskStateType\",\n                            \"name\": \"task_state\",\n                            \"id\": 101\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcTrajectoryModeType\",\n                            \"name\": \"traj_mode\",\n                            \"id\": 102\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"pose\",\n                            \"id\": 103\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcToolData\",\n                            \"name\": \"tool_data\",\n                            \"id\": 104\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcToolData\",\n                            \"name\": \"tool_table\",\n                            \"id\": 105\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusUserCommand\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1116\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"command\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusUI\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1117\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"spindle_brake_visible\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"spindle_cw_visible\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"spindle_ccw_visible\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"spindle_stop_visible\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"spindle_plus_visible\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"spindle_minus_visible\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"spindle_override_visible\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"coolant_flood_visible\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"coolant_mist_visible\",\n                            \"id\": 9\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Container\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 500\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"ContainerType\",\n                            \"name\": \"type\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed64\",\n                            \"name\": \"tsc\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Preview\",\n                            \"name\": \"preview\",\n                            \"id\": 8,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"MotionCommand\",\n                            \"name\": \"motcmd\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"MotionStatus\",\n                            \"name\": \"motstat\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bytes\",\n                            \"name\": \"legacy_motcmd\",\n                            \"id\": 11,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bytes\",\n                            \"name\": \"legacy_motstat\",\n                            \"id\": 12,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"RTAPI_Message\",\n                            \"name\": \"rtapi_message\",\n                            \"id\": 13\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"TaskReply\",\n                            \"name\": \"task_reply\",\n                            \"id\": 14,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"TicketUpdate\",\n                            \"name\": \"ticket_update\",\n                            \"id\": 15\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bytes\",\n                            \"name\": \"syslog\",\n                            \"id\": 18,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bytes\",\n                            \"name\": \"legacy_nml\",\n                            \"id\": 19,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bytes\",\n                            \"name\": \"legacy_motconfig\",\n                            \"id\": 20,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"tv_sec\",\n                            \"id\": 21\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"tv_nsec\",\n                            \"id\": 22\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"topic\",\n                            \"id\": 23\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"reply_required\",\n                            \"id\": 24\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"InterpreterStateType\",\n                            \"name\": \"interp_state\",\n                            \"id\": 25,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"interp_name\",\n                            \"id\": 26\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"rsvp\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"ContainerType\",\n                            \"name\": \"in_reply_to\",\n                            \"id\": 33\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"RCS_STATUS\",\n                            \"name\": \"rcs_status\",\n                            \"id\": 35\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"StatusType\",\n                            \"name\": \"status\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"serial\",\n                            \"id\": 45\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"reply_serial\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"ticket\",\n                            \"id\": 55\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"reply_ticket\",\n                            \"id\": 60\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"sequence\",\n                            \"id\": 62\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"credit\",\n                            \"id\": 65\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"line_number\",\n                            \"id\": 66\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 67,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"string\",\n                            \"name\": \"note\",\n                            \"id\": 68\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"retcode\",\n                            \"id\": 69\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bytes\",\n                            \"name\": \"uuid\",\n                            \"id\": 72,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"trace\",\n                            \"id\": 75\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"instance\",\n                            \"id\": 77\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Value\",\n                            \"name\": \"value\",\n                            \"id\": 85,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"RTAPICommand\",\n                            \"name\": \"rtapicmd\",\n                            \"id\": 86,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"ServiceAnnouncement\",\n                            \"name\": \"service_announcement\",\n                            \"id\": 88,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Component\",\n                            \"name\": \"comp\",\n                            \"id\": 100,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Pin\",\n                            \"name\": \"pin\",\n                            \"id\": 2,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Signal\",\n                            \"name\": \"signal\",\n                            \"id\": 3,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Param\",\n                            \"name\": \"param\",\n                            \"id\": 103,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Thread\",\n                            \"name\": \"thread\",\n                            \"id\": 104,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Ring\",\n                            \"name\": \"ring\",\n                            \"id\": 105,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Group\",\n                            \"name\": \"group\",\n                            \"id\": 106,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Member\",\n                            \"name\": \"member\",\n                            \"id\": 107,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Function\",\n                            \"name\": \"function\",\n                            \"id\": 108,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"ProtocolParameters\",\n                            \"name\": \"pparams\",\n                            \"id\": 109,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Vtable\",\n                            \"name\": \"vtable\",\n                            \"id\": 110,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Inst\",\n                            \"name\": \"inst\",\n                            \"id\": 111,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Application\",\n                            \"name\": \"app\",\n                            \"id\": 120,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Launcher\",\n                            \"name\": \"launcher\",\n                            \"id\": 130,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 131,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"LogMessage\",\n                            \"name\": \"log_message\",\n                            \"id\": 87,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"TaskPlanExecute\",\n                            \"name\": \"tpexecute\",\n                            \"id\": 200,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"TaskPlanBlockDelete\",\n                            \"name\": \"tpblockdelete\",\n                            \"id\": 201,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"TaskPlanOptionalStop\",\n                            \"name\": \"tpoptionalstop\",\n                            \"id\": 202,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"TaskPlanOpen\",\n                            \"name\": \"tpopen\",\n                            \"id\": 203,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"TaskPlanReply\",\n                            \"name\": \"taskplan_reply\",\n                            \"id\": 210,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Traj_Set_G5x\",\n                            \"name\": \"traj_set_g5x\",\n                            \"id\": 300\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Traj_Set_G92\",\n                            \"name\": \"traj_set_g92\",\n                            \"id\": 310\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Traj_Set_Rotation\",\n                            \"name\": \"traj_set_rotation\",\n                            \"id\": 320\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Traj_Linear_Move\",\n                            \"name\": \"traj_linear_move\",\n                            \"id\": 330\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Traj_Probe\",\n                            \"name\": \"traj_probe\",\n                            \"id\": 340\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Traj_Circular_Move\",\n                            \"name\": \"traj_circular_move\",\n                            \"id\": 350\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Traj_Rigid_Tap\",\n                            \"name\": \"traj_rigid_tap\",\n                            \"id\": 360\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Traj_Set_Term_Cond\",\n                            \"name\": \"traj_set_term_cond\",\n                            \"id\": 370\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Traj_Set_Spindlesync\",\n                            \"name\": \"traj_set_spindlesync\",\n                            \"id\": 380\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Traj_Delay\",\n                            \"name\": \"traj_delay\",\n                            \"id\": 390\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Spindle_On\",\n                            \"name\": \"spindle_on\",\n                            \"id\": 400\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Spindle_Speed\",\n                            \"name\": \"spindle_speed\",\n                            \"id\": 410\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Spindle_Orient\",\n                            \"name\": \"spindle_orient\",\n                            \"id\": 420\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Spindle_Wait_Orient_Complete\",\n                            \"name\": \"spindle_wait_orient_complete\",\n                            \"id\": 430\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Tool_Set_Offset\",\n                            \"name\": \"tool_set_offet\",\n                            \"id\": 440\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Traj_Set_Offset\",\n                            \"name\": \"traj_set_offset\",\n                            \"id\": 450\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Tool_Prepare\",\n                            \"name\": \"tool_prepare\",\n                            \"id\": 460\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Tool_Set_Number\",\n                            \"name\": \"tool_set_number\",\n                            \"id\": 470\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Traj_Set_Fo_Enable\",\n                            \"name\": \"traj_set_fo_enable\",\n                            \"id\": 480\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Traj_Set_So_Enable\",\n                            \"name\": \"traj_set_so_enable\",\n                            \"id\": 490\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Traj_Set_Fh_Enable\",\n                            \"name\": \"traj_set_fh_enable\",\n                            \"id\": 500\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Motion_Adaptive\",\n                            \"name\": \"motion_adaptive\",\n                            \"id\": 510\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Operator_Display\",\n                            \"name\": \"operator_display\",\n                            \"id\": 520\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Operator_Text\",\n                            \"name\": \"operator_text\",\n                            \"id\": 530\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Operator_Error\",\n                            \"name\": \"operator_error\",\n                            \"id\": 540\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Motion_Set_Dout\",\n                            \"name\": \"motion_set_dout\",\n                            \"id\": 550\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Motion_Set_Aout\",\n                            \"name\": \"motion_set_aout\",\n                            \"id\": 560\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Aux_Input_Wait\",\n                            \"name\": \"aux_input_wait\",\n                            \"id\": 570\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Exec_Plugin_Ca1l\",\n                            \"name\": \"exec_plugin_call\",\n                            \"id\": 580\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Emc_Io_Plugin_Call\",\n                            \"name\": \"io_plugin_call\",\n                            \"id\": 590\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcStatusConfig\",\n                            \"name\": \"emc_status_config\",\n                            \"id\": 600,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcStatusMotion\",\n                            \"name\": \"emc_status_motion\",\n                            \"id\": 601,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcStatusIo\",\n                            \"name\": \"emc_status_io\",\n                            \"id\": 602,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcStatusTask\",\n                            \"name\": \"emc_status_task\",\n                            \"id\": 603,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcStatusInterp\",\n                            \"name\": \"emc_status_interp\",\n                            \"id\": 604,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcStatusUI\",\n                            \"name\": \"emc_status_ui\",\n                            \"id\": 605,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcCommandParameters\",\n                            \"name\": \"emc_command_params\",\n                            \"id\": 610,\n                            \"options\": {\n                                \"(nanopb).type\": \"FT_IGNORE\"\n                            }\n                        }\n                    ]\n                }\n            ],\n            \"enums\": [\n                {\n                    \"name\": \"ValueType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_BIT\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"HAL_FLOAT\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"HAL_S32\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"HAL_U32\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"HAL_S64\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"HAL_U64\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"STRING\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"BYTES\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"INT32\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"UINT32\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"INT64\",\n                            \"id\": 40\n                        },\n                        {\n                            \"name\": \"UINT64\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"DOUBLE\",\n                            \"id\": 60\n                        },\n                        {\n                            \"name\": \"BOOL\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"CARTESIAN\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"LEGACY_CARTESIAN\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"POSE\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"LEGACY_POSE\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalPinDirection\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_IN\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"HAL_OUT\",\n                            \"id\": 32\n                        },\n                        {\n                            \"name\": \"HAL_IO\",\n                            \"id\": 48\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalParamDirection\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_RO\",\n                            \"id\": 64\n                        },\n                        {\n                            \"name\": \"HAL_RW\",\n                            \"id\": 192\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalFunctType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"FS_LEGACY_THREADFUNC\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"FS_XTHREADFUNC\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"FS_USERLAND\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ObjectType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_OBJECT_INVALID\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"HAL_PIN\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"HAL_SIGNAL\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"HAL_PARAM\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"HAL_THREAD\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"HAL_FUNCT\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"HAL_COMPONENT\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"HAL_VTABLE\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"HAL_INST\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"HAL_RING\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"HAL_GROUP\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"HAL_PLUG\",\n                            \"id\": 12\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"msgidType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"MSGID_MAX\",\n                            \"id\": 4000\n                        },\n                        {\n                            \"name\": \"MSGID_ROUTE_DELIMITER\",\n                            \"id\": 4001\n                        },\n                        {\n                            \"name\": \"MSGID_ERROR_MSG\",\n                            \"id\": 4002\n                        },\n                        {\n                            \"name\": \"MSGID_BLOB\",\n                            \"id\": 4003\n                        },\n                        {\n                            \"name\": \"MSGID_STRING\",\n                            \"id\": 4004\n                        },\n                        {\n                            \"name\": \"MSGID_HOP\",\n                            \"id\": 4005\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"socketType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ST_ZMQ_PAIR\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_PUB\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_SUB\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_REQ\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_REP\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_DEALER\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_ROUTER\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_PULL\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_PUSH\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_XPUB\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_XSUB\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_STREAM\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_INVALID\",\n                            \"id\": 15\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"securityMechanism\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"SM_ZMQ_NONE\",\n                            \"id\": -1\n                        },\n                        {\n                            \"name\": \"SM_ZMQ_NULL\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"SM_ZMQ_PLAIN\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"SM_ZMQ_CURVE\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"RCS_STATUS\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"UNINITIALIZED_STATUS\",\n                            \"id\": -1\n                        },\n                        {\n                            \"name\": \"RCS_DONE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"RCS_EXEC\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"RCS_ERROR\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"RCS_RECEIVED\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MsgOrigin\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"MSG_KERNEL\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"MSG_RTUSER\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"MSG_ULAPI\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MsgLevel\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"RTAPI_MSG_NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_ERR\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_WARN\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_INFO\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_DBG\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_ALL\",\n                            \"id\": 5\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginDetail\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"UNIX_SIGNAL\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"INSTANCE_SHUTDOWN\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"ZMQ_SOCKET\",\n                            \"id\": 70\n                        },\n                        {\n                            \"name\": \"NML_LAYER\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"RCS_LAYER\",\n                            \"id\": 90\n                        },\n                        {\n                            \"name\": \"CMS_LAYER\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"IP_LAYER\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"TCP_LAYER\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"PGM_LAYER\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"PROCESS\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"USER_THREAD\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"RT_THREAD\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"COMPONENT\",\n                            \"id\": 40\n                        },\n                        {\n                            \"name\": \"THREAD_FUNCTION\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"COMPONENT_INIT\",\n                            \"id\": 60\n                        },\n                        {\n                            \"name\": \"COMPONENT_EXIT\",\n                            \"id\": 70\n                        },\n                        {\n                            \"name\": \"GROUP\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"PIN\",\n                            \"id\": 90\n                        },\n                        {\n                            \"name\": \"SIGNAL\",\n                            \"id\": 100\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Severity\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"S_INFORMATIONAL\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"S_WARNING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"S_FAIL\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"StatusType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ENQUEUED\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"PROCESSING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"COMPLETE\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"FAILED\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ReplyType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ON_RECEPTION\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ON_QUEUED\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ON_COMPLETION\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ALL_STEPS\",\n                            \"id\": 255\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ST_LOGGING\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ST_CONFIG\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ST_REDIS\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ST_HTTP\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ST_HTTPS\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ST_WEBSOCKET\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ST_WEBSOCKETS\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ST_RTAPI_COMMAND\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ST_STP_HALGROUP\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"ST_STP_HALRCOMP\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"ST_STP_INTERP\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"ST_STP_TASK\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"ST_HAL_RCOMMAND\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"ST_TASK_COMMAND\",\n                            \"id\": 14\n                        },\n                        {\n                            \"name\": \"ST_INTERP_COMMAND\",\n                            \"id\": 15\n                        },\n                        {\n                            \"name\": \"ST_MESSAGEBUS_COMMAND\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"ST_MESSAGEBUS_RESPONSE\",\n                            \"id\": 17\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceAPI\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"SA_ZMQ_PROTOBUF\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"SA_WS_JSON\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ContainerType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"MT_RTMESSAGE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"MT_MOTCMD\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"MT_MOTSTATUS\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTCMD\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTSTATUS\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"MT_WOU\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"MT_HALUPDATE\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_MESSAGE\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"MT_LOG_MESSAGE\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"MT_PREVIEW\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"MT_PROGRESS\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"MT_INTERP_STAT\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"MT_SYSLOG\",\n                            \"id\": 18\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_NML\",\n                            \"id\": 19\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTCONFIG\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"MT_STP_UPDATE_FULL\",\n                            \"id\": 26\n                        },\n                        {\n                            \"name\": \"MT_STP_UPDATE\",\n                            \"id\": 28\n                        },\n                        {\n                            \"name\": \"MT_STP_NOGROUP\",\n                            \"id\": 27\n                        },\n                        {\n                            \"name\": \"MT_SHUTDOWN\",\n                            \"id\": 45\n                        },\n                        {\n                            \"name\": \"MT_CONFIRM_SHUTDOWN\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE0\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE1\",\n                            \"id\": 31\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE2\",\n                            \"id\": 32\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE3\",\n                            \"id\": 33\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE4\",\n                            \"id\": 34\n                        },\n                        {\n                            \"name\": \"MT_ASCII\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"MT_UNICODE\",\n                            \"id\": 101\n                        },\n                        {\n                            \"name\": \"MT_GCODE\",\n                            \"id\": 102\n                        },\n                        {\n                            \"name\": \"MT_PYTHON\",\n                            \"id\": 103\n                        },\n                        {\n                            \"name\": \"MT_PICKLE\",\n                            \"id\": 104\n                        },\n                        {\n                            \"name\": \"MT_TCL\",\n                            \"id\": 105\n                        },\n                        {\n                            \"name\": \"MT_XML\",\n                            \"id\": 106\n                        },\n                        {\n                            \"name\": \"MT_JSON\",\n                            \"id\": 107\n                        },\n                        {\n                            \"name\": \"MT_JPEG\",\n                            \"id\": 108\n                        },\n                        {\n                            \"name\": \"MT_PNG\",\n                            \"id\": 109\n                        },\n                        {\n                            \"name\": \"MT_TIFF\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"MT_POSTSCRIPT\",\n                            \"id\": 111\n                        },\n                        {\n                            \"name\": \"MT_SVG\",\n                            \"id\": 112\n                        },\n                        {\n                            \"name\": \"MT_ZMQ_SUBSCRIBE\",\n                            \"id\": 150\n                        },\n                        {\n                            \"name\": \"MT_ZMQ_UNSUBSCRIBE\",\n                            \"id\": 151\n                        },\n                        {\n                            \"name\": \"MT_PING\",\n                            \"id\": 210\n                        },\n                        {\n                            \"name\": \"MT_PING_ACKNOWLEDGE\",\n                            \"id\": 215\n                        },\n                        {\n                            \"name\": \"MT_REJECT\",\n                            \"id\": 220\n                        },\n                        {\n                            \"name\": \"MT_DONE\",\n                            \"id\": 240\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_REQUEST\",\n                            \"id\": 250\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_ANNOUNCEMENT\",\n                            \"id\": 251\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_PROBE\",\n                            \"id\": 252\n                        },\n                        {\n                            \"name\": \"MT_MESSAGEBUS_NO_DESTINATION\",\n                            \"id\": 255\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND\",\n                            \"id\": 256\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND_CONFIRM\",\n                            \"id\": 257\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND_REJECT\",\n                            \"id\": 258\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_SET\",\n                            \"id\": 259\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_SET_REJECT\",\n                            \"id\": 260\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_ACK\",\n                            \"id\": 263\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_SET\",\n                            \"id\": 265\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_SET_REJECT\",\n                            \"id\": 266\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_GET\",\n                            \"id\": 267\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_GET_REJECT\",\n                            \"id\": 268\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_CREATE\",\n                            \"id\": 269\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_CREATE_REJECT\",\n                            \"id\": 270\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DELETE\",\n                            \"id\": 271\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DELETE_REJECT\",\n                            \"id\": 272\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_ACK\",\n                            \"id\": 273\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_ERROR\",\n                            \"id\": 274\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DESCRIBE\",\n                            \"id\": 276\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DESCRIPTION\",\n                            \"id\": 277\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_FULL_UPDATE\",\n                            \"id\": 288\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_INCREMENTAL_UPDATE\",\n                            \"id\": 289\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_ERROR\",\n                            \"id\": 290\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND\",\n                            \"id\": 294\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND_CONFIRM\",\n                            \"id\": 295\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND_REJECT\",\n                            \"id\": 296\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_FULL_UPDATE\",\n                            \"id\": 297\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_INCREMENTAL_UPDATE\",\n                            \"id\": 298\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_ERROR\",\n                            \"id\": 299\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_EXIT\",\n                            \"id\": 300\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_PING\",\n                            \"id\": 301\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_LOADRT\",\n                            \"id\": 302\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_LOG\",\n                            \"id\": 303\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_UNLOADRT\",\n                            \"id\": 305\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_NEWINST\",\n                            \"id\": 306\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_NEWTHREAD\",\n                            \"id\": 307\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_DELTHREAD\",\n                            \"id\": 308\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_CALLFUNC\",\n                            \"id\": 309\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_REPLY\",\n                            \"id\": 310\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_DELINST\",\n                            \"id\": 311\n                        },\n                        {\n                            \"name\": \"MT_LIST_APPLICATIONS\",\n                            \"id\": 350\n                        },\n                        {\n                            \"name\": \"MT_DESCRIBE_APPLICATION\",\n                            \"id\": 351\n                        },\n                        {\n                            \"name\": \"MT_RETRIEVE_APPLICATION\",\n                            \"id\": 352\n                        },\n                        {\n                            \"name\": \"MT_APPLICATION_DETAIL\",\n                            \"id\": 353\n                        },\n                        {\n                            \"name\": \"MT_ERROR\",\n                            \"id\": 360\n                        },\n                        {\n                            \"name\": \"MT_FULL_UPDATE\",\n                            \"id\": 370\n                        },\n                        {\n                            \"name\": \"MT_INCREMENTAL_UPDATE\",\n                            \"id\": 371\n                        },\n                        {\n                            \"name\": \"MT_TASK_REPLY\",\n                            \"id\": 400\n                        },\n                        {\n                            \"name\": \"MT_TICKET_UPDATE\",\n                            \"id\": 401\n                        },\n                        {\n                            \"name\": \"MT_CREDIT_UPDATE\",\n                            \"id\": 450\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_LOWER\",\n                            \"id\": 1000\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_UPPER\",\n                            \"id\": 1100\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ABORT\",\n                            \"id\": 1001\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_AXIS_ABORT\",\n                            \"id\": 1002\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE\",\n                            \"id\": 1003\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE\",\n                            \"id\": 1004\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE_AMPLIFIER\",\n                            \"id\": 1005\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE_AMPLIFIER\",\n                            \"id\": 1006\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE_WATCHDOG\",\n                            \"id\": 1007\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE_WATCHDOG\",\n                            \"id\": 1008\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ACTIVATE_JOINT\",\n                            \"id\": 1009\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DEACTIVATE_JOINT\",\n                            \"id\": 1010\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_PAUSE\",\n                            \"id\": 1011\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_RESUME\",\n                            \"id\": 1012\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_STEP\",\n                            \"id\": 1013\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FREE\",\n                            \"id\": 1014\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COORD\",\n                            \"id\": 1015\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_TELEOP\",\n                            \"id\": 1016\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_SCALE\",\n                            \"id\": 1017\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SS_ENABLE\",\n                            \"id\": 1018\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FEED_SCALE\",\n                            \"id\": 1019\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FS_ENABLE\",\n                            \"id\": 1020\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FH_ENABLE\",\n                            \"id\": 1021\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_AF_ENABLE\",\n                            \"id\": 1022\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_OVERRIDE_LIMITS\",\n                            \"id\": 1023\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_HOME\",\n                            \"id\": 1024\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_UNHOME\",\n                            \"id\": 1025\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_CONT\",\n                            \"id\": 1026\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_INCR\",\n                            \"id\": 1027\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_ABS\",\n                            \"id\": 1028\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_LINE\",\n                            \"id\": 1029\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_CIRCLE\",\n                            \"id\": 1030\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_TELEOP_VECTOR\",\n                            \"id\": 1031\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_CLEAR_PROBE_FLAGS\",\n                            \"id\": 1032\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_PROBE\",\n                            \"id\": 1033\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_RIGID_TAP\",\n                            \"id\": 1034\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_POSITION_LIMITS\",\n                            \"id\": 1035\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_BACKLASH\",\n                            \"id\": 1036\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MIN_FERROR\",\n                            \"id\": 1037\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MAX_FERROR\",\n                            \"id\": 1038\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_VEL\",\n                            \"id\": 1039\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_VEL_LIMIT\",\n                            \"id\": 1040\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_VEL_LIMIT\",\n                            \"id\": 1041\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_ACC_LIMIT\",\n                            \"id\": 1042\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_ACC\",\n                            \"id\": 1043\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_TERM_COND\",\n                            \"id\": 1044\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_NUM_AXES\",\n                            \"id\": 1045\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_WORLD_HOME\",\n                            \"id\": 1046\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_HOMING_PARAMS\",\n                            \"id\": 1047\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_DEBUG\",\n                            \"id\": 1048\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_DOUT\",\n                            \"id\": 1049\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_AOUT\",\n                            \"id\": 1050\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_SPINDLESYNC\",\n                            \"id\": 1051\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_ON\",\n                            \"id\": 1052\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_OFF\",\n                            \"id\": 1053\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_INCREASE\",\n                            \"id\": 1054\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_DECREASE\",\n                            \"id\": 1055\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 1056\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 1057\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MOTOR_OFFSET\",\n                            \"id\": 1058\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_COMP\",\n                            \"id\": 1059\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_OFFSET\",\n                            \"id\": 1060\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_OK\",\n                            \"id\": 1061\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_UNKNOWN_COMMAND\",\n                            \"id\": 1062\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_INVALID_COMMAND\",\n                            \"id\": 1063\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_INVALID_PARAMS\",\n                            \"id\": 1064\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_BAD_EXEC\",\n                            \"id\": 1065\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_DISABLED\",\n                            \"id\": 1066\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_FREE\",\n                            \"id\": 1067\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_TELEOP\",\n                            \"id\": 1068\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_COORD\",\n                            \"id\": 1069\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOINT_FLAG\",\n                            \"id\": 1070\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_FLAG\",\n                            \"id\": 1071\n                        },\n                        {\n                            \"name\": \"MT_PRU_FIRMWARE\",\n                            \"id\": 2048\n                        },\n                        {\n                            \"name\": \"MT_MESA_5I20_FIRMWARE\",\n                            \"id\": 3000\n                        },\n                        {\n                            \"name\": \"MT_BLOB\",\n                            \"id\": 4000\n                        },\n                        {\n                            \"name\": \"MT_TEST1\",\n                            \"id\": 5001\n                        },\n                        {\n                            \"name\": \"MT_TEST2\",\n                            \"id\": 5002\n                        },\n                        {\n                            \"name\": \"MT_TEST3\",\n                            \"id\": 5003\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_LOWER\",\n                            \"id\": 10000\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_UPPER\",\n                            \"id\": 13000\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_ERROR\",\n                            \"id\": 10011\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_TEXT\",\n                            \"id\": 10012\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_DISPLAY\",\n                            \"id\": 10013\n                        },\n                        {\n                            \"name\": \"MT_EMC_NULL\",\n                            \"id\": 10021\n                        },\n                        {\n                            \"name\": \"MT_EMC_SET_DEBUG\",\n                            \"id\": 10022\n                        },\n                        {\n                            \"name\": \"MT_EMC_SYSTEM_CMD\",\n                            \"id\": 10030\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_AXIS\",\n                            \"id\": 10101\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_UNITS\",\n                            \"id\": 10102\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MIN_POSITION_LIMIT\",\n                            \"id\": 10107\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MAX_POSITION_LIMIT\",\n                            \"id\": 10108\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_START_CHANGE\",\n                            \"id\": 1110\n                        },\n                        {\n                            \"name\": \"MT_EMC_EXEC_PLUGIN_CALL\",\n                            \"id\": 1112\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_PLUGIN_CALL\",\n                            \"id\": 1113\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_FERROR\",\n                            \"id\": 10111\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_HOMING_PARAMS\",\n                            \"id\": 10112\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MIN_FERROR\",\n                            \"id\": 10115\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MAX_VELOCITY\",\n                            \"id\": 10116\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_INIT\",\n                            \"id\": 10118\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_HALT\",\n                            \"id\": 10119\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ABORT\",\n                            \"id\": 10120\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ENABLE\",\n                            \"id\": 10121\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_DISABLE\",\n                            \"id\": 10122\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_HOME\",\n                            \"id\": 10123\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_UNHOME\",\n                            \"id\": 10135\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_JOG\",\n                            \"id\": 10124\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_INCR_JOG\",\n                            \"id\": 10125\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ABS_JOG\",\n                            \"id\": 10126\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ACTIVATE\",\n                            \"id\": 10127\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_DEACTIVATE\",\n                            \"id\": 10128\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_OVERRIDE_LIMITS\",\n                            \"id\": 10129\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_LOAD_COMP\",\n                            \"id\": 10131\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_BACKLASH\",\n                            \"id\": 10134\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_STAT\",\n                            \"id\": 10199\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_AXES\",\n                            \"id\": 10201\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_UNITS\",\n                            \"id\": 10202\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_CYCLE_TIME\",\n                            \"id\": 10203\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MODE\",\n                            \"id\": 10204\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_VELOCITY\",\n                            \"id\": 10205\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_ACCELERATION\",\n                            \"id\": 10206\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MAX_VELOCITY\",\n                            \"id\": 10207\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MAX_ACCELERATION\",\n                            \"id\": 10208\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SCALE\",\n                            \"id\": 10209\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MOTION_ID\",\n                            \"id\": 10210\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_INIT\",\n                            \"id\": 10211\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_HALT\",\n                            \"id\": 10212\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_ENABLE\",\n                            \"id\": 10213\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_DISABLE\",\n                            \"id\": 10214\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_ABORT\",\n                            \"id\": 10215\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_PAUSE\",\n                            \"id\": 10216\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_STEP\",\n                            \"id\": 10217\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_RESUME\",\n                            \"id\": 10218\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_DELAY\",\n                            \"id\": 10219\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_LINEAR_MOVE\",\n                            \"id\": 10220\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_CIRCULAR_MOVE\",\n                            \"id\": 10221\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TERM_COND\",\n                            \"id\": 10222\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_OFFSET\",\n                            \"id\": 10223\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_G5X\",\n                            \"id\": 10224\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_HOME\",\n                            \"id\": 10225\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_ROTATION\",\n                            \"id\": 10226\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_G92\",\n                            \"id\": 10227\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_CLEAR_PROBE_TRIPPED_FLAG\",\n                            \"id\": 10228\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_PROBE\",\n                            \"id\": 10229\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TELEOP_ENABLE\",\n                            \"id\": 10230\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TELEOP_VECTOR\",\n                            \"id\": 10231\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SPINDLESYNC\",\n                            \"id\": 10232\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SPINDLE_SCALE\",\n                            \"id\": 10233\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_FO_ENABLE\",\n                            \"id\": 10234\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SO_ENABLE\",\n                            \"id\": 10235\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_FH_ENABLE\",\n                            \"id\": 10236\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_RIGID_TAP\",\n                            \"id\": 10237\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_RAPID_SCALE\",\n                            \"id\": 10238\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_STAT\",\n                            \"id\": 10299\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_INIT\",\n                            \"id\": 10301\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_HALT\",\n                            \"id\": 10302\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_ABORT\",\n                            \"id\": 10303\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_SET_AOUT\",\n                            \"id\": 10304\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_SET_DOUT\",\n                            \"id\": 10305\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_ADAPTIVE\",\n                            \"id\": 10306\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_ORIENT\",\n                            \"id\": 10317\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_WAIT_ORIENT_COMPLETE\",\n                            \"id\": 10318\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_STAT\",\n                            \"id\": 10399\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_INIT\",\n                            \"id\": 10501\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_HALT\",\n                            \"id\": 10502\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_ABORT\",\n                            \"id\": 10503\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_SET_MODE\",\n                            \"id\": 10504\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_SET_STATE\",\n                            \"id\": 10505\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_OPEN\",\n                            \"id\": 10506\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RUN\",\n                            \"id\": 10507\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_READ\",\n                            \"id\": 10508\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_EXECUTE\",\n                            \"id\": 10509\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_PAUSE\",\n                            \"id\": 10510\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_STEP\",\n                            \"id\": 10511\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RESUME\",\n                            \"id\": 10512\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_END\",\n                            \"id\": 10513\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_CLOSE\",\n                            \"id\": 10514\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_INIT\",\n                            \"id\": 10515\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SYNCH\",\n                            \"id\": 10516\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SET_OPTIONAL_STOP\",\n                            \"id\": 10517\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SET_BLOCK_DELETE\",\n                            \"id\": 10518\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_OPTIONAL_STOP\",\n                            \"id\": 10519\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RESET\",\n                            \"id\": 10520\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_REPLY\",\n                            \"id\": 10530\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_STAT\",\n                            \"id\": 10599\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_INIT\",\n                            \"id\": 11101\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_HALT\",\n                            \"id\": 11102\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_ABORT\",\n                            \"id\": 11103\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_PREPARE\",\n                            \"id\": 11104\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_LOAD\",\n                            \"id\": 11105\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_UNLOAD\",\n                            \"id\": 11106\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_LOAD_TOOL_TABLE\",\n                            \"id\": 11107\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_SET_OFFSET\",\n                            \"id\": 11108\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_SET_NUMBER\",\n                            \"id\": 11109\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_UPDATE_TOOL_TABLE\",\n                            \"id\": 11110\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_STAT\",\n                            \"id\": 11199\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_ON\",\n                            \"id\": 11206\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_OFF\",\n                            \"id\": 11207\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_RESET\",\n                            \"id\": 11208\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_INPUT_WAIT\",\n                            \"id\": 11209\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_STAT\",\n                            \"id\": 11299\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_ON\",\n                            \"id\": 11304\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_OFF\",\n                            \"id\": 11305\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_INCREASE\",\n                            \"id\": 11309\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_DECREASE\",\n                            \"id\": 11310\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_CONSTANT\",\n                            \"id\": 11311\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 11312\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 11313\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_SPEED\",\n                            \"id\": 11316\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_STAT\",\n                            \"id\": 11399\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_MIST_ON\",\n                            \"id\": 11404\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_MIST_OFF\",\n                            \"id\": 11405\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_FLOOD_ON\",\n                            \"id\": 11406\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_FLOOD_OFF\",\n                            \"id\": 11407\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_STAT\",\n                            \"id\": 11499\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_ON\",\n                            \"id\": 11504\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_OFF\",\n                            \"id\": 11505\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_STAT\",\n                            \"id\": 11599\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_INIT\",\n                            \"id\": 11601\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_HALT\",\n                            \"id\": 11602\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_ABORT\",\n                            \"id\": 11603\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_SET_CYCLE_TIME\",\n                            \"id\": 11604\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_STAT\",\n                            \"id\": 11699\n                        },\n                        {\n                            \"name\": \"MT_EMC_INIT\",\n                            \"id\": 11901\n                        },\n                        {\n                            \"name\": \"MT_EMC_HALT\",\n                            \"id\": 11902\n                        },\n                        {\n                            \"name\": \"MT_EMC_ABORT\",\n                            \"id\": 11903\n                        },\n                        {\n                            \"name\": \"MT_EMC_STAT\",\n                            \"id\": 11999\n                        },\n                        {\n                            \"name\": \"MT_EMCSTAT_FULL_UPDATE\",\n                            \"id\": 12500\n                        },\n                        {\n                            \"name\": \"MT_EMCSTAT_INCREMENTAL_UPDATE\",\n                            \"id\": 12501\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_ERROR\",\n                            \"id\": 12510\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_TEXT\",\n                            \"id\": 12511\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_DISPLAY\",\n                            \"id\": 12512\n                        },\n                        {\n                            \"name\": \"MT_EMCCMD_EXECUTED\",\n                            \"id\": 12520\n                        },\n                        {\n                            \"name\": \"MT_EMCCMD_COMPLETED\",\n                            \"id\": 12521\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_FULL_UPDATE\",\n                            \"id\": 12600\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_INCREMENTAL_UPDATE\",\n                            \"id\": 12601\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_ERROR\",\n                            \"id\": 12602\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_START\",\n                            \"id\": 12610\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_TERMINATE\",\n                            \"id\": 12611\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_KILL\",\n                            \"id\": 12612\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_WRITE_STDIN\",\n                            \"id\": 12613\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_CALL\",\n                            \"id\": 12614\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_SHUTDOWN\",\n                            \"id\": 12615\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_SET\",\n                            \"id\": 12616\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginIndex\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ORIGIN_UNKNOWN\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ORIGIN_G54\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ORIGIN_G55\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ORIGIN_G56\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ORIGIN_G57\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ORIGIN_G58\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_1\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_2\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_3\",\n                            \"id\": 9\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TermConditionType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"_EMC_TRAJ_TERM_COND_STOP\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_EMC_TRAJ_TERM_COND_BLEND\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"CanonDirection\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"_CANON_STOPPED\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_CANON_CLOCKWISE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"_CANON_COUNTERCLOCKWISE\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"InputType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"_ANALOG_INPUT\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"_DIGITAL_INPUT\",\n                            \"id\": 1\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"WaitType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"IMMEDIATE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"RISE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"FALL\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"BE_HIGH\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"BE_LOW\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"InterpreterStateType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"INTERP_IDLE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"INTERP_RUNNING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"INTERP_SYNC_WAIT\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"INTERP_PAUSED\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"INTERP_QUEUE_WAIT\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"INTERP_ABORT_WAIT\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"INTERP_STATE_UNSET\",\n                            \"id\": 99\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MotionType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_TRAVERSE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_FEED\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_ARC\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_TOOLCHANGE\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_PROBING\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_INDEXROTARY\",\n                            \"id\": 6\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"cmd_code_t\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMCMOT_ABORT\",\n                            \"id\": 4000\n                        },\n                        {\n                            \"name\": \"EMCMOT_AXIS_ABORT\",\n                            \"id\": 4001\n                        },\n                        {\n                            \"name\": \"EMCMOT_ENABLE\",\n                            \"id\": 4002\n                        },\n                        {\n                            \"name\": \"EMCMOT_DISABLE\",\n                            \"id\": 4003\n                        },\n                        {\n                            \"name\": \"EMCMOT_ENABLE_AMPLIFIER\",\n                            \"id\": 4004\n                        },\n                        {\n                            \"name\": \"EMCMOT_DISABLE_AMPLIFIER\",\n                            \"id\": 4005\n                        },\n                        {\n                            \"name\": \"EMCMOT_ENABLE_WATCHDOG\",\n                            \"id\": 4006\n                        },\n                        {\n                            \"name\": \"EMCMOT_DISABLE_WATCHDOG\",\n                            \"id\": 4007\n                        },\n                        {\n                            \"name\": \"EMCMOT_ACTIVATE_JOINT\",\n                            \"id\": 4008\n                        },\n                        {\n                            \"name\": \"EMCMOT_DEACTIVATE_JOINT\",\n                            \"id\": 4009\n                        },\n                        {\n                            \"name\": \"EMCMOT_PAUSE\",\n                            \"id\": 4010\n                        },\n                        {\n                            \"name\": \"EMCMOT_RESUME\",\n                            \"id\": 4011\n                        },\n                        {\n                            \"name\": \"EMCMOT_STEP\",\n                            \"id\": 4012\n                        },\n                        {\n                            \"name\": \"EMCMOT_FREE\",\n                            \"id\": 4013\n                        },\n                        {\n                            \"name\": \"EMCMOT_COORD\",\n                            \"id\": 4014\n                        },\n                        {\n                            \"name\": \"EMCMOT_TELEOP\",\n                            \"id\": 4015\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_SCALE\",\n                            \"id\": 4016\n                        },\n                        {\n                            \"name\": \"EMCMOT_SS_ENABLE\",\n                            \"id\": 4017\n                        },\n                        {\n                            \"name\": \"EMCMOT_FEED_SCALE\",\n                            \"id\": 4018\n                        },\n                        {\n                            \"name\": \"EMCMOT_FS_ENABLE\",\n                            \"id\": 4019\n                        },\n                        {\n                            \"name\": \"EMCMOT_FH_ENABLE\",\n                            \"id\": 4020\n                        },\n                        {\n                            \"name\": \"EMCMOT_AF_ENABLE\",\n                            \"id\": 4021\n                        },\n                        {\n                            \"name\": \"EMCMOT_OVERRIDE_LIMITS\",\n                            \"id\": 4022\n                        },\n                        {\n                            \"name\": \"EMCMOT_HOME\",\n                            \"id\": 4023\n                        },\n                        {\n                            \"name\": \"EMCMOT_UNHOME\",\n                            \"id\": 4024\n                        },\n                        {\n                            \"name\": \"EMCMOT_JOG_CONT\",\n                            \"id\": 4025\n                        },\n                        {\n                            \"name\": \"EMCMOT_JOG_INCR\",\n                            \"id\": 4026\n                        },\n                        {\n                            \"name\": \"EMCMOT_JOG_ABS\",\n                            \"id\": 4027\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_LINE\",\n                            \"id\": 4028\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_CIRCLE\",\n                            \"id\": 4029\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_TELEOP_VECTOR\",\n                            \"id\": 4030\n                        },\n                        {\n                            \"name\": \"EMCMOT_CLEAR_PROBE_FLAGS\",\n                            \"id\": 4031\n                        },\n                        {\n                            \"name\": \"EMCMOT_PROBE\",\n                            \"id\": 4032\n                        },\n                        {\n                            \"name\": \"EMCMOT_RIGID_TAP\",\n                            \"id\": 4033\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_POSITION_LIMITS\",\n                            \"id\": 4034\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_BACKLASH\",\n                            \"id\": 4035\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_MIN_FERROR\",\n                            \"id\": 4036\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_MAX_FERROR\",\n                            \"id\": 4037\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_VEL\",\n                            \"id\": 4038\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_VEL_LIMIT\",\n                            \"id\": 4039\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_JOINT_VEL_LIMIT\",\n                            \"id\": 4040\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_JOINT_ACC_LIMIT\",\n                            \"id\": 4041\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_ACC\",\n                            \"id\": 4042\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_TERM_COND\",\n                            \"id\": 4043\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_NUM_AXES\",\n                            \"id\": 4044\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_WORLD_HOME\",\n                            \"id\": 4045\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_HOMING_PARAMS\",\n                            \"id\": 4046\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_DEBUG\",\n                            \"id\": 4047\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_DOUT\",\n                            \"id\": 4048\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_AOUT\",\n                            \"id\": 4049\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_SPINDLESYNC\",\n                            \"id\": 4050\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_ON\",\n                            \"id\": 4051\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_OFF\",\n                            \"id\": 4052\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_INCREASE\",\n                            \"id\": 4053\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_DECREASE\",\n                            \"id\": 4054\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 4055\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 4056\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_MOTOR_OFFSET\",\n                            \"id\": 4057\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_JOINT_COMP\",\n                            \"id\": 4058\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_OFFSET\",\n                            \"id\": 4059\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"cmd_status_t\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMCMOT_COMMAND_OK\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"EMCMOT_COMMAND_UNKNOWN_COMMAND\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMCMOT_COMMAND_INVALID_COMMAND\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"EMCMOT_COMMAND_INVALID_PARAMS\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"EMCMOT_COMMAND_BAD_EXEC\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ApplicationType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"QT5_QML\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"GLADEVCP\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"JAVASCRIPT\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"FileContent\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"CLEARTEXT\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ZLIB\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"KinematicsType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"KT_JOINT\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"KT_TRIVKINS\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"KT_DELTA\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"PreviewOpType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"PV_STRAIGHT_PROBE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"PV_RIGID_TAP\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"PV_STRAIGHT_FEED\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"PV_ARC_FEED\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"PV_STRAIGHT_TRAVERSE\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"PV_SET_G5X_OFFSET\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"PV_SET_G92_OFFSET\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"PV_SET_XY_ROTATION\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"PV_SELECT_PLANE\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"PV_SET_TRAVERSE_RATE\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"PV_SET_FEED_RATE\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"PV_CHANGE_TOOL\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"PV_CHANGE_TOOL_NUMBER\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"PV_DWELL\",\n                            \"id\": 14\n                        },\n                        {\n                            \"name\": \"PV_MESSAGE\",\n                            \"id\": 15\n                        },\n                        {\n                            \"name\": \"PV_COMMENT\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"PV_USE_TOOL_OFFSET\",\n                            \"id\": 17\n                        },\n                        {\n                            \"name\": \"PV_SET_PARAMS\",\n                            \"id\": 18\n                        },\n                        {\n                            \"name\": \"PV_SET_FEED_MODE\",\n                            \"id\": 19\n                        },\n                        {\n                            \"name\": \"PV_SOURCE_CONTEXT\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"PV_PREVIEW_START\",\n                            \"id\": 21\n                        },\n                        {\n                            \"name\": \"PV_PREVIEW_END\",\n                            \"id\": 22\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"SourceType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ST_NGC_FILE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ST_NGC_STRING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ST_PYTHON_METHOD\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcTaskExecStateType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMC_TASK_EXEC_ERROR\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMC_TASK_EXEC_DONE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"EMC_TASK_EXEC_WAITING_FOR_MOTION\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"EMC_TASK_EXEC_WAITING_FOR_MOTION_QUEUE\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"EMC_TASK_EXEC_WAITING_FOR_IO\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"EMC_TASK_EXEC_WAITING_FOR_MOTION_AND_IO\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"EMC_TASK_EXEC_WAITING_FOR_DELAY\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"EMC_TASK_EXEC_WAITING_FOR_SYSTEM_CMD\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"EMC_TASK_EXEC_WAITING_FOR_SPINDLE_ORIENTED\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcInterpStateType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMC_TASK_INTERP_IDLE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMC_TASK_INTERP_READING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"EMC_TASK_INTERP_PAUSED\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"EMC_TASK_INTERP_WAITING\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcInterpExitCodeType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMC_INTERP_EXIT_OK\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"EMC_INTERP_EXIT_EXIT\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMC_INTERP_EXIT_EXECUTE_FINISH\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"EMC_INTERP_EXIT_ENDFILE\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"EMC_INTERP_EXIT_FILE_NOT_OPEN\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"EMC_INTERP_EXIT_ERROR\",\n                            \"id\": 5\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcKinematicsType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"KINEMATICS_IDENTITY\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"KINEMATICS_FORWARD_ONLY\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"KINEMATICS_INVERSE_ONLY\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"KINEMATICS_BOTH\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcTrajectoryModeType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMC_TRAJ_MODE_FREE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMC_TRAJ_MODE_COORD\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"EMC_TRAJ_MODE_TELEOP\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcCanonUnitsType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"CANON_UNITS_INCH\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"CANON_UNITS_MM\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"CANON_UNITS_CM\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcLinearUnitsType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"LINEAR_UNITS_INCH\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"LINEAR_UNITS_MM\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"LINEAR_UNITS_CM\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcAngularUnitsType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ANGULAR_UNITS_DEGREES\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ANGULAR_UNITS_RADIAN\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ANGULAR_UNITS_GRAD\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcTimeUnitsType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"TIME_UNITS_MINUTE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"TIME_UNITS_SECOND\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcTaskModeType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMC_TASK_MODE_MANUAL\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMC_TASK_MODE_AUTO\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"EMC_TASK_MODE_MDI\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcTaskStateType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMC_TASK_STATE_ESTOP\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMC_TASK_STATE_ESTOP_RESET\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"EMC_TASK_STATE_OFF\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"EMC_TASK_STATE_ON\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcAxisType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMC_AXIS_LINEAR\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMC_AXIS_ANGULAR\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcPositionOffsetType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMC_CONFIG_RELATIVE_OFFSET\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMC_CONFIG_MACHINE_OFFSET\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcPositionFeedbackType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMC_CONFIG_ACTUAL_FEEDBACK\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMC_CONFIG_COMMANDED_FEEDBACK\",\n                            \"id\": 2\n                        }\n                    ]\n                }\n            ],\n            \"isNamespace\": true\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"FieldType\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"FT_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"FT_CALLBACK\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"FT_POINTER\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"FT_STATIC\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"FT_IGNORE\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"IntSize\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"IS_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"IS_8\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"IS_16\",\n                    \"id\": 16\n                },\n                {\n                    \"name\": \"IS_32\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"IS_64\",\n                    \"id\": 64\n                }\n            ]\n        }\n    ],\n    \"isNamespace\": true\n}).build();","module.exports = require(\"protobufjs\").newBuilder({})['import']({\n    \"package\": null,\n    \"syntax\": \"proto2\",\n    \"options\": {\n        \"java_package\": \"fi.kapsi.koti.jpa.nanopb\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"NanoPBOptions\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_size\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_count\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"IntSize\",\n                    \"name\": \"int_size\",\n                    \"id\": 7,\n                    \"options\": {\n                        \"default\": \"IS_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"FieldType\",\n                    \"name\": \"type\",\n                    \"id\": 3,\n                    \"options\": {\n                        \"default\": \"FT_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"long_names\",\n                    \"id\": 4,\n                    \"options\": {\n                        \"default\": true\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"packed_struct\",\n                    \"id\": 5,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"skip_message\",\n                    \"id\": 6,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"no_unions\",\n                    \"id\": 8,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"uint32\",\n                    \"name\": \"msgid\",\n                    \"id\": 9\n                }\n            ]\n        },\n        {\n            \"name\": \"machinetalk\",\n            \"fields\": [],\n            \"syntax\": \"proto2\",\n            \"messages\": [\n                {\n                    \"name\": \"PmCartesian\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 300\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"x\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"y\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"z\",\n                            \"id\": 30\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcPose\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 301\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"tran\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"a\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"b\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"c\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"u\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"v\",\n                            \"id\": 60\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"w\",\n                            \"id\": 70\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MotionCommand\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 600\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"cmd_code_t\",\n                            \"name\": \"command\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"commandNum\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"motor_offset\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"maxLimit\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"minLimit\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"pos\",\n                            \"id\": 60\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"center\",\n                            \"id\": 70\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"normal\",\n                            \"id\": 80\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"turn\",\n                            \"id\": 90\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"vel\",\n                            \"id\": 100\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"ini_maxvel\",\n                            \"id\": 110\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"MotionType\",\n                            \"name\": \"motion_type\",\n                            \"id\": 120\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"spindlesync\",\n                            \"id\": 130\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"acc\",\n                            \"id\": 140\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"backlash\",\n                            \"id\": 150\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"id\",\n                            \"id\": 160\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"termCond\",\n                            \"id\": 170\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"tolerance\",\n                            \"id\": 180\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"axis\",\n                            \"id\": 190\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"scale\",\n                            \"id\": 200\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"offset\",\n                            \"id\": 210\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"home\",\n                            \"id\": 220\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"home_final_vel\",\n                            \"id\": 230\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"search_vel\",\n                            \"id\": 240\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"latch_vel\",\n                            \"id\": 250\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"flags\",\n                            \"id\": 260\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"home_sequence\",\n                            \"id\": 270\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"volatile_home\",\n                            \"id\": 280\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"minFerror\",\n                            \"id\": 290\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"maxFerror\",\n                            \"id\": 300\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"wdWait\",\n                            \"id\": 310\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"debug\",\n                            \"id\": 320\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"now\",\n                            \"id\": 330\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"out\",\n                            \"id\": 340\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"start\",\n                            \"id\": 350\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"end\",\n                            \"id\": 360\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"mode\",\n                            \"id\": 370\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"comp_nominal\",\n                            \"id\": 380\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"comp_forward\",\n                            \"id\": 390\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"comp_reverse\",\n                            \"id\": 400\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"probe_type\",\n                            \"id\": 410\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"tool_offset\",\n                            \"id\": 420\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MotionStatus\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 601\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"cmd_code_t\",\n                            \"name\": \"commandEcho\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"commandNumEcho\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"cmd_status_t\",\n                            \"name\": \"commandStatus\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"carte_pos_fb\",\n                            \"id\": 40\n                        }\n                    ]\n                }\n            ],\n            \"enums\": [\n                {\n                    \"name\": \"MotionType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_TRAVERSE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_FEED\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_ARC\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_TOOLCHANGE\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_PROBING\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_INDEXROTARY\",\n                            \"id\": 6\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"cmd_code_t\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMCMOT_ABORT\",\n                            \"id\": 4000\n                        },\n                        {\n                            \"name\": \"EMCMOT_AXIS_ABORT\",\n                            \"id\": 4001\n                        },\n                        {\n                            \"name\": \"EMCMOT_ENABLE\",\n                            \"id\": 4002\n                        },\n                        {\n                            \"name\": \"EMCMOT_DISABLE\",\n                            \"id\": 4003\n                        },\n                        {\n                            \"name\": \"EMCMOT_ENABLE_AMPLIFIER\",\n                            \"id\": 4004\n                        },\n                        {\n                            \"name\": \"EMCMOT_DISABLE_AMPLIFIER\",\n                            \"id\": 4005\n                        },\n                        {\n                            \"name\": \"EMCMOT_ENABLE_WATCHDOG\",\n                            \"id\": 4006\n                        },\n                        {\n                            \"name\": \"EMCMOT_DISABLE_WATCHDOG\",\n                            \"id\": 4007\n                        },\n                        {\n                            \"name\": \"EMCMOT_ACTIVATE_JOINT\",\n                            \"id\": 4008\n                        },\n                        {\n                            \"name\": \"EMCMOT_DEACTIVATE_JOINT\",\n                            \"id\": 4009\n                        },\n                        {\n                            \"name\": \"EMCMOT_PAUSE\",\n                            \"id\": 4010\n                        },\n                        {\n                            \"name\": \"EMCMOT_RESUME\",\n                            \"id\": 4011\n                        },\n                        {\n                            \"name\": \"EMCMOT_STEP\",\n                            \"id\": 4012\n                        },\n                        {\n                            \"name\": \"EMCMOT_FREE\",\n                            \"id\": 4013\n                        },\n                        {\n                            \"name\": \"EMCMOT_COORD\",\n                            \"id\": 4014\n                        },\n                        {\n                            \"name\": \"EMCMOT_TELEOP\",\n                            \"id\": 4015\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_SCALE\",\n                            \"id\": 4016\n                        },\n                        {\n                            \"name\": \"EMCMOT_SS_ENABLE\",\n                            \"id\": 4017\n                        },\n                        {\n                            \"name\": \"EMCMOT_FEED_SCALE\",\n                            \"id\": 4018\n                        },\n                        {\n                            \"name\": \"EMCMOT_FS_ENABLE\",\n                            \"id\": 4019\n                        },\n                        {\n                            \"name\": \"EMCMOT_FH_ENABLE\",\n                            \"id\": 4020\n                        },\n                        {\n                            \"name\": \"EMCMOT_AF_ENABLE\",\n                            \"id\": 4021\n                        },\n                        {\n                            \"name\": \"EMCMOT_OVERRIDE_LIMITS\",\n                            \"id\": 4022\n                        },\n                        {\n                            \"name\": \"EMCMOT_HOME\",\n                            \"id\": 4023\n                        },\n                        {\n                            \"name\": \"EMCMOT_UNHOME\",\n                            \"id\": 4024\n                        },\n                        {\n                            \"name\": \"EMCMOT_JOG_CONT\",\n                            \"id\": 4025\n                        },\n                        {\n                            \"name\": \"EMCMOT_JOG_INCR\",\n                            \"id\": 4026\n                        },\n                        {\n                            \"name\": \"EMCMOT_JOG_ABS\",\n                            \"id\": 4027\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_LINE\",\n                            \"id\": 4028\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_CIRCLE\",\n                            \"id\": 4029\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_TELEOP_VECTOR\",\n                            \"id\": 4030\n                        },\n                        {\n                            \"name\": \"EMCMOT_CLEAR_PROBE_FLAGS\",\n                            \"id\": 4031\n                        },\n                        {\n                            \"name\": \"EMCMOT_PROBE\",\n                            \"id\": 4032\n                        },\n                        {\n                            \"name\": \"EMCMOT_RIGID_TAP\",\n                            \"id\": 4033\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_POSITION_LIMITS\",\n                            \"id\": 4034\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_BACKLASH\",\n                            \"id\": 4035\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_MIN_FERROR\",\n                            \"id\": 4036\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_MAX_FERROR\",\n                            \"id\": 4037\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_VEL\",\n                            \"id\": 4038\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_VEL_LIMIT\",\n                            \"id\": 4039\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_JOINT_VEL_LIMIT\",\n                            \"id\": 4040\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_JOINT_ACC_LIMIT\",\n                            \"id\": 4041\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_ACC\",\n                            \"id\": 4042\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_TERM_COND\",\n                            \"id\": 4043\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_NUM_AXES\",\n                            \"id\": 4044\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_WORLD_HOME\",\n                            \"id\": 4045\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_HOMING_PARAMS\",\n                            \"id\": 4046\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_DEBUG\",\n                            \"id\": 4047\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_DOUT\",\n                            \"id\": 4048\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_AOUT\",\n                            \"id\": 4049\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_SPINDLESYNC\",\n                            \"id\": 4050\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_ON\",\n                            \"id\": 4051\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_OFF\",\n                            \"id\": 4052\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_INCREASE\",\n                            \"id\": 4053\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_DECREASE\",\n                            \"id\": 4054\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 4055\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 4056\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_MOTOR_OFFSET\",\n                            \"id\": 4057\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_JOINT_COMP\",\n                            \"id\": 4058\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_OFFSET\",\n                            \"id\": 4059\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"cmd_status_t\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMCMOT_COMMAND_OK\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"EMCMOT_COMMAND_UNKNOWN_COMMAND\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMCMOT_COMMAND_INVALID_COMMAND\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"EMCMOT_COMMAND_INVALID_PARAMS\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"EMCMOT_COMMAND_BAD_EXEC\",\n                            \"id\": 4\n                        }\n                    ]\n                }\n            ],\n            \"isNamespace\": true\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"FieldType\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"FT_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"FT_CALLBACK\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"FT_POINTER\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"FT_STATIC\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"FT_IGNORE\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"IntSize\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"IS_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"IS_8\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"IS_16\",\n                    \"id\": 16\n                },\n                {\n                    \"name\": \"IS_32\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"IS_64\",\n                    \"id\": 64\n                }\n            ]\n        }\n    ],\n    \"isNamespace\": true\n}).build();","module.exports = require(\"protobufjs\").newBuilder({})['import']({\n    \"package\": null,\n    \"syntax\": \"proto2\",\n    \"options\": {\n        \"java_package\": \"fi.kapsi.koti.jpa.nanopb\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"NanoPBOptions\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_size\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_count\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"IntSize\",\n                    \"name\": \"int_size\",\n                    \"id\": 7,\n                    \"options\": {\n                        \"default\": \"IS_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"FieldType\",\n                    \"name\": \"type\",\n                    \"id\": 3,\n                    \"options\": {\n                        \"default\": \"FT_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"long_names\",\n                    \"id\": 4,\n                    \"options\": {\n                        \"default\": true\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"packed_struct\",\n                    \"id\": 5,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"skip_message\",\n                    \"id\": 6,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"no_unions\",\n                    \"id\": 8,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"uint32\",\n                    \"name\": \"msgid\",\n                    \"id\": 9\n                }\n            ]\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"FieldType\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"FT_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"FT_CALLBACK\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"FT_POINTER\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"FT_STATIC\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"FT_IGNORE\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"IntSize\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"IS_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"IS_8\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"IS_16\",\n                    \"id\": 16\n                },\n                {\n                    \"name\": \"IS_32\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"IS_64\",\n                    \"id\": 64\n                }\n            ]\n        }\n    ],\n    \"isNamespace\": true\n}).build();","module.exports = require(\"protobufjs\").newBuilder({})['import']({\n    \"package\": null,\n    \"syntax\": \"proto2\",\n    \"options\": {\n        \"java_package\": \"fi.kapsi.koti.jpa.nanopb\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"NanoPBOptions\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_size\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_count\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"IntSize\",\n                    \"name\": \"int_size\",\n                    \"id\": 7,\n                    \"options\": {\n                        \"default\": \"IS_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"FieldType\",\n                    \"name\": \"type\",\n                    \"id\": 3,\n                    \"options\": {\n                        \"default\": \"FT_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"long_names\",\n                    \"id\": 4,\n                    \"options\": {\n                        \"default\": true\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"packed_struct\",\n                    \"id\": 5,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"skip_message\",\n                    \"id\": 6,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"no_unions\",\n                    \"id\": 8,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"uint32\",\n                    \"name\": \"msgid\",\n                    \"id\": 9\n                }\n            ]\n        },\n        {\n            \"name\": \"machinetalk\",\n            \"fields\": [],\n            \"syntax\": \"proto2\",\n            \"messages\": [\n                {\n                    \"name\": \"Instance\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 700\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"id\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceAnnouncement\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 701\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"ServiceType\",\n                            \"name\": \"stype\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"version\",\n                            \"id\": 2,\n                            \"options\": {\n                                \"default\": 0\n                            }\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"instance\",\n                            \"id\": 3,\n                            \"options\": {\n                                \"default\": 0\n                            }\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"ServiceAPI\",\n                            \"name\": \"api\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"uri\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"description\",\n                            \"id\": 7\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Originator\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 702\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"OriginType\",\n                            \"name\": \"origin\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"OriginDetail\",\n                            \"name\": \"detail\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"id\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Instance\",\n                            \"name\": \"instance\",\n                            \"id\": 5\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"AnError\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 703\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"error_code\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Severity\",\n                            \"name\": \"severity\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"error_text\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Originator\",\n                            \"name\": \"origin\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Pin\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 704\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"ValueType\",\n                            \"name\": \"type\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"handle\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"HalPinDirection\",\n                            \"name\": \"dir\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"halbit\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"halfloat\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"hals32\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"halu32\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"owner\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"linked\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"oldname\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"epsilon\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"flags\",\n                            \"id\": 13\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Signal\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 705\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"ValueType\",\n                            \"name\": \"type\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"handle\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"halbit\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"halfloat\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"hals32\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"halu32\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"strval\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bytes\",\n                            \"name\": \"blob\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"readers\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"writers\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"bidirs\",\n                            \"id\": 13\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Param\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 706\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"ValueType\",\n                            \"name\": \"type\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"handle\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"halbit\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"halfloat\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"hals32\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"halu32\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"strval\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bytes\",\n                            \"name\": \"blob\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"HalParamDirection\",\n                            \"name\": \"dir\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"oldname\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"owner\",\n                            \"id\": 13\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"runtime\",\n                            \"id\": 14\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"maytime\",\n                            \"id\": 15\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Function\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 707\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"handle\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"owner_id\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"users\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"runtime\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"maxtime\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"reentrant\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"HalFunctType\",\n                            \"name\": \"type\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"maxtime_increased\",\n                            \"id\": 9\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Thread\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 708\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"handle\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"uses_fp\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"period\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"priority\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"task_id\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"cpu_id\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"string\",\n                            \"name\": \"function\",\n                            \"id\": 8\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Component\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 709\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"ninst\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"comp_id\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"type\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"state\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"last_update\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"last_bound\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"last_unbound\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"pid\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"args\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"timer\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"userarg1\",\n                            \"id\": 14\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"userarg2\",\n                            \"id\": 15\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Pin\",\n                            \"name\": \"pin\",\n                            \"id\": 16\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Param\",\n                            \"name\": \"param\",\n                            \"id\": 17\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Function\",\n                            \"name\": \"funct\",\n                            \"id\": 19\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"no_create\",\n                            \"id\": 18\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Ring\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 710\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"handle\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"owner\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"stream\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"wmutex\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"rmutex\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"rtapi_shm\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"reader\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"writer\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"total_size\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"scratchpad\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"ring_shmkey\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"encodings\",\n                            \"id\": 13\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Member\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 711\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"ObjectType\",\n                            \"name\": \"mtype\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"userarg1\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"epsilon\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Signal\",\n                            \"name\": \"signal\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"groupname\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"handle\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Pin\",\n                            \"name\": \"pin\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Param\",\n                            \"name\": \"param\",\n                            \"id\": 8\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Group\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 712\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"handle\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"userarg1\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"userarg2\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"refcount\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Member\",\n                            \"name\": \"member\",\n                            \"id\": 7\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ProtocolParameters\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 713\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"keepalive_timer\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"group_timer\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"rcomp_timer\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Vtable\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 714\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"handle\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"owner_id\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"context\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"refcount\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"version\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed64\",\n                            \"name\": \"vtable\",\n                            \"id\": 8\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Inst\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 715\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"comp_id\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"inst_id\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"inst_size\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed64\",\n                            \"name\": \"vtable\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Pin\",\n                            \"name\": \"pin\",\n                            \"id\": 16\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Param\",\n                            \"name\": \"param\",\n                            \"id\": 17\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Function\",\n                            \"name\": \"funct\",\n                            \"id\": 19\n                        }\n                    ]\n                }\n            ],\n            \"enums\": [\n                {\n                    \"name\": \"ValueType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_BIT\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"HAL_FLOAT\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"HAL_S32\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"HAL_U32\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"HAL_S64\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"HAL_U64\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"STRING\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"BYTES\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"INT32\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"UINT32\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"INT64\",\n                            \"id\": 40\n                        },\n                        {\n                            \"name\": \"UINT64\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"DOUBLE\",\n                            \"id\": 60\n                        },\n                        {\n                            \"name\": \"BOOL\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"CARTESIAN\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"LEGACY_CARTESIAN\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"POSE\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"LEGACY_POSE\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalPinDirection\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_IN\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"HAL_OUT\",\n                            \"id\": 32\n                        },\n                        {\n                            \"name\": \"HAL_IO\",\n                            \"id\": 48\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalParamDirection\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_RO\",\n                            \"id\": 64\n                        },\n                        {\n                            \"name\": \"HAL_RW\",\n                            \"id\": 192\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalFunctType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"FS_LEGACY_THREADFUNC\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"FS_XTHREADFUNC\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"FS_USERLAND\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ObjectType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_OBJECT_INVALID\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"HAL_PIN\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"HAL_SIGNAL\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"HAL_PARAM\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"HAL_THREAD\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"HAL_FUNCT\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"HAL_COMPONENT\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"HAL_VTABLE\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"HAL_INST\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"HAL_RING\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"HAL_GROUP\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"HAL_PLUG\",\n                            \"id\": 12\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"msgidType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"MSGID_MAX\",\n                            \"id\": 4000\n                        },\n                        {\n                            \"name\": \"MSGID_ROUTE_DELIMITER\",\n                            \"id\": 4001\n                        },\n                        {\n                            \"name\": \"MSGID_ERROR_MSG\",\n                            \"id\": 4002\n                        },\n                        {\n                            \"name\": \"MSGID_BLOB\",\n                            \"id\": 4003\n                        },\n                        {\n                            \"name\": \"MSGID_STRING\",\n                            \"id\": 4004\n                        },\n                        {\n                            \"name\": \"MSGID_HOP\",\n                            \"id\": 4005\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"socketType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ST_ZMQ_PAIR\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_PUB\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_SUB\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_REQ\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_REP\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_DEALER\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_ROUTER\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_PULL\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_PUSH\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_XPUB\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_XSUB\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_STREAM\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_INVALID\",\n                            \"id\": 15\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"securityMechanism\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"SM_ZMQ_NONE\",\n                            \"id\": -1\n                        },\n                        {\n                            \"name\": \"SM_ZMQ_NULL\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"SM_ZMQ_PLAIN\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"SM_ZMQ_CURVE\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"RCS_STATUS\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"UNINITIALIZED_STATUS\",\n                            \"id\": -1\n                        },\n                        {\n                            \"name\": \"RCS_DONE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"RCS_EXEC\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"RCS_ERROR\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"RCS_RECEIVED\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MsgOrigin\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"MSG_KERNEL\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"MSG_RTUSER\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"MSG_ULAPI\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MsgLevel\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"RTAPI_MSG_NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_ERR\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_WARN\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_INFO\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_DBG\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_ALL\",\n                            \"id\": 5\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginDetail\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"UNIX_SIGNAL\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"INSTANCE_SHUTDOWN\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"ZMQ_SOCKET\",\n                            \"id\": 70\n                        },\n                        {\n                            \"name\": \"NML_LAYER\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"RCS_LAYER\",\n                            \"id\": 90\n                        },\n                        {\n                            \"name\": \"CMS_LAYER\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"IP_LAYER\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"TCP_LAYER\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"PGM_LAYER\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"PROCESS\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"USER_THREAD\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"RT_THREAD\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"COMPONENT\",\n                            \"id\": 40\n                        },\n                        {\n                            \"name\": \"THREAD_FUNCTION\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"COMPONENT_INIT\",\n                            \"id\": 60\n                        },\n                        {\n                            \"name\": \"COMPONENT_EXIT\",\n                            \"id\": 70\n                        },\n                        {\n                            \"name\": \"GROUP\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"PIN\",\n                            \"id\": 90\n                        },\n                        {\n                            \"name\": \"SIGNAL\",\n                            \"id\": 100\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Severity\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"S_INFORMATIONAL\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"S_WARNING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"S_FAIL\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"StatusType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ENQUEUED\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"PROCESSING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"COMPLETE\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"FAILED\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ReplyType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ON_RECEPTION\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ON_QUEUED\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ON_COMPLETION\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ALL_STEPS\",\n                            \"id\": 255\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ST_LOGGING\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ST_CONFIG\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ST_REDIS\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ST_HTTP\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ST_HTTPS\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ST_WEBSOCKET\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ST_WEBSOCKETS\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ST_RTAPI_COMMAND\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ST_STP_HALGROUP\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"ST_STP_HALRCOMP\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"ST_STP_INTERP\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"ST_STP_TASK\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"ST_HAL_RCOMMAND\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"ST_TASK_COMMAND\",\n                            \"id\": 14\n                        },\n                        {\n                            \"name\": \"ST_INTERP_COMMAND\",\n                            \"id\": 15\n                        },\n                        {\n                            \"name\": \"ST_MESSAGEBUS_COMMAND\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"ST_MESSAGEBUS_RESPONSE\",\n                            \"id\": 17\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceAPI\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"SA_ZMQ_PROTOBUF\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"SA_WS_JSON\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ContainerType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"MT_RTMESSAGE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"MT_MOTCMD\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"MT_MOTSTATUS\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTCMD\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTSTATUS\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"MT_WOU\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"MT_HALUPDATE\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_MESSAGE\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"MT_LOG_MESSAGE\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"MT_PREVIEW\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"MT_PROGRESS\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"MT_INTERP_STAT\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"MT_SYSLOG\",\n                            \"id\": 18\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_NML\",\n                            \"id\": 19\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTCONFIG\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"MT_STP_UPDATE_FULL\",\n                            \"id\": 26\n                        },\n                        {\n                            \"name\": \"MT_STP_UPDATE\",\n                            \"id\": 28\n                        },\n                        {\n                            \"name\": \"MT_STP_NOGROUP\",\n                            \"id\": 27\n                        },\n                        {\n                            \"name\": \"MT_SHUTDOWN\",\n                            \"id\": 45\n                        },\n                        {\n                            \"name\": \"MT_CONFIRM_SHUTDOWN\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE0\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE1\",\n                            \"id\": 31\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE2\",\n                            \"id\": 32\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE3\",\n                            \"id\": 33\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE4\",\n                            \"id\": 34\n                        },\n                        {\n                            \"name\": \"MT_ASCII\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"MT_UNICODE\",\n                            \"id\": 101\n                        },\n                        {\n                            \"name\": \"MT_GCODE\",\n                            \"id\": 102\n                        },\n                        {\n                            \"name\": \"MT_PYTHON\",\n                            \"id\": 103\n                        },\n                        {\n                            \"name\": \"MT_PICKLE\",\n                            \"id\": 104\n                        },\n                        {\n                            \"name\": \"MT_TCL\",\n                            \"id\": 105\n                        },\n                        {\n                            \"name\": \"MT_XML\",\n                            \"id\": 106\n                        },\n                        {\n                            \"name\": \"MT_JSON\",\n                            \"id\": 107\n                        },\n                        {\n                            \"name\": \"MT_JPEG\",\n                            \"id\": 108\n                        },\n                        {\n                            \"name\": \"MT_PNG\",\n                            \"id\": 109\n                        },\n                        {\n                            \"name\": \"MT_TIFF\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"MT_POSTSCRIPT\",\n                            \"id\": 111\n                        },\n                        {\n                            \"name\": \"MT_SVG\",\n                            \"id\": 112\n                        },\n                        {\n                            \"name\": \"MT_ZMQ_SUBSCRIBE\",\n                            \"id\": 150\n                        },\n                        {\n                            \"name\": \"MT_ZMQ_UNSUBSCRIBE\",\n                            \"id\": 151\n                        },\n                        {\n                            \"name\": \"MT_PING\",\n                            \"id\": 210\n                        },\n                        {\n                            \"name\": \"MT_PING_ACKNOWLEDGE\",\n                            \"id\": 215\n                        },\n                        {\n                            \"name\": \"MT_REJECT\",\n                            \"id\": 220\n                        },\n                        {\n                            \"name\": \"MT_DONE\",\n                            \"id\": 240\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_REQUEST\",\n                            \"id\": 250\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_ANNOUNCEMENT\",\n                            \"id\": 251\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_PROBE\",\n                            \"id\": 252\n                        },\n                        {\n                            \"name\": \"MT_MESSAGEBUS_NO_DESTINATION\",\n                            \"id\": 255\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND\",\n                            \"id\": 256\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND_CONFIRM\",\n                            \"id\": 257\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND_REJECT\",\n                            \"id\": 258\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_SET\",\n                            \"id\": 259\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_SET_REJECT\",\n                            \"id\": 260\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_ACK\",\n                            \"id\": 263\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_SET\",\n                            \"id\": 265\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_SET_REJECT\",\n                            \"id\": 266\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_GET\",\n                            \"id\": 267\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_GET_REJECT\",\n                            \"id\": 268\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_CREATE\",\n                            \"id\": 269\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_CREATE_REJECT\",\n                            \"id\": 270\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DELETE\",\n                            \"id\": 271\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DELETE_REJECT\",\n                            \"id\": 272\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_ACK\",\n                            \"id\": 273\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_ERROR\",\n                            \"id\": 274\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DESCRIBE\",\n                            \"id\": 276\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DESCRIPTION\",\n                            \"id\": 277\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_FULL_UPDATE\",\n                            \"id\": 288\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_INCREMENTAL_UPDATE\",\n                            \"id\": 289\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_ERROR\",\n                            \"id\": 290\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND\",\n                            \"id\": 294\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND_CONFIRM\",\n                            \"id\": 295\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND_REJECT\",\n                            \"id\": 296\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_FULL_UPDATE\",\n                            \"id\": 297\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_INCREMENTAL_UPDATE\",\n                            \"id\": 298\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_ERROR\",\n                            \"id\": 299\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_EXIT\",\n                            \"id\": 300\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_PING\",\n                            \"id\": 301\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_LOADRT\",\n                            \"id\": 302\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_LOG\",\n                            \"id\": 303\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_UNLOADRT\",\n                            \"id\": 305\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_NEWINST\",\n                            \"id\": 306\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_NEWTHREAD\",\n                            \"id\": 307\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_DELTHREAD\",\n                            \"id\": 308\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_CALLFUNC\",\n                            \"id\": 309\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_REPLY\",\n                            \"id\": 310\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_DELINST\",\n                            \"id\": 311\n                        },\n                        {\n                            \"name\": \"MT_LIST_APPLICATIONS\",\n                            \"id\": 350\n                        },\n                        {\n                            \"name\": \"MT_DESCRIBE_APPLICATION\",\n                            \"id\": 351\n                        },\n                        {\n                            \"name\": \"MT_RETRIEVE_APPLICATION\",\n                            \"id\": 352\n                        },\n                        {\n                            \"name\": \"MT_APPLICATION_DETAIL\",\n                            \"id\": 353\n                        },\n                        {\n                            \"name\": \"MT_ERROR\",\n                            \"id\": 360\n                        },\n                        {\n                            \"name\": \"MT_FULL_UPDATE\",\n                            \"id\": 370\n                        },\n                        {\n                            \"name\": \"MT_INCREMENTAL_UPDATE\",\n                            \"id\": 371\n                        },\n                        {\n                            \"name\": \"MT_TASK_REPLY\",\n                            \"id\": 400\n                        },\n                        {\n                            \"name\": \"MT_TICKET_UPDATE\",\n                            \"id\": 401\n                        },\n                        {\n                            \"name\": \"MT_CREDIT_UPDATE\",\n                            \"id\": 450\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_LOWER\",\n                            \"id\": 1000\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_UPPER\",\n                            \"id\": 1100\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ABORT\",\n                            \"id\": 1001\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_AXIS_ABORT\",\n                            \"id\": 1002\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE\",\n                            \"id\": 1003\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE\",\n                            \"id\": 1004\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE_AMPLIFIER\",\n                            \"id\": 1005\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE_AMPLIFIER\",\n                            \"id\": 1006\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE_WATCHDOG\",\n                            \"id\": 1007\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE_WATCHDOG\",\n                            \"id\": 1008\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ACTIVATE_JOINT\",\n                            \"id\": 1009\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DEACTIVATE_JOINT\",\n                            \"id\": 1010\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_PAUSE\",\n                            \"id\": 1011\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_RESUME\",\n                            \"id\": 1012\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_STEP\",\n                            \"id\": 1013\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FREE\",\n                            \"id\": 1014\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COORD\",\n                            \"id\": 1015\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_TELEOP\",\n                            \"id\": 1016\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_SCALE\",\n                            \"id\": 1017\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SS_ENABLE\",\n                            \"id\": 1018\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FEED_SCALE\",\n                            \"id\": 1019\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FS_ENABLE\",\n                            \"id\": 1020\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FH_ENABLE\",\n                            \"id\": 1021\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_AF_ENABLE\",\n                            \"id\": 1022\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_OVERRIDE_LIMITS\",\n                            \"id\": 1023\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_HOME\",\n                            \"id\": 1024\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_UNHOME\",\n                            \"id\": 1025\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_CONT\",\n                            \"id\": 1026\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_INCR\",\n                            \"id\": 1027\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_ABS\",\n                            \"id\": 1028\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_LINE\",\n                            \"id\": 1029\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_CIRCLE\",\n                            \"id\": 1030\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_TELEOP_VECTOR\",\n                            \"id\": 1031\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_CLEAR_PROBE_FLAGS\",\n                            \"id\": 1032\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_PROBE\",\n                            \"id\": 1033\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_RIGID_TAP\",\n                            \"id\": 1034\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_POSITION_LIMITS\",\n                            \"id\": 1035\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_BACKLASH\",\n                            \"id\": 1036\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MIN_FERROR\",\n                            \"id\": 1037\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MAX_FERROR\",\n                            \"id\": 1038\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_VEL\",\n                            \"id\": 1039\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_VEL_LIMIT\",\n                            \"id\": 1040\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_VEL_LIMIT\",\n                            \"id\": 1041\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_ACC_LIMIT\",\n                            \"id\": 1042\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_ACC\",\n                            \"id\": 1043\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_TERM_COND\",\n                            \"id\": 1044\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_NUM_AXES\",\n                            \"id\": 1045\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_WORLD_HOME\",\n                            \"id\": 1046\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_HOMING_PARAMS\",\n                            \"id\": 1047\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_DEBUG\",\n                            \"id\": 1048\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_DOUT\",\n                            \"id\": 1049\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_AOUT\",\n                            \"id\": 1050\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_SPINDLESYNC\",\n                            \"id\": 1051\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_ON\",\n                            \"id\": 1052\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_OFF\",\n                            \"id\": 1053\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_INCREASE\",\n                            \"id\": 1054\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_DECREASE\",\n                            \"id\": 1055\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 1056\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 1057\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MOTOR_OFFSET\",\n                            \"id\": 1058\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_COMP\",\n                            \"id\": 1059\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_OFFSET\",\n                            \"id\": 1060\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_OK\",\n                            \"id\": 1061\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_UNKNOWN_COMMAND\",\n                            \"id\": 1062\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_INVALID_COMMAND\",\n                            \"id\": 1063\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_INVALID_PARAMS\",\n                            \"id\": 1064\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_BAD_EXEC\",\n                            \"id\": 1065\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_DISABLED\",\n                            \"id\": 1066\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_FREE\",\n                            \"id\": 1067\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_TELEOP\",\n                            \"id\": 1068\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_COORD\",\n                            \"id\": 1069\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOINT_FLAG\",\n                            \"id\": 1070\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_FLAG\",\n                            \"id\": 1071\n                        },\n                        {\n                            \"name\": \"MT_PRU_FIRMWARE\",\n                            \"id\": 2048\n                        },\n                        {\n                            \"name\": \"MT_MESA_5I20_FIRMWARE\",\n                            \"id\": 3000\n                        },\n                        {\n                            \"name\": \"MT_BLOB\",\n                            \"id\": 4000\n                        },\n                        {\n                            \"name\": \"MT_TEST1\",\n                            \"id\": 5001\n                        },\n                        {\n                            \"name\": \"MT_TEST2\",\n                            \"id\": 5002\n                        },\n                        {\n                            \"name\": \"MT_TEST3\",\n                            \"id\": 5003\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_LOWER\",\n                            \"id\": 10000\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_UPPER\",\n                            \"id\": 13000\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_ERROR\",\n                            \"id\": 10011\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_TEXT\",\n                            \"id\": 10012\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_DISPLAY\",\n                            \"id\": 10013\n                        },\n                        {\n                            \"name\": \"MT_EMC_NULL\",\n                            \"id\": 10021\n                        },\n                        {\n                            \"name\": \"MT_EMC_SET_DEBUG\",\n                            \"id\": 10022\n                        },\n                        {\n                            \"name\": \"MT_EMC_SYSTEM_CMD\",\n                            \"id\": 10030\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_AXIS\",\n                            \"id\": 10101\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_UNITS\",\n                            \"id\": 10102\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MIN_POSITION_LIMIT\",\n                            \"id\": 10107\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MAX_POSITION_LIMIT\",\n                            \"id\": 10108\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_START_CHANGE\",\n                            \"id\": 1110\n                        },\n                        {\n                            \"name\": \"MT_EMC_EXEC_PLUGIN_CALL\",\n                            \"id\": 1112\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_PLUGIN_CALL\",\n                            \"id\": 1113\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_FERROR\",\n                            \"id\": 10111\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_HOMING_PARAMS\",\n                            \"id\": 10112\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MIN_FERROR\",\n                            \"id\": 10115\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MAX_VELOCITY\",\n                            \"id\": 10116\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_INIT\",\n                            \"id\": 10118\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_HALT\",\n                            \"id\": 10119\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ABORT\",\n                            \"id\": 10120\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ENABLE\",\n                            \"id\": 10121\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_DISABLE\",\n                            \"id\": 10122\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_HOME\",\n                            \"id\": 10123\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_UNHOME\",\n                            \"id\": 10135\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_JOG\",\n                            \"id\": 10124\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_INCR_JOG\",\n                            \"id\": 10125\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ABS_JOG\",\n                            \"id\": 10126\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ACTIVATE\",\n                            \"id\": 10127\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_DEACTIVATE\",\n                            \"id\": 10128\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_OVERRIDE_LIMITS\",\n                            \"id\": 10129\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_LOAD_COMP\",\n                            \"id\": 10131\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_BACKLASH\",\n                            \"id\": 10134\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_STAT\",\n                            \"id\": 10199\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_AXES\",\n                            \"id\": 10201\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_UNITS\",\n                            \"id\": 10202\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_CYCLE_TIME\",\n                            \"id\": 10203\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MODE\",\n                            \"id\": 10204\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_VELOCITY\",\n                            \"id\": 10205\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_ACCELERATION\",\n                            \"id\": 10206\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MAX_VELOCITY\",\n                            \"id\": 10207\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MAX_ACCELERATION\",\n                            \"id\": 10208\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SCALE\",\n                            \"id\": 10209\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MOTION_ID\",\n                            \"id\": 10210\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_INIT\",\n                            \"id\": 10211\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_HALT\",\n                            \"id\": 10212\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_ENABLE\",\n                            \"id\": 10213\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_DISABLE\",\n                            \"id\": 10214\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_ABORT\",\n                            \"id\": 10215\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_PAUSE\",\n                            \"id\": 10216\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_STEP\",\n                            \"id\": 10217\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_RESUME\",\n                            \"id\": 10218\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_DELAY\",\n                            \"id\": 10219\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_LINEAR_MOVE\",\n                            \"id\": 10220\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_CIRCULAR_MOVE\",\n                            \"id\": 10221\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TERM_COND\",\n                            \"id\": 10222\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_OFFSET\",\n                            \"id\": 10223\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_G5X\",\n                            \"id\": 10224\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_HOME\",\n                            \"id\": 10225\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_ROTATION\",\n                            \"id\": 10226\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_G92\",\n                            \"id\": 10227\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_CLEAR_PROBE_TRIPPED_FLAG\",\n                            \"id\": 10228\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_PROBE\",\n                            \"id\": 10229\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TELEOP_ENABLE\",\n                            \"id\": 10230\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TELEOP_VECTOR\",\n                            \"id\": 10231\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SPINDLESYNC\",\n                            \"id\": 10232\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SPINDLE_SCALE\",\n                            \"id\": 10233\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_FO_ENABLE\",\n                            \"id\": 10234\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SO_ENABLE\",\n                            \"id\": 10235\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_FH_ENABLE\",\n                            \"id\": 10236\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_RIGID_TAP\",\n                            \"id\": 10237\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_RAPID_SCALE\",\n                            \"id\": 10238\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_STAT\",\n                            \"id\": 10299\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_INIT\",\n                            \"id\": 10301\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_HALT\",\n                            \"id\": 10302\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_ABORT\",\n                            \"id\": 10303\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_SET_AOUT\",\n                            \"id\": 10304\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_SET_DOUT\",\n                            \"id\": 10305\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_ADAPTIVE\",\n                            \"id\": 10306\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_ORIENT\",\n                            \"id\": 10317\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_WAIT_ORIENT_COMPLETE\",\n                            \"id\": 10318\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_STAT\",\n                            \"id\": 10399\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_INIT\",\n                            \"id\": 10501\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_HALT\",\n                            \"id\": 10502\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_ABORT\",\n                            \"id\": 10503\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_SET_MODE\",\n                            \"id\": 10504\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_SET_STATE\",\n                            \"id\": 10505\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_OPEN\",\n                            \"id\": 10506\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RUN\",\n                            \"id\": 10507\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_READ\",\n                            \"id\": 10508\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_EXECUTE\",\n                            \"id\": 10509\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_PAUSE\",\n                            \"id\": 10510\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_STEP\",\n                            \"id\": 10511\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RESUME\",\n                            \"id\": 10512\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_END\",\n                            \"id\": 10513\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_CLOSE\",\n                            \"id\": 10514\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_INIT\",\n                            \"id\": 10515\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SYNCH\",\n                            \"id\": 10516\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SET_OPTIONAL_STOP\",\n                            \"id\": 10517\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SET_BLOCK_DELETE\",\n                            \"id\": 10518\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_OPTIONAL_STOP\",\n                            \"id\": 10519\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RESET\",\n                            \"id\": 10520\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_REPLY\",\n                            \"id\": 10530\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_STAT\",\n                            \"id\": 10599\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_INIT\",\n                            \"id\": 11101\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_HALT\",\n                            \"id\": 11102\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_ABORT\",\n                            \"id\": 11103\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_PREPARE\",\n                            \"id\": 11104\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_LOAD\",\n                            \"id\": 11105\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_UNLOAD\",\n                            \"id\": 11106\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_LOAD_TOOL_TABLE\",\n                            \"id\": 11107\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_SET_OFFSET\",\n                            \"id\": 11108\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_SET_NUMBER\",\n                            \"id\": 11109\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_UPDATE_TOOL_TABLE\",\n                            \"id\": 11110\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_STAT\",\n                            \"id\": 11199\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_ON\",\n                            \"id\": 11206\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_OFF\",\n                            \"id\": 11207\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_RESET\",\n                            \"id\": 11208\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_INPUT_WAIT\",\n                            \"id\": 11209\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_STAT\",\n                            \"id\": 11299\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_ON\",\n                            \"id\": 11304\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_OFF\",\n                            \"id\": 11305\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_INCREASE\",\n                            \"id\": 11309\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_DECREASE\",\n                            \"id\": 11310\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_CONSTANT\",\n                            \"id\": 11311\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 11312\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 11313\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_SPEED\",\n                            \"id\": 11316\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_STAT\",\n                            \"id\": 11399\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_MIST_ON\",\n                            \"id\": 11404\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_MIST_OFF\",\n                            \"id\": 11405\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_FLOOD_ON\",\n                            \"id\": 11406\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_FLOOD_OFF\",\n                            \"id\": 11407\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_STAT\",\n                            \"id\": 11499\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_ON\",\n                            \"id\": 11504\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_OFF\",\n                            \"id\": 11505\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_STAT\",\n                            \"id\": 11599\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_INIT\",\n                            \"id\": 11601\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_HALT\",\n                            \"id\": 11602\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_ABORT\",\n                            \"id\": 11603\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_SET_CYCLE_TIME\",\n                            \"id\": 11604\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_STAT\",\n                            \"id\": 11699\n                        },\n                        {\n                            \"name\": \"MT_EMC_INIT\",\n                            \"id\": 11901\n                        },\n                        {\n                            \"name\": \"MT_EMC_HALT\",\n                            \"id\": 11902\n                        },\n                        {\n                            \"name\": \"MT_EMC_ABORT\",\n                            \"id\": 11903\n                        },\n                        {\n                            \"name\": \"MT_EMC_STAT\",\n                            \"id\": 11999\n                        },\n                        {\n                            \"name\": \"MT_EMCSTAT_FULL_UPDATE\",\n                            \"id\": 12500\n                        },\n                        {\n                            \"name\": \"MT_EMCSTAT_INCREMENTAL_UPDATE\",\n                            \"id\": 12501\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_ERROR\",\n                            \"id\": 12510\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_TEXT\",\n                            \"id\": 12511\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_DISPLAY\",\n                            \"id\": 12512\n                        },\n                        {\n                            \"name\": \"MT_EMCCMD_EXECUTED\",\n                            \"id\": 12520\n                        },\n                        {\n                            \"name\": \"MT_EMCCMD_COMPLETED\",\n                            \"id\": 12521\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_FULL_UPDATE\",\n                            \"id\": 12600\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_INCREMENTAL_UPDATE\",\n                            \"id\": 12601\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_ERROR\",\n                            \"id\": 12602\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_START\",\n                            \"id\": 12610\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_TERMINATE\",\n                            \"id\": 12611\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_KILL\",\n                            \"id\": 12612\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_WRITE_STDIN\",\n                            \"id\": 12613\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_CALL\",\n                            \"id\": 12614\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_SHUTDOWN\",\n                            \"id\": 12615\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_SET\",\n                            \"id\": 12616\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginIndex\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ORIGIN_UNKNOWN\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ORIGIN_G54\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ORIGIN_G55\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ORIGIN_G56\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ORIGIN_G57\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ORIGIN_G58\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_1\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_2\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_3\",\n                            \"id\": 9\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TermConditionType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"_EMC_TRAJ_TERM_COND_STOP\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_EMC_TRAJ_TERM_COND_BLEND\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"CanonDirection\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"_CANON_STOPPED\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_CANON_CLOCKWISE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"_CANON_COUNTERCLOCKWISE\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"InputType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"_ANALOG_INPUT\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"_DIGITAL_INPUT\",\n                            \"id\": 1\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"WaitType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"IMMEDIATE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"RISE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"FALL\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"BE_HIGH\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"BE_LOW\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"InterpreterStateType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"INTERP_IDLE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"INTERP_RUNNING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"INTERP_SYNC_WAIT\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"INTERP_PAUSED\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"INTERP_QUEUE_WAIT\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"INTERP_ABORT_WAIT\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"INTERP_STATE_UNSET\",\n                            \"id\": 99\n                        }\n                    ]\n                }\n            ],\n            \"isNamespace\": true\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"FieldType\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"FT_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"FT_CALLBACK\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"FT_POINTER\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"FT_STATIC\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"FT_IGNORE\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"IntSize\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"IS_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"IS_8\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"IS_16\",\n                    \"id\": 16\n                },\n                {\n                    \"name\": \"IS_32\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"IS_64\",\n                    \"id\": 64\n                }\n            ]\n        }\n    ],\n    \"isNamespace\": true\n}).build();","module.exports = require(\"protobufjs\").newBuilder({})['import']({\n    \"package\": null,\n    \"syntax\": \"proto2\",\n    \"options\": {\n        \"java_package\": \"fi.kapsi.koti.jpa.nanopb\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"NanoPBOptions\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_size\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_count\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"IntSize\",\n                    \"name\": \"int_size\",\n                    \"id\": 7,\n                    \"options\": {\n                        \"default\": \"IS_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"FieldType\",\n                    \"name\": \"type\",\n                    \"id\": 3,\n                    \"options\": {\n                        \"default\": \"FT_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"long_names\",\n                    \"id\": 4,\n                    \"options\": {\n                        \"default\": true\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"packed_struct\",\n                    \"id\": 5,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"skip_message\",\n                    \"id\": 6,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"no_unions\",\n                    \"id\": 8,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"uint32\",\n                    \"name\": \"msgid\",\n                    \"id\": 9\n                }\n            ]\n        },\n        {\n            \"name\": \"machinetalk\",\n            \"fields\": [],\n            \"syntax\": \"proto2\",\n            \"messages\": [\n                {\n                    \"name\": \"Position\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 800\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"x\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"y\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"z\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"a\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"b\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"c\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"u\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"v\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"w\",\n                            \"id\": 11\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Preview\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 801\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"PreviewOpType\",\n                            \"name\": \"type\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"line_number\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"pos\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"first_end\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"second_end\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"first_axis\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"second_axis\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"rotation\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"axis_end_point\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"xy_rotation\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"plane\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"rate\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"feed_mode\",\n                            \"id\": 13\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"time\",\n                            \"id\": 14\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"text\",\n                            \"id\": 15\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"angular_units\",\n                            \"id\": 101\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"length_units\",\n                            \"id\": 102\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"probetype\",\n                            \"id\": 103\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"KinematicsType\",\n                            \"name\": \"kins\",\n                            \"id\": 104,\n                            \"options\": {\n                                \"default\": \"KT_JOINT\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"axismask\",\n                            \"id\": 105\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"g5_index\",\n                            \"id\": 106\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"pocket\",\n                            \"id\": 107\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"SourceType\",\n                            \"name\": \"stype\",\n                            \"id\": 110\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"filename\",\n                            \"id\": 111\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"cmdstring\",\n                            \"id\": 112\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"call_level\",\n                            \"id\": 113\n                        }\n                    ]\n                }\n            ],\n            \"enums\": [\n                {\n                    \"name\": \"KinematicsType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"KT_JOINT\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"KT_TRIVKINS\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"KT_DELTA\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"PreviewOpType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"PV_STRAIGHT_PROBE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"PV_RIGID_TAP\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"PV_STRAIGHT_FEED\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"PV_ARC_FEED\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"PV_STRAIGHT_TRAVERSE\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"PV_SET_G5X_OFFSET\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"PV_SET_G92_OFFSET\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"PV_SET_XY_ROTATION\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"PV_SELECT_PLANE\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"PV_SET_TRAVERSE_RATE\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"PV_SET_FEED_RATE\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"PV_CHANGE_TOOL\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"PV_CHANGE_TOOL_NUMBER\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"PV_DWELL\",\n                            \"id\": 14\n                        },\n                        {\n                            \"name\": \"PV_MESSAGE\",\n                            \"id\": 15\n                        },\n                        {\n                            \"name\": \"PV_COMMENT\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"PV_USE_TOOL_OFFSET\",\n                            \"id\": 17\n                        },\n                        {\n                            \"name\": \"PV_SET_PARAMS\",\n                            \"id\": 18\n                        },\n                        {\n                            \"name\": \"PV_SET_FEED_MODE\",\n                            \"id\": 19\n                        },\n                        {\n                            \"name\": \"PV_SOURCE_CONTEXT\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"PV_PREVIEW_START\",\n                            \"id\": 21\n                        },\n                        {\n                            \"name\": \"PV_PREVIEW_END\",\n                            \"id\": 22\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"SourceType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ST_NGC_FILE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ST_NGC_STRING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ST_PYTHON_METHOD\",\n                            \"id\": 3\n                        }\n                    ]\n                }\n            ],\n            \"isNamespace\": true\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"FieldType\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"FT_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"FT_CALLBACK\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"FT_POINTER\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"FT_STATIC\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"FT_IGNORE\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"IntSize\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"IS_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"IS_8\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"IS_16\",\n                    \"id\": 16\n                },\n                {\n                    \"name\": \"IS_32\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"IS_64\",\n                    \"id\": 64\n                }\n            ]\n        }\n    ],\n    \"isNamespace\": true\n}).build();","module.exports = require(\"protobufjs\").newBuilder({})['import']({\n    \"package\": null,\n    \"syntax\": \"proto2\",\n    \"options\": {\n        \"java_package\": \"fi.kapsi.koti.jpa.nanopb\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"NanoPBOptions\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_size\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_count\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"IntSize\",\n                    \"name\": \"int_size\",\n                    \"id\": 7,\n                    \"options\": {\n                        \"default\": \"IS_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"FieldType\",\n                    \"name\": \"type\",\n                    \"id\": 3,\n                    \"options\": {\n                        \"default\": \"FT_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"long_names\",\n                    \"id\": 4,\n                    \"options\": {\n                        \"default\": true\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"packed_struct\",\n                    \"id\": 5,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"skip_message\",\n                    \"id\": 6,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"no_unions\",\n                    \"id\": 8,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"uint32\",\n                    \"name\": \"msgid\",\n                    \"id\": 9\n                }\n            ]\n        },\n        {\n            \"name\": \"machinetalk\",\n            \"fields\": [],\n            \"syntax\": \"proto2\",\n            \"messages\": [\n                {\n                    \"name\": \"Time\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 371\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"uint32\",\n                            \"name\": \"secs\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"uint32\",\n                            \"name\": \"nsecs\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Header\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 372\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"uint32\",\n                            \"name\": \"seq\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Time\",\n                            \"name\": \"stamp\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"frame_id\",\n                            \"id\": 3,\n                            \"options\": {\n                                \"(nanopb).max_size\": 20\n                            }\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"JointTrajectoryPoint\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 373\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"double\",\n                            \"name\": \"positions\",\n                            \"id\": 1,\n                            \"options\": {\n                                \"(nanopb).max_count\": 10\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"double\",\n                            \"name\": \"velocities\",\n                            \"id\": 2,\n                            \"options\": {\n                                \"(nanopb).max_count\": 10\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"double\",\n                            \"name\": \"accelerations\",\n                            \"id\": 3,\n                            \"options\": {\n                                \"(nanopb).max_count\": 10\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"double\",\n                            \"name\": \"effort\",\n                            \"id\": 4,\n                            \"options\": {\n                                \"(nanopb).max_count\": 10\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"time_from_start\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"duration\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"uint32\",\n                            \"name\": \"serial\",\n                            \"id\": 8\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"JointTrajectory\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 374\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Header\",\n                            \"name\": \"header\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"string\",\n                            \"name\": \"joint_names\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"JointTrajectoryPoint\",\n                            \"name\": \"points\",\n                            \"id\": 3\n                        }\n                    ]\n                }\n            ],\n            \"isNamespace\": true\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"FieldType\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"FT_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"FT_CALLBACK\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"FT_POINTER\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"FT_STATIC\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"FT_IGNORE\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"IntSize\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"IS_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"IS_8\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"IS_16\",\n                    \"id\": 16\n                },\n                {\n                    \"name\": \"IS_32\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"IS_64\",\n                    \"id\": 64\n                }\n            ]\n        }\n    ],\n    \"isNamespace\": true\n}).build();","module.exports = require(\"protobufjs\").newBuilder({})['import']({\n    \"package\": null,\n    \"syntax\": \"proto2\",\n    \"options\": {\n        \"java_package\": \"fi.kapsi.koti.jpa.nanopb\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"NanoPBOptions\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_size\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_count\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"IntSize\",\n                    \"name\": \"int_size\",\n                    \"id\": 7,\n                    \"options\": {\n                        \"default\": \"IS_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"FieldType\",\n                    \"name\": \"type\",\n                    \"id\": 3,\n                    \"options\": {\n                        \"default\": \"FT_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"long_names\",\n                    \"id\": 4,\n                    \"options\": {\n                        \"default\": true\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"packed_struct\",\n                    \"id\": 5,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"skip_message\",\n                    \"id\": 6,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"no_unions\",\n                    \"id\": 8,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"uint32\",\n                    \"name\": \"msgid\",\n                    \"id\": 9\n                }\n            ]\n        },\n        {\n            \"name\": \"machinetalk\",\n            \"fields\": [],\n            \"syntax\": \"proto2\",\n            \"messages\": [\n                {\n                    \"name\": \"PmCartesian\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 300\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"x\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"y\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"z\",\n                            \"id\": 30\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcPose\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 301\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"tran\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"a\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"b\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"c\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"u\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"v\",\n                            \"id\": 60\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"w\",\n                            \"id\": 70\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Value\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1500\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"ValueType\",\n                            \"name\": \"type\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"halbit\",\n                            \"id\": 100\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"halfloat\",\n                            \"id\": 101\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"hals32\",\n                            \"id\": 102\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"halu32\",\n                            \"id\": 103\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bytes\",\n                            \"name\": \"v_bytes\",\n                            \"id\": 120\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"v_int32\",\n                            \"id\": 130\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed64\",\n                            \"name\": \"v_int64\",\n                            \"id\": 140\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"v_uint32\",\n                            \"id\": 150\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed64\",\n                            \"name\": \"v_uint64\",\n                            \"id\": 160\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"v_double\",\n                            \"id\": 170\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"v_string\",\n                            \"id\": 180,\n                            \"options\": {\n                                \"(nanopb).max_size\": 41\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"v_bool\",\n                            \"id\": 190\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"carte\",\n                            \"id\": 200\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"pose\",\n                            \"id\": 220\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"RTAPI_Message\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1000\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"msglevel\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"format\",\n                            \"id\": 20,\n                            \"options\": {\n                                \"default\": \"*** uninitialized ***\",\n                                \"(nanopb).max_size\": 100\n                            }\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"Value\",\n                            \"name\": \"arg\",\n                            \"id\": 30,\n                            \"options\": {\n                                \"(nanopb).max_count\": 10\n                            }\n                        }\n                    ]\n                }\n            ],\n            \"enums\": [\n                {\n                    \"name\": \"ValueType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_BIT\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"HAL_FLOAT\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"HAL_S32\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"HAL_U32\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"HAL_S64\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"HAL_U64\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"STRING\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"BYTES\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"INT32\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"UINT32\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"INT64\",\n                            \"id\": 40\n                        },\n                        {\n                            \"name\": \"UINT64\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"DOUBLE\",\n                            \"id\": 60\n                        },\n                        {\n                            \"name\": \"BOOL\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"CARTESIAN\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"LEGACY_CARTESIAN\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"POSE\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"LEGACY_POSE\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalPinDirection\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_IN\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"HAL_OUT\",\n                            \"id\": 32\n                        },\n                        {\n                            \"name\": \"HAL_IO\",\n                            \"id\": 48\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalParamDirection\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_RO\",\n                            \"id\": 64\n                        },\n                        {\n                            \"name\": \"HAL_RW\",\n                            \"id\": 192\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalFunctType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"FS_LEGACY_THREADFUNC\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"FS_XTHREADFUNC\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"FS_USERLAND\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ObjectType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_OBJECT_INVALID\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"HAL_PIN\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"HAL_SIGNAL\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"HAL_PARAM\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"HAL_THREAD\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"HAL_FUNCT\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"HAL_COMPONENT\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"HAL_VTABLE\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"HAL_INST\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"HAL_RING\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"HAL_GROUP\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"HAL_PLUG\",\n                            \"id\": 12\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"msgidType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"MSGID_MAX\",\n                            \"id\": 4000\n                        },\n                        {\n                            \"name\": \"MSGID_ROUTE_DELIMITER\",\n                            \"id\": 4001\n                        },\n                        {\n                            \"name\": \"MSGID_ERROR_MSG\",\n                            \"id\": 4002\n                        },\n                        {\n                            \"name\": \"MSGID_BLOB\",\n                            \"id\": 4003\n                        },\n                        {\n                            \"name\": \"MSGID_STRING\",\n                            \"id\": 4004\n                        },\n                        {\n                            \"name\": \"MSGID_HOP\",\n                            \"id\": 4005\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"socketType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ST_ZMQ_PAIR\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_PUB\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_SUB\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_REQ\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_REP\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_DEALER\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_ROUTER\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_PULL\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_PUSH\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_XPUB\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_XSUB\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_STREAM\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_INVALID\",\n                            \"id\": 15\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"securityMechanism\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"SM_ZMQ_NONE\",\n                            \"id\": -1\n                        },\n                        {\n                            \"name\": \"SM_ZMQ_NULL\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"SM_ZMQ_PLAIN\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"SM_ZMQ_CURVE\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"RCS_STATUS\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"UNINITIALIZED_STATUS\",\n                            \"id\": -1\n                        },\n                        {\n                            \"name\": \"RCS_DONE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"RCS_EXEC\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"RCS_ERROR\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"RCS_RECEIVED\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MsgOrigin\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"MSG_KERNEL\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"MSG_RTUSER\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"MSG_ULAPI\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MsgLevel\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"RTAPI_MSG_NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_ERR\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_WARN\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_INFO\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_DBG\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_ALL\",\n                            \"id\": 5\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginDetail\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"UNIX_SIGNAL\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"INSTANCE_SHUTDOWN\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"ZMQ_SOCKET\",\n                            \"id\": 70\n                        },\n                        {\n                            \"name\": \"NML_LAYER\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"RCS_LAYER\",\n                            \"id\": 90\n                        },\n                        {\n                            \"name\": \"CMS_LAYER\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"IP_LAYER\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"TCP_LAYER\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"PGM_LAYER\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"PROCESS\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"USER_THREAD\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"RT_THREAD\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"COMPONENT\",\n                            \"id\": 40\n                        },\n                        {\n                            \"name\": \"THREAD_FUNCTION\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"COMPONENT_INIT\",\n                            \"id\": 60\n                        },\n                        {\n                            \"name\": \"COMPONENT_EXIT\",\n                            \"id\": 70\n                        },\n                        {\n                            \"name\": \"GROUP\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"PIN\",\n                            \"id\": 90\n                        },\n                        {\n                            \"name\": \"SIGNAL\",\n                            \"id\": 100\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Severity\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"S_INFORMATIONAL\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"S_WARNING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"S_FAIL\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"StatusType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ENQUEUED\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"PROCESSING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"COMPLETE\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"FAILED\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ReplyType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ON_RECEPTION\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ON_QUEUED\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ON_COMPLETION\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ALL_STEPS\",\n                            \"id\": 255\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ST_LOGGING\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ST_CONFIG\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ST_REDIS\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ST_HTTP\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ST_HTTPS\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ST_WEBSOCKET\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ST_WEBSOCKETS\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ST_RTAPI_COMMAND\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ST_STP_HALGROUP\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"ST_STP_HALRCOMP\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"ST_STP_INTERP\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"ST_STP_TASK\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"ST_HAL_RCOMMAND\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"ST_TASK_COMMAND\",\n                            \"id\": 14\n                        },\n                        {\n                            \"name\": \"ST_INTERP_COMMAND\",\n                            \"id\": 15\n                        },\n                        {\n                            \"name\": \"ST_MESSAGEBUS_COMMAND\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"ST_MESSAGEBUS_RESPONSE\",\n                            \"id\": 17\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceAPI\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"SA_ZMQ_PROTOBUF\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"SA_WS_JSON\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ContainerType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"MT_RTMESSAGE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"MT_MOTCMD\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"MT_MOTSTATUS\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTCMD\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTSTATUS\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"MT_WOU\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"MT_HALUPDATE\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_MESSAGE\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"MT_LOG_MESSAGE\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"MT_PREVIEW\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"MT_PROGRESS\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"MT_INTERP_STAT\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"MT_SYSLOG\",\n                            \"id\": 18\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_NML\",\n                            \"id\": 19\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTCONFIG\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"MT_STP_UPDATE_FULL\",\n                            \"id\": 26\n                        },\n                        {\n                            \"name\": \"MT_STP_UPDATE\",\n                            \"id\": 28\n                        },\n                        {\n                            \"name\": \"MT_STP_NOGROUP\",\n                            \"id\": 27\n                        },\n                        {\n                            \"name\": \"MT_SHUTDOWN\",\n                            \"id\": 45\n                        },\n                        {\n                            \"name\": \"MT_CONFIRM_SHUTDOWN\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE0\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE1\",\n                            \"id\": 31\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE2\",\n                            \"id\": 32\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE3\",\n                            \"id\": 33\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE4\",\n                            \"id\": 34\n                        },\n                        {\n                            \"name\": \"MT_ASCII\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"MT_UNICODE\",\n                            \"id\": 101\n                        },\n                        {\n                            \"name\": \"MT_GCODE\",\n                            \"id\": 102\n                        },\n                        {\n                            \"name\": \"MT_PYTHON\",\n                            \"id\": 103\n                        },\n                        {\n                            \"name\": \"MT_PICKLE\",\n                            \"id\": 104\n                        },\n                        {\n                            \"name\": \"MT_TCL\",\n                            \"id\": 105\n                        },\n                        {\n                            \"name\": \"MT_XML\",\n                            \"id\": 106\n                        },\n                        {\n                            \"name\": \"MT_JSON\",\n                            \"id\": 107\n                        },\n                        {\n                            \"name\": \"MT_JPEG\",\n                            \"id\": 108\n                        },\n                        {\n                            \"name\": \"MT_PNG\",\n                            \"id\": 109\n                        },\n                        {\n                            \"name\": \"MT_TIFF\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"MT_POSTSCRIPT\",\n                            \"id\": 111\n                        },\n                        {\n                            \"name\": \"MT_SVG\",\n                            \"id\": 112\n                        },\n                        {\n                            \"name\": \"MT_ZMQ_SUBSCRIBE\",\n                            \"id\": 150\n                        },\n                        {\n                            \"name\": \"MT_ZMQ_UNSUBSCRIBE\",\n                            \"id\": 151\n                        },\n                        {\n                            \"name\": \"MT_PING\",\n                            \"id\": 210\n                        },\n                        {\n                            \"name\": \"MT_PING_ACKNOWLEDGE\",\n                            \"id\": 215\n                        },\n                        {\n                            \"name\": \"MT_REJECT\",\n                            \"id\": 220\n                        },\n                        {\n                            \"name\": \"MT_DONE\",\n                            \"id\": 240\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_REQUEST\",\n                            \"id\": 250\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_ANNOUNCEMENT\",\n                            \"id\": 251\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_PROBE\",\n                            \"id\": 252\n                        },\n                        {\n                            \"name\": \"MT_MESSAGEBUS_NO_DESTINATION\",\n                            \"id\": 255\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND\",\n                            \"id\": 256\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND_CONFIRM\",\n                            \"id\": 257\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND_REJECT\",\n                            \"id\": 258\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_SET\",\n                            \"id\": 259\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_SET_REJECT\",\n                            \"id\": 260\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_ACK\",\n                            \"id\": 263\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_SET\",\n                            \"id\": 265\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_SET_REJECT\",\n                            \"id\": 266\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_GET\",\n                            \"id\": 267\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_GET_REJECT\",\n                            \"id\": 268\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_CREATE\",\n                            \"id\": 269\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_CREATE_REJECT\",\n                            \"id\": 270\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DELETE\",\n                            \"id\": 271\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DELETE_REJECT\",\n                            \"id\": 272\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_ACK\",\n                            \"id\": 273\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_ERROR\",\n                            \"id\": 274\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DESCRIBE\",\n                            \"id\": 276\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DESCRIPTION\",\n                            \"id\": 277\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_FULL_UPDATE\",\n                            \"id\": 288\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_INCREMENTAL_UPDATE\",\n                            \"id\": 289\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_ERROR\",\n                            \"id\": 290\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND\",\n                            \"id\": 294\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND_CONFIRM\",\n                            \"id\": 295\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND_REJECT\",\n                            \"id\": 296\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_FULL_UPDATE\",\n                            \"id\": 297\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_INCREMENTAL_UPDATE\",\n                            \"id\": 298\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_ERROR\",\n                            \"id\": 299\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_EXIT\",\n                            \"id\": 300\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_PING\",\n                            \"id\": 301\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_LOADRT\",\n                            \"id\": 302\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_LOG\",\n                            \"id\": 303\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_UNLOADRT\",\n                            \"id\": 305\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_NEWINST\",\n                            \"id\": 306\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_NEWTHREAD\",\n                            \"id\": 307\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_DELTHREAD\",\n                            \"id\": 308\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_CALLFUNC\",\n                            \"id\": 309\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_REPLY\",\n                            \"id\": 310\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_DELINST\",\n                            \"id\": 311\n                        },\n                        {\n                            \"name\": \"MT_LIST_APPLICATIONS\",\n                            \"id\": 350\n                        },\n                        {\n                            \"name\": \"MT_DESCRIBE_APPLICATION\",\n                            \"id\": 351\n                        },\n                        {\n                            \"name\": \"MT_RETRIEVE_APPLICATION\",\n                            \"id\": 352\n                        },\n                        {\n                            \"name\": \"MT_APPLICATION_DETAIL\",\n                            \"id\": 353\n                        },\n                        {\n                            \"name\": \"MT_ERROR\",\n                            \"id\": 360\n                        },\n                        {\n                            \"name\": \"MT_FULL_UPDATE\",\n                            \"id\": 370\n                        },\n                        {\n                            \"name\": \"MT_INCREMENTAL_UPDATE\",\n                            \"id\": 371\n                        },\n                        {\n                            \"name\": \"MT_TASK_REPLY\",\n                            \"id\": 400\n                        },\n                        {\n                            \"name\": \"MT_TICKET_UPDATE\",\n                            \"id\": 401\n                        },\n                        {\n                            \"name\": \"MT_CREDIT_UPDATE\",\n                            \"id\": 450\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_LOWER\",\n                            \"id\": 1000\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_UPPER\",\n                            \"id\": 1100\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ABORT\",\n                            \"id\": 1001\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_AXIS_ABORT\",\n                            \"id\": 1002\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE\",\n                            \"id\": 1003\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE\",\n                            \"id\": 1004\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE_AMPLIFIER\",\n                            \"id\": 1005\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE_AMPLIFIER\",\n                            \"id\": 1006\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE_WATCHDOG\",\n                            \"id\": 1007\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE_WATCHDOG\",\n                            \"id\": 1008\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ACTIVATE_JOINT\",\n                            \"id\": 1009\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DEACTIVATE_JOINT\",\n                            \"id\": 1010\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_PAUSE\",\n                            \"id\": 1011\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_RESUME\",\n                            \"id\": 1012\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_STEP\",\n                            \"id\": 1013\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FREE\",\n                            \"id\": 1014\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COORD\",\n                            \"id\": 1015\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_TELEOP\",\n                            \"id\": 1016\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_SCALE\",\n                            \"id\": 1017\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SS_ENABLE\",\n                            \"id\": 1018\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FEED_SCALE\",\n                            \"id\": 1019\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FS_ENABLE\",\n                            \"id\": 1020\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FH_ENABLE\",\n                            \"id\": 1021\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_AF_ENABLE\",\n                            \"id\": 1022\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_OVERRIDE_LIMITS\",\n                            \"id\": 1023\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_HOME\",\n                            \"id\": 1024\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_UNHOME\",\n                            \"id\": 1025\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_CONT\",\n                            \"id\": 1026\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_INCR\",\n                            \"id\": 1027\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_ABS\",\n                            \"id\": 1028\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_LINE\",\n                            \"id\": 1029\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_CIRCLE\",\n                            \"id\": 1030\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_TELEOP_VECTOR\",\n                            \"id\": 1031\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_CLEAR_PROBE_FLAGS\",\n                            \"id\": 1032\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_PROBE\",\n                            \"id\": 1033\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_RIGID_TAP\",\n                            \"id\": 1034\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_POSITION_LIMITS\",\n                            \"id\": 1035\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_BACKLASH\",\n                            \"id\": 1036\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MIN_FERROR\",\n                            \"id\": 1037\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MAX_FERROR\",\n                            \"id\": 1038\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_VEL\",\n                            \"id\": 1039\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_VEL_LIMIT\",\n                            \"id\": 1040\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_VEL_LIMIT\",\n                            \"id\": 1041\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_ACC_LIMIT\",\n                            \"id\": 1042\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_ACC\",\n                            \"id\": 1043\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_TERM_COND\",\n                            \"id\": 1044\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_NUM_AXES\",\n                            \"id\": 1045\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_WORLD_HOME\",\n                            \"id\": 1046\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_HOMING_PARAMS\",\n                            \"id\": 1047\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_DEBUG\",\n                            \"id\": 1048\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_DOUT\",\n                            \"id\": 1049\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_AOUT\",\n                            \"id\": 1050\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_SPINDLESYNC\",\n                            \"id\": 1051\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_ON\",\n                            \"id\": 1052\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_OFF\",\n                            \"id\": 1053\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_INCREASE\",\n                            \"id\": 1054\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_DECREASE\",\n                            \"id\": 1055\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 1056\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 1057\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MOTOR_OFFSET\",\n                            \"id\": 1058\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_COMP\",\n                            \"id\": 1059\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_OFFSET\",\n                            \"id\": 1060\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_OK\",\n                            \"id\": 1061\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_UNKNOWN_COMMAND\",\n                            \"id\": 1062\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_INVALID_COMMAND\",\n                            \"id\": 1063\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_INVALID_PARAMS\",\n                            \"id\": 1064\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_BAD_EXEC\",\n                            \"id\": 1065\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_DISABLED\",\n                            \"id\": 1066\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_FREE\",\n                            \"id\": 1067\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_TELEOP\",\n                            \"id\": 1068\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_COORD\",\n                            \"id\": 1069\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOINT_FLAG\",\n                            \"id\": 1070\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_FLAG\",\n                            \"id\": 1071\n                        },\n                        {\n                            \"name\": \"MT_PRU_FIRMWARE\",\n                            \"id\": 2048\n                        },\n                        {\n                            \"name\": \"MT_MESA_5I20_FIRMWARE\",\n                            \"id\": 3000\n                        },\n                        {\n                            \"name\": \"MT_BLOB\",\n                            \"id\": 4000\n                        },\n                        {\n                            \"name\": \"MT_TEST1\",\n                            \"id\": 5001\n                        },\n                        {\n                            \"name\": \"MT_TEST2\",\n                            \"id\": 5002\n                        },\n                        {\n                            \"name\": \"MT_TEST3\",\n                            \"id\": 5003\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_LOWER\",\n                            \"id\": 10000\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_UPPER\",\n                            \"id\": 13000\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_ERROR\",\n                            \"id\": 10011\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_TEXT\",\n                            \"id\": 10012\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_DISPLAY\",\n                            \"id\": 10013\n                        },\n                        {\n                            \"name\": \"MT_EMC_NULL\",\n                            \"id\": 10021\n                        },\n                        {\n                            \"name\": \"MT_EMC_SET_DEBUG\",\n                            \"id\": 10022\n                        },\n                        {\n                            \"name\": \"MT_EMC_SYSTEM_CMD\",\n                            \"id\": 10030\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_AXIS\",\n                            \"id\": 10101\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_UNITS\",\n                            \"id\": 10102\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MIN_POSITION_LIMIT\",\n                            \"id\": 10107\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MAX_POSITION_LIMIT\",\n                            \"id\": 10108\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_START_CHANGE\",\n                            \"id\": 1110\n                        },\n                        {\n                            \"name\": \"MT_EMC_EXEC_PLUGIN_CALL\",\n                            \"id\": 1112\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_PLUGIN_CALL\",\n                            \"id\": 1113\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_FERROR\",\n                            \"id\": 10111\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_HOMING_PARAMS\",\n                            \"id\": 10112\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MIN_FERROR\",\n                            \"id\": 10115\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MAX_VELOCITY\",\n                            \"id\": 10116\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_INIT\",\n                            \"id\": 10118\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_HALT\",\n                            \"id\": 10119\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ABORT\",\n                            \"id\": 10120\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ENABLE\",\n                            \"id\": 10121\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_DISABLE\",\n                            \"id\": 10122\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_HOME\",\n                            \"id\": 10123\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_UNHOME\",\n                            \"id\": 10135\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_JOG\",\n                            \"id\": 10124\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_INCR_JOG\",\n                            \"id\": 10125\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ABS_JOG\",\n                            \"id\": 10126\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ACTIVATE\",\n                            \"id\": 10127\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_DEACTIVATE\",\n                            \"id\": 10128\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_OVERRIDE_LIMITS\",\n                            \"id\": 10129\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_LOAD_COMP\",\n                            \"id\": 10131\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_BACKLASH\",\n                            \"id\": 10134\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_STAT\",\n                            \"id\": 10199\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_AXES\",\n                            \"id\": 10201\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_UNITS\",\n                            \"id\": 10202\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_CYCLE_TIME\",\n                            \"id\": 10203\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MODE\",\n                            \"id\": 10204\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_VELOCITY\",\n                            \"id\": 10205\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_ACCELERATION\",\n                            \"id\": 10206\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MAX_VELOCITY\",\n                            \"id\": 10207\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MAX_ACCELERATION\",\n                            \"id\": 10208\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SCALE\",\n                            \"id\": 10209\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MOTION_ID\",\n                            \"id\": 10210\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_INIT\",\n                            \"id\": 10211\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_HALT\",\n                            \"id\": 10212\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_ENABLE\",\n                            \"id\": 10213\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_DISABLE\",\n                            \"id\": 10214\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_ABORT\",\n                            \"id\": 10215\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_PAUSE\",\n                            \"id\": 10216\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_STEP\",\n                            \"id\": 10217\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_RESUME\",\n                            \"id\": 10218\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_DELAY\",\n                            \"id\": 10219\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_LINEAR_MOVE\",\n                            \"id\": 10220\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_CIRCULAR_MOVE\",\n                            \"id\": 10221\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TERM_COND\",\n                            \"id\": 10222\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_OFFSET\",\n                            \"id\": 10223\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_G5X\",\n                            \"id\": 10224\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_HOME\",\n                            \"id\": 10225\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_ROTATION\",\n                            \"id\": 10226\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_G92\",\n                            \"id\": 10227\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_CLEAR_PROBE_TRIPPED_FLAG\",\n                            \"id\": 10228\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_PROBE\",\n                            \"id\": 10229\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TELEOP_ENABLE\",\n                            \"id\": 10230\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TELEOP_VECTOR\",\n                            \"id\": 10231\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SPINDLESYNC\",\n                            \"id\": 10232\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SPINDLE_SCALE\",\n                            \"id\": 10233\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_FO_ENABLE\",\n                            \"id\": 10234\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SO_ENABLE\",\n                            \"id\": 10235\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_FH_ENABLE\",\n                            \"id\": 10236\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_RIGID_TAP\",\n                            \"id\": 10237\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_RAPID_SCALE\",\n                            \"id\": 10238\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_STAT\",\n                            \"id\": 10299\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_INIT\",\n                            \"id\": 10301\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_HALT\",\n                            \"id\": 10302\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_ABORT\",\n                            \"id\": 10303\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_SET_AOUT\",\n                            \"id\": 10304\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_SET_DOUT\",\n                            \"id\": 10305\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_ADAPTIVE\",\n                            \"id\": 10306\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_ORIENT\",\n                            \"id\": 10317\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_WAIT_ORIENT_COMPLETE\",\n                            \"id\": 10318\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_STAT\",\n                            \"id\": 10399\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_INIT\",\n                            \"id\": 10501\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_HALT\",\n                            \"id\": 10502\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_ABORT\",\n                            \"id\": 10503\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_SET_MODE\",\n                            \"id\": 10504\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_SET_STATE\",\n                            \"id\": 10505\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_OPEN\",\n                            \"id\": 10506\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RUN\",\n                            \"id\": 10507\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_READ\",\n                            \"id\": 10508\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_EXECUTE\",\n                            \"id\": 10509\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_PAUSE\",\n                            \"id\": 10510\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_STEP\",\n                            \"id\": 10511\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RESUME\",\n                            \"id\": 10512\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_END\",\n                            \"id\": 10513\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_CLOSE\",\n                            \"id\": 10514\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_INIT\",\n                            \"id\": 10515\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SYNCH\",\n                            \"id\": 10516\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SET_OPTIONAL_STOP\",\n                            \"id\": 10517\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SET_BLOCK_DELETE\",\n                            \"id\": 10518\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_OPTIONAL_STOP\",\n                            \"id\": 10519\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RESET\",\n                            \"id\": 10520\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_REPLY\",\n                            \"id\": 10530\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_STAT\",\n                            \"id\": 10599\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_INIT\",\n                            \"id\": 11101\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_HALT\",\n                            \"id\": 11102\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_ABORT\",\n                            \"id\": 11103\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_PREPARE\",\n                            \"id\": 11104\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_LOAD\",\n                            \"id\": 11105\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_UNLOAD\",\n                            \"id\": 11106\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_LOAD_TOOL_TABLE\",\n                            \"id\": 11107\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_SET_OFFSET\",\n                            \"id\": 11108\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_SET_NUMBER\",\n                            \"id\": 11109\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_UPDATE_TOOL_TABLE\",\n                            \"id\": 11110\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_STAT\",\n                            \"id\": 11199\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_ON\",\n                            \"id\": 11206\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_OFF\",\n                            \"id\": 11207\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_RESET\",\n                            \"id\": 11208\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_INPUT_WAIT\",\n                            \"id\": 11209\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_STAT\",\n                            \"id\": 11299\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_ON\",\n                            \"id\": 11304\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_OFF\",\n                            \"id\": 11305\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_INCREASE\",\n                            \"id\": 11309\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_DECREASE\",\n                            \"id\": 11310\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_CONSTANT\",\n                            \"id\": 11311\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 11312\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 11313\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_SPEED\",\n                            \"id\": 11316\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_STAT\",\n                            \"id\": 11399\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_MIST_ON\",\n                            \"id\": 11404\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_MIST_OFF\",\n                            \"id\": 11405\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_FLOOD_ON\",\n                            \"id\": 11406\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_FLOOD_OFF\",\n                            \"id\": 11407\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_STAT\",\n                            \"id\": 11499\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_ON\",\n                            \"id\": 11504\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_OFF\",\n                            \"id\": 11505\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_STAT\",\n                            \"id\": 11599\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_INIT\",\n                            \"id\": 11601\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_HALT\",\n                            \"id\": 11602\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_ABORT\",\n                            \"id\": 11603\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_SET_CYCLE_TIME\",\n                            \"id\": 11604\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_STAT\",\n                            \"id\": 11699\n                        },\n                        {\n                            \"name\": \"MT_EMC_INIT\",\n                            \"id\": 11901\n                        },\n                        {\n                            \"name\": \"MT_EMC_HALT\",\n                            \"id\": 11902\n                        },\n                        {\n                            \"name\": \"MT_EMC_ABORT\",\n                            \"id\": 11903\n                        },\n                        {\n                            \"name\": \"MT_EMC_STAT\",\n                            \"id\": 11999\n                        },\n                        {\n                            \"name\": \"MT_EMCSTAT_FULL_UPDATE\",\n                            \"id\": 12500\n                        },\n                        {\n                            \"name\": \"MT_EMCSTAT_INCREMENTAL_UPDATE\",\n                            \"id\": 12501\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_ERROR\",\n                            \"id\": 12510\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_TEXT\",\n                            \"id\": 12511\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_DISPLAY\",\n                            \"id\": 12512\n                        },\n                        {\n                            \"name\": \"MT_EMCCMD_EXECUTED\",\n                            \"id\": 12520\n                        },\n                        {\n                            \"name\": \"MT_EMCCMD_COMPLETED\",\n                            \"id\": 12521\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_FULL_UPDATE\",\n                            \"id\": 12600\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_INCREMENTAL_UPDATE\",\n                            \"id\": 12601\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_ERROR\",\n                            \"id\": 12602\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_START\",\n                            \"id\": 12610\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_TERMINATE\",\n                            \"id\": 12611\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_KILL\",\n                            \"id\": 12612\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_WRITE_STDIN\",\n                            \"id\": 12613\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_CALL\",\n                            \"id\": 12614\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_SHUTDOWN\",\n                            \"id\": 12615\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_SET\",\n                            \"id\": 12616\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginIndex\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ORIGIN_UNKNOWN\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ORIGIN_G54\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ORIGIN_G55\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ORIGIN_G56\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ORIGIN_G57\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ORIGIN_G58\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_1\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_2\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_3\",\n                            \"id\": 9\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TermConditionType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"_EMC_TRAJ_TERM_COND_STOP\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_EMC_TRAJ_TERM_COND_BLEND\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"CanonDirection\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"_CANON_STOPPED\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_CANON_CLOCKWISE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"_CANON_COUNTERCLOCKWISE\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"InputType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"_ANALOG_INPUT\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"_DIGITAL_INPUT\",\n                            \"id\": 1\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"WaitType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"IMMEDIATE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"RISE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"FALL\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"BE_HIGH\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"BE_LOW\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"InterpreterStateType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"INTERP_IDLE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"INTERP_RUNNING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"INTERP_SYNC_WAIT\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"INTERP_PAUSED\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"INTERP_QUEUE_WAIT\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"INTERP_ABORT_WAIT\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"INTERP_STATE_UNSET\",\n                            \"id\": 99\n                        }\n                    ]\n                }\n            ],\n            \"isNamespace\": true\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"FieldType\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"FT_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"FT_CALLBACK\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"FT_POINTER\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"FT_STATIC\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"FT_IGNORE\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"IntSize\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"IS_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"IS_8\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"IS_16\",\n                    \"id\": 16\n                },\n                {\n                    \"name\": \"IS_32\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"IS_64\",\n                    \"id\": 64\n                }\n            ]\n        }\n    ],\n    \"isNamespace\": true\n}).build();","module.exports = require(\"protobufjs\").newBuilder({})['import']({\n    \"package\": null,\n    \"syntax\": \"proto2\",\n    \"options\": {\n        \"java_package\": \"fi.kapsi.koti.jpa.nanopb\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"NanoPBOptions\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_size\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_count\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"IntSize\",\n                    \"name\": \"int_size\",\n                    \"id\": 7,\n                    \"options\": {\n                        \"default\": \"IS_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"FieldType\",\n                    \"name\": \"type\",\n                    \"id\": 3,\n                    \"options\": {\n                        \"default\": \"FT_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"long_names\",\n                    \"id\": 4,\n                    \"options\": {\n                        \"default\": true\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"packed_struct\",\n                    \"id\": 5,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"skip_message\",\n                    \"id\": 6,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"no_unions\",\n                    \"id\": 8,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"uint32\",\n                    \"name\": \"msgid\",\n                    \"id\": 9\n                }\n            ]\n        },\n        {\n            \"name\": \"machinetalk\",\n            \"fields\": [],\n            \"syntax\": \"proto2\",\n            \"messages\": [\n                {\n                    \"name\": \"RTAPICommand\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 900\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"instance\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"modname\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"rt_msglevel\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"user_msglevel\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"string\",\n                            \"name\": \"argv\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"threadname\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"threadperiod\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"use_fp\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"cpu\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"comp\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"func\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"instname\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"flags\",\n                            \"id\": 13\n                        }\n                    ]\n                }\n            ],\n            \"isNamespace\": true\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"FieldType\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"FT_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"FT_CALLBACK\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"FT_POINTER\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"FT_STATIC\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"FT_IGNORE\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"IntSize\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"IS_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"IS_8\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"IS_16\",\n                    \"id\": 16\n                },\n                {\n                    \"name\": \"IS_32\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"IS_64\",\n                    \"id\": 64\n                }\n            ]\n        }\n    ],\n    \"isNamespace\": true\n}).build();","module.exports = require(\"protobufjs\").newBuilder({})['import']({\n    \"package\": null,\n    \"syntax\": \"proto2\",\n    \"options\": {\n        \"java_package\": \"fi.kapsi.koti.jpa.nanopb\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"NanoPBOptions\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_size\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_count\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"IntSize\",\n                    \"name\": \"int_size\",\n                    \"id\": 7,\n                    \"options\": {\n                        \"default\": \"IS_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"FieldType\",\n                    \"name\": \"type\",\n                    \"id\": 3,\n                    \"options\": {\n                        \"default\": \"FT_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"long_names\",\n                    \"id\": 4,\n                    \"options\": {\n                        \"default\": true\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"packed_struct\",\n                    \"id\": 5,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"skip_message\",\n                    \"id\": 6,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"no_unions\",\n                    \"id\": 8,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"uint32\",\n                    \"name\": \"msgid\",\n                    \"id\": 9\n                }\n            ]\n        },\n        {\n            \"name\": \"machinetalk\",\n            \"fields\": [],\n            \"syntax\": \"proto2\",\n            \"messages\": [\n                {\n                    \"name\": \"Position\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 800\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"x\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"y\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"z\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"a\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"b\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"c\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"u\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"v\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"w\",\n                            \"id\": 11\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Preview\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 801\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"PreviewOpType\",\n                            \"name\": \"type\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"line_number\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"pos\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"first_end\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"second_end\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"first_axis\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"second_axis\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"rotation\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"axis_end_point\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"xy_rotation\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"plane\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"rate\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"feed_mode\",\n                            \"id\": 13\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"time\",\n                            \"id\": 14\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"text\",\n                            \"id\": 15\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"angular_units\",\n                            \"id\": 101\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"length_units\",\n                            \"id\": 102\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"probetype\",\n                            \"id\": 103\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"KinematicsType\",\n                            \"name\": \"kins\",\n                            \"id\": 104,\n                            \"options\": {\n                                \"default\": \"KT_JOINT\"\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"axismask\",\n                            \"id\": 105\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"g5_index\",\n                            \"id\": 106\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"pocket\",\n                            \"id\": 107\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"SourceType\",\n                            \"name\": \"stype\",\n                            \"id\": 110\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"filename\",\n                            \"id\": 111\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"cmdstring\",\n                            \"id\": 112\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"call_level\",\n                            \"id\": 113\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"PmCartesian\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 300\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"x\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"y\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"z\",\n                            \"id\": 30\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcPose\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 301\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"tran\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"a\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"b\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"c\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"u\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"v\",\n                            \"id\": 60\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"w\",\n                            \"id\": 70\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MotionCommand\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 600\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"cmd_code_t\",\n                            \"name\": \"command\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"commandNum\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"motor_offset\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"maxLimit\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"minLimit\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"pos\",\n                            \"id\": 60\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"center\",\n                            \"id\": 70\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"normal\",\n                            \"id\": 80\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"turn\",\n                            \"id\": 90\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"vel\",\n                            \"id\": 100\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"ini_maxvel\",\n                            \"id\": 110\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"MotionType\",\n                            \"name\": \"motion_type\",\n                            \"id\": 120\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"spindlesync\",\n                            \"id\": 130\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"acc\",\n                            \"id\": 140\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"backlash\",\n                            \"id\": 150\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"id\",\n                            \"id\": 160\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"termCond\",\n                            \"id\": 170\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"tolerance\",\n                            \"id\": 180\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"axis\",\n                            \"id\": 190\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"scale\",\n                            \"id\": 200\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"offset\",\n                            \"id\": 210\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"home\",\n                            \"id\": 220\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"home_final_vel\",\n                            \"id\": 230\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"search_vel\",\n                            \"id\": 240\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"latch_vel\",\n                            \"id\": 250\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"flags\",\n                            \"id\": 260\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"home_sequence\",\n                            \"id\": 270\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"volatile_home\",\n                            \"id\": 280\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"minFerror\",\n                            \"id\": 290\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"maxFerror\",\n                            \"id\": 300\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"wdWait\",\n                            \"id\": 310\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"debug\",\n                            \"id\": 320\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"now\",\n                            \"id\": 330\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"out\",\n                            \"id\": 340\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"start\",\n                            \"id\": 350\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"end\",\n                            \"id\": 360\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"mode\",\n                            \"id\": 370\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"comp_nominal\",\n                            \"id\": 380\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"comp_forward\",\n                            \"id\": 390\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"comp_reverse\",\n                            \"id\": 400\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"probe_type\",\n                            \"id\": 410\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"tool_offset\",\n                            \"id\": 420\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MotionStatus\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 601\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"cmd_code_t\",\n                            \"name\": \"commandEcho\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"commandNumEcho\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"cmd_status_t\",\n                            \"name\": \"commandStatus\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"carte_pos_fb\",\n                            \"id\": 40\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcToolData\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1100\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"id\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"diameter\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"frontangle\",\n                            \"id\": 13\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"backangle\",\n                            \"id\": 14\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"orientation\",\n                            \"id\": 15\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"offset\",\n                            \"id\": 16\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"comment\",\n                            \"id\": 17\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"pocket\",\n                            \"id\": 18\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusMotionAxis\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1101\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"enabled\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"fault\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"ferror_current\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"ferror_highmark\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"homed\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"homing\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"inpos\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"input\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"max_hard_limit\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"max_soft_limit\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"min_hard_limit\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"min_soft_limit\",\n                            \"id\": 13\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"output\",\n                            \"id\": 14\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"override_limits\",\n                            \"id\": 15\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"velocity\",\n                            \"id\": 16\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusConfigAxis\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1102\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcAxisType\",\n                            \"name\": \"axis_type\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"backlash\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_ferror\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_position_limit\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"min_ferror\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"min_position_limit\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"home_sequence\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_acceleration\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_velocity\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"increments\",\n                            \"id\": 12\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcProgramExtension\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1103\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"extension\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusAnalogIO\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1104\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"value\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusDigitalIO\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1105\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"value\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusLimit\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1106\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"value\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusGCode\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1107\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"value\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusMCode\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1108\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"value\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusSetting\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1109\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"value\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusConfig\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1110\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"default_acceleration\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"axes\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusConfigAxis\",\n                            \"name\": \"axis\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"axis_mask\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"cycle_time\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"debug\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcKinematicsType\",\n                            \"name\": \"kinematics_type\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_acceleration\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_velocity\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcLinearUnitsType\",\n                            \"name\": \"linear_units\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"default_velocity\",\n                            \"id\": 13\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcProgramExtension\",\n                            \"name\": \"program_extension\",\n                            \"id\": 14\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPositionOffsetType\",\n                            \"name\": \"position_offset\",\n                            \"id\": 15\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPositionFeedbackType\",\n                            \"name\": \"position_feedback\",\n                            \"id\": 16\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_feed_override\",\n                            \"id\": 17\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"min_feed_override\",\n                            \"id\": 18\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_spindle_override\",\n                            \"id\": 19\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"min_spindle_override\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"default_spindle_speed\",\n                            \"id\": 21\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"default_linear_velocity\",\n                            \"id\": 22\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"min_velocity\",\n                            \"id\": 23\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_linear_velocity\",\n                            \"id\": 24\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"min_linear_velocity\",\n                            \"id\": 25\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"default_angular_velocity\",\n                            \"id\": 26\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_angular_velocity\",\n                            \"id\": 27\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"min_angular_velocity\",\n                            \"id\": 28\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"increments\",\n                            \"id\": 29\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"grids\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"lathe\",\n                            \"id\": 31\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"geometry\",\n                            \"id\": 32\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"uint32\",\n                            \"name\": \"arcdivision\",\n                            \"id\": 33\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"no_force_homing\",\n                            \"id\": 34\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"remote_path\",\n                            \"id\": 35\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcTimeUnitsType\",\n                            \"name\": \"time_units\",\n                            \"id\": 36\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"name\",\n                            \"id\": 37\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusUserCommand\",\n                            \"name\": \"user_command\",\n                            \"id\": 38\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcAngularUnitsType\",\n                            \"name\": \"angular_units\",\n                            \"id\": 39\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusMotion\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1111\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"active_queue\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"actual_position\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"adaptive_feed_enabled\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusAnalogIO\",\n                            \"name\": \"ain\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusAnalogIO\",\n                            \"name\": \"aout\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusMotionAxis\",\n                            \"name\": \"axis\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"block_delete\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"current_line\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"current_vel\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"delay_left\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusDigitalIO\",\n                            \"name\": \"din\",\n                            \"id\": 11\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"distance_to_go\",\n                            \"id\": 12\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusDigitalIO\",\n                            \"name\": \"dout\",\n                            \"id\": 13\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"dtg\",\n                            \"id\": 14\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"enabled\",\n                            \"id\": 15\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"feed_hold_enabled\",\n                            \"id\": 16\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"feed_override_enabled\",\n                            \"id\": 17\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"feedrate\",\n                            \"id\": 18\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"OriginIndex\",\n                            \"name\": \"g5x_index\",\n                            \"id\": 19\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"g5x_offset\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"g92_offset\",\n                            \"id\": 21\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"id\",\n                            \"id\": 23\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"inpos\",\n                            \"id\": 24\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"joint_actual_position\",\n                            \"id\": 25\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"joint_position\",\n                            \"id\": 26\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusLimit\",\n                            \"name\": \"limit\",\n                            \"id\": 27\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"motion_line\",\n                            \"id\": 28\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"MotionType\",\n                            \"name\": \"motion_type\",\n                            \"id\": 29\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcTrajectoryModeType\",\n                            \"name\": \"motion_mode\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"paused\",\n                            \"id\": 31\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"position\",\n                            \"id\": 32\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"probe_tripped\",\n                            \"id\": 33\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"probe_val\",\n                            \"id\": 34\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"probed_position\",\n                            \"id\": 35\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"probing\",\n                            \"id\": 36\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"queue\",\n                            \"id\": 37\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"queue_full\",\n                            \"id\": 38\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"rotation_xy\",\n                            \"id\": 39\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"spindle_brake\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"spindle_direction\",\n                            \"id\": 41\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"spindle_enabled\",\n                            \"id\": 42\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"spindle_increasing\",\n                            \"id\": 43\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"spindle_override_enabled\",\n                            \"id\": 44\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"spindle_speed\",\n                            \"id\": 45\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"spindlerate\",\n                            \"id\": 46\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"RCS_STATUS\",\n                            \"name\": \"state\",\n                            \"id\": 47\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_velocity\",\n                            \"id\": 48\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"max_acceleration\",\n                            \"id\": 49\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"rapidrate\",\n                            \"id\": 50\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusIo\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1112\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"estop\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"flood\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"lube\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"lube_level\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"mist\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"Position\",\n                            \"name\": \"tool_offset\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcToolData\",\n                            \"name\": \"tool_table\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"pocket_prepped\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"tool_in_spindle\",\n                            \"id\": 11\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusTask\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1113\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"echo_serial_number\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcTaskExecStateType\",\n                            \"name\": \"exec_state\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"file\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"input_timeout\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"optional_stop\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"read_line\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcTaskModeType\",\n                            \"name\": \"task_mode\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"task_paused\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcTaskStateType\",\n                            \"name\": \"task_state\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"total_lines\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusInterp\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1114\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"command\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusGCode\",\n                            \"name\": \"gcodes\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcInterpStateType\",\n                            \"name\": \"interp_state\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcInterpExitCodeType\",\n                            \"name\": \"interpreter_errcode\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusMCode\",\n                            \"name\": \"mcodes\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcStatusSetting\",\n                            \"name\": \"settings\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcCanonUnitsType\",\n                            \"name\": \"program_units\",\n                            \"id\": 7\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcCommandParameters\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1115\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"uint32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"uint32\",\n                            \"name\": \"debug_level\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"line_number\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"scale\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"velocity\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"distance\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"value\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"enable\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"command\",\n                            \"id\": 9\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"path\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcTaskModeType\",\n                            \"name\": \"task_mode\",\n                            \"id\": 100\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcTaskStateType\",\n                            \"name\": \"task_state\",\n                            \"id\": 101\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcTrajectoryModeType\",\n                            \"name\": \"traj_mode\",\n                            \"id\": 102\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"pose\",\n                            \"id\": 103\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcToolData\",\n                            \"name\": \"tool_data\",\n                            \"id\": 104\n                        },\n                        {\n                            \"rule\": \"repeated\",\n                            \"type\": \"EmcToolData\",\n                            \"name\": \"tool_table\",\n                            \"id\": 105\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusUserCommand\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1116\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"int32\",\n                            \"name\": \"index\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"command\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcStatusUI\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1117\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"spindle_brake_visible\",\n                            \"id\": 1\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"spindle_cw_visible\",\n                            \"id\": 2\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"spindle_ccw_visible\",\n                            \"id\": 3\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"spindle_stop_visible\",\n                            \"id\": 4\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"spindle_plus_visible\",\n                            \"id\": 5\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"spindle_minus_visible\",\n                            \"id\": 6\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"spindle_override_visible\",\n                            \"id\": 7\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"coolant_flood_visible\",\n                            \"id\": 8\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"coolant_mist_visible\",\n                            \"id\": 9\n                        }\n                    ]\n                }\n            ],\n            \"enums\": [\n                {\n                    \"name\": \"ValueType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_BIT\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"HAL_FLOAT\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"HAL_S32\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"HAL_U32\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"HAL_S64\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"HAL_U64\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"STRING\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"BYTES\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"INT32\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"UINT32\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"INT64\",\n                            \"id\": 40\n                        },\n                        {\n                            \"name\": \"UINT64\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"DOUBLE\",\n                            \"id\": 60\n                        },\n                        {\n                            \"name\": \"BOOL\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"CARTESIAN\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"LEGACY_CARTESIAN\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"POSE\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"LEGACY_POSE\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalPinDirection\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_IN\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"HAL_OUT\",\n                            \"id\": 32\n                        },\n                        {\n                            \"name\": \"HAL_IO\",\n                            \"id\": 48\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalParamDirection\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_RO\",\n                            \"id\": 64\n                        },\n                        {\n                            \"name\": \"HAL_RW\",\n                            \"id\": 192\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalFunctType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"FS_LEGACY_THREADFUNC\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"FS_XTHREADFUNC\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"FS_USERLAND\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ObjectType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_OBJECT_INVALID\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"HAL_PIN\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"HAL_SIGNAL\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"HAL_PARAM\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"HAL_THREAD\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"HAL_FUNCT\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"HAL_COMPONENT\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"HAL_VTABLE\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"HAL_INST\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"HAL_RING\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"HAL_GROUP\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"HAL_PLUG\",\n                            \"id\": 12\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"msgidType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"MSGID_MAX\",\n                            \"id\": 4000\n                        },\n                        {\n                            \"name\": \"MSGID_ROUTE_DELIMITER\",\n                            \"id\": 4001\n                        },\n                        {\n                            \"name\": \"MSGID_ERROR_MSG\",\n                            \"id\": 4002\n                        },\n                        {\n                            \"name\": \"MSGID_BLOB\",\n                            \"id\": 4003\n                        },\n                        {\n                            \"name\": \"MSGID_STRING\",\n                            \"id\": 4004\n                        },\n                        {\n                            \"name\": \"MSGID_HOP\",\n                            \"id\": 4005\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"socketType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ST_ZMQ_PAIR\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_PUB\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_SUB\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_REQ\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_REP\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_DEALER\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_ROUTER\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_PULL\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_PUSH\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_XPUB\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_XSUB\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_STREAM\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_INVALID\",\n                            \"id\": 15\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"securityMechanism\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"SM_ZMQ_NONE\",\n                            \"id\": -1\n                        },\n                        {\n                            \"name\": \"SM_ZMQ_NULL\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"SM_ZMQ_PLAIN\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"SM_ZMQ_CURVE\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"RCS_STATUS\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"UNINITIALIZED_STATUS\",\n                            \"id\": -1\n                        },\n                        {\n                            \"name\": \"RCS_DONE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"RCS_EXEC\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"RCS_ERROR\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"RCS_RECEIVED\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MsgOrigin\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"MSG_KERNEL\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"MSG_RTUSER\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"MSG_ULAPI\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MsgLevel\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"RTAPI_MSG_NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_ERR\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_WARN\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_INFO\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_DBG\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_ALL\",\n                            \"id\": 5\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginDetail\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"UNIX_SIGNAL\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"INSTANCE_SHUTDOWN\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"ZMQ_SOCKET\",\n                            \"id\": 70\n                        },\n                        {\n                            \"name\": \"NML_LAYER\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"RCS_LAYER\",\n                            \"id\": 90\n                        },\n                        {\n                            \"name\": \"CMS_LAYER\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"IP_LAYER\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"TCP_LAYER\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"PGM_LAYER\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"PROCESS\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"USER_THREAD\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"RT_THREAD\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"COMPONENT\",\n                            \"id\": 40\n                        },\n                        {\n                            \"name\": \"THREAD_FUNCTION\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"COMPONENT_INIT\",\n                            \"id\": 60\n                        },\n                        {\n                            \"name\": \"COMPONENT_EXIT\",\n                            \"id\": 70\n                        },\n                        {\n                            \"name\": \"GROUP\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"PIN\",\n                            \"id\": 90\n                        },\n                        {\n                            \"name\": \"SIGNAL\",\n                            \"id\": 100\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Severity\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"S_INFORMATIONAL\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"S_WARNING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"S_FAIL\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"StatusType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ENQUEUED\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"PROCESSING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"COMPLETE\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"FAILED\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ReplyType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ON_RECEPTION\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ON_QUEUED\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ON_COMPLETION\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ALL_STEPS\",\n                            \"id\": 255\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ST_LOGGING\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ST_CONFIG\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ST_REDIS\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ST_HTTP\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ST_HTTPS\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ST_WEBSOCKET\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ST_WEBSOCKETS\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ST_RTAPI_COMMAND\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ST_STP_HALGROUP\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"ST_STP_HALRCOMP\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"ST_STP_INTERP\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"ST_STP_TASK\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"ST_HAL_RCOMMAND\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"ST_TASK_COMMAND\",\n                            \"id\": 14\n                        },\n                        {\n                            \"name\": \"ST_INTERP_COMMAND\",\n                            \"id\": 15\n                        },\n                        {\n                            \"name\": \"ST_MESSAGEBUS_COMMAND\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"ST_MESSAGEBUS_RESPONSE\",\n                            \"id\": 17\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceAPI\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"SA_ZMQ_PROTOBUF\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"SA_WS_JSON\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ContainerType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"MT_RTMESSAGE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"MT_MOTCMD\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"MT_MOTSTATUS\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTCMD\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTSTATUS\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"MT_WOU\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"MT_HALUPDATE\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_MESSAGE\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"MT_LOG_MESSAGE\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"MT_PREVIEW\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"MT_PROGRESS\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"MT_INTERP_STAT\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"MT_SYSLOG\",\n                            \"id\": 18\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_NML\",\n                            \"id\": 19\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTCONFIG\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"MT_STP_UPDATE_FULL\",\n                            \"id\": 26\n                        },\n                        {\n                            \"name\": \"MT_STP_UPDATE\",\n                            \"id\": 28\n                        },\n                        {\n                            \"name\": \"MT_STP_NOGROUP\",\n                            \"id\": 27\n                        },\n                        {\n                            \"name\": \"MT_SHUTDOWN\",\n                            \"id\": 45\n                        },\n                        {\n                            \"name\": \"MT_CONFIRM_SHUTDOWN\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE0\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE1\",\n                            \"id\": 31\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE2\",\n                            \"id\": 32\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE3\",\n                            \"id\": 33\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE4\",\n                            \"id\": 34\n                        },\n                        {\n                            \"name\": \"MT_ASCII\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"MT_UNICODE\",\n                            \"id\": 101\n                        },\n                        {\n                            \"name\": \"MT_GCODE\",\n                            \"id\": 102\n                        },\n                        {\n                            \"name\": \"MT_PYTHON\",\n                            \"id\": 103\n                        },\n                        {\n                            \"name\": \"MT_PICKLE\",\n                            \"id\": 104\n                        },\n                        {\n                            \"name\": \"MT_TCL\",\n                            \"id\": 105\n                        },\n                        {\n                            \"name\": \"MT_XML\",\n                            \"id\": 106\n                        },\n                        {\n                            \"name\": \"MT_JSON\",\n                            \"id\": 107\n                        },\n                        {\n                            \"name\": \"MT_JPEG\",\n                            \"id\": 108\n                        },\n                        {\n                            \"name\": \"MT_PNG\",\n                            \"id\": 109\n                        },\n                        {\n                            \"name\": \"MT_TIFF\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"MT_POSTSCRIPT\",\n                            \"id\": 111\n                        },\n                        {\n                            \"name\": \"MT_SVG\",\n                            \"id\": 112\n                        },\n                        {\n                            \"name\": \"MT_ZMQ_SUBSCRIBE\",\n                            \"id\": 150\n                        },\n                        {\n                            \"name\": \"MT_ZMQ_UNSUBSCRIBE\",\n                            \"id\": 151\n                        },\n                        {\n                            \"name\": \"MT_PING\",\n                            \"id\": 210\n                        },\n                        {\n                            \"name\": \"MT_PING_ACKNOWLEDGE\",\n                            \"id\": 215\n                        },\n                        {\n                            \"name\": \"MT_REJECT\",\n                            \"id\": 220\n                        },\n                        {\n                            \"name\": \"MT_DONE\",\n                            \"id\": 240\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_REQUEST\",\n                            \"id\": 250\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_ANNOUNCEMENT\",\n                            \"id\": 251\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_PROBE\",\n                            \"id\": 252\n                        },\n                        {\n                            \"name\": \"MT_MESSAGEBUS_NO_DESTINATION\",\n                            \"id\": 255\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND\",\n                            \"id\": 256\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND_CONFIRM\",\n                            \"id\": 257\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND_REJECT\",\n                            \"id\": 258\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_SET\",\n                            \"id\": 259\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_SET_REJECT\",\n                            \"id\": 260\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_ACK\",\n                            \"id\": 263\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_SET\",\n                            \"id\": 265\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_SET_REJECT\",\n                            \"id\": 266\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_GET\",\n                            \"id\": 267\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_GET_REJECT\",\n                            \"id\": 268\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_CREATE\",\n                            \"id\": 269\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_CREATE_REJECT\",\n                            \"id\": 270\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DELETE\",\n                            \"id\": 271\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DELETE_REJECT\",\n                            \"id\": 272\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_ACK\",\n                            \"id\": 273\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_ERROR\",\n                            \"id\": 274\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DESCRIBE\",\n                            \"id\": 276\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DESCRIPTION\",\n                            \"id\": 277\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_FULL_UPDATE\",\n                            \"id\": 288\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_INCREMENTAL_UPDATE\",\n                            \"id\": 289\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_ERROR\",\n                            \"id\": 290\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND\",\n                            \"id\": 294\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND_CONFIRM\",\n                            \"id\": 295\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND_REJECT\",\n                            \"id\": 296\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_FULL_UPDATE\",\n                            \"id\": 297\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_INCREMENTAL_UPDATE\",\n                            \"id\": 298\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_ERROR\",\n                            \"id\": 299\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_EXIT\",\n                            \"id\": 300\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_PING\",\n                            \"id\": 301\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_LOADRT\",\n                            \"id\": 302\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_LOG\",\n                            \"id\": 303\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_UNLOADRT\",\n                            \"id\": 305\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_NEWINST\",\n                            \"id\": 306\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_NEWTHREAD\",\n                            \"id\": 307\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_DELTHREAD\",\n                            \"id\": 308\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_CALLFUNC\",\n                            \"id\": 309\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_REPLY\",\n                            \"id\": 310\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_DELINST\",\n                            \"id\": 311\n                        },\n                        {\n                            \"name\": \"MT_LIST_APPLICATIONS\",\n                            \"id\": 350\n                        },\n                        {\n                            \"name\": \"MT_DESCRIBE_APPLICATION\",\n                            \"id\": 351\n                        },\n                        {\n                            \"name\": \"MT_RETRIEVE_APPLICATION\",\n                            \"id\": 352\n                        },\n                        {\n                            \"name\": \"MT_APPLICATION_DETAIL\",\n                            \"id\": 353\n                        },\n                        {\n                            \"name\": \"MT_ERROR\",\n                            \"id\": 360\n                        },\n                        {\n                            \"name\": \"MT_FULL_UPDATE\",\n                            \"id\": 370\n                        },\n                        {\n                            \"name\": \"MT_INCREMENTAL_UPDATE\",\n                            \"id\": 371\n                        },\n                        {\n                            \"name\": \"MT_TASK_REPLY\",\n                            \"id\": 400\n                        },\n                        {\n                            \"name\": \"MT_TICKET_UPDATE\",\n                            \"id\": 401\n                        },\n                        {\n                            \"name\": \"MT_CREDIT_UPDATE\",\n                            \"id\": 450\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_LOWER\",\n                            \"id\": 1000\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_UPPER\",\n                            \"id\": 1100\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ABORT\",\n                            \"id\": 1001\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_AXIS_ABORT\",\n                            \"id\": 1002\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE\",\n                            \"id\": 1003\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE\",\n                            \"id\": 1004\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE_AMPLIFIER\",\n                            \"id\": 1005\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE_AMPLIFIER\",\n                            \"id\": 1006\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE_WATCHDOG\",\n                            \"id\": 1007\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE_WATCHDOG\",\n                            \"id\": 1008\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ACTIVATE_JOINT\",\n                            \"id\": 1009\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DEACTIVATE_JOINT\",\n                            \"id\": 1010\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_PAUSE\",\n                            \"id\": 1011\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_RESUME\",\n                            \"id\": 1012\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_STEP\",\n                            \"id\": 1013\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FREE\",\n                            \"id\": 1014\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COORD\",\n                            \"id\": 1015\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_TELEOP\",\n                            \"id\": 1016\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_SCALE\",\n                            \"id\": 1017\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SS_ENABLE\",\n                            \"id\": 1018\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FEED_SCALE\",\n                            \"id\": 1019\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FS_ENABLE\",\n                            \"id\": 1020\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FH_ENABLE\",\n                            \"id\": 1021\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_AF_ENABLE\",\n                            \"id\": 1022\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_OVERRIDE_LIMITS\",\n                            \"id\": 1023\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_HOME\",\n                            \"id\": 1024\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_UNHOME\",\n                            \"id\": 1025\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_CONT\",\n                            \"id\": 1026\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_INCR\",\n                            \"id\": 1027\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_ABS\",\n                            \"id\": 1028\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_LINE\",\n                            \"id\": 1029\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_CIRCLE\",\n                            \"id\": 1030\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_TELEOP_VECTOR\",\n                            \"id\": 1031\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_CLEAR_PROBE_FLAGS\",\n                            \"id\": 1032\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_PROBE\",\n                            \"id\": 1033\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_RIGID_TAP\",\n                            \"id\": 1034\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_POSITION_LIMITS\",\n                            \"id\": 1035\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_BACKLASH\",\n                            \"id\": 1036\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MIN_FERROR\",\n                            \"id\": 1037\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MAX_FERROR\",\n                            \"id\": 1038\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_VEL\",\n                            \"id\": 1039\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_VEL_LIMIT\",\n                            \"id\": 1040\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_VEL_LIMIT\",\n                            \"id\": 1041\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_ACC_LIMIT\",\n                            \"id\": 1042\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_ACC\",\n                            \"id\": 1043\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_TERM_COND\",\n                            \"id\": 1044\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_NUM_AXES\",\n                            \"id\": 1045\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_WORLD_HOME\",\n                            \"id\": 1046\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_HOMING_PARAMS\",\n                            \"id\": 1047\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_DEBUG\",\n                            \"id\": 1048\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_DOUT\",\n                            \"id\": 1049\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_AOUT\",\n                            \"id\": 1050\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_SPINDLESYNC\",\n                            \"id\": 1051\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_ON\",\n                            \"id\": 1052\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_OFF\",\n                            \"id\": 1053\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_INCREASE\",\n                            \"id\": 1054\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_DECREASE\",\n                            \"id\": 1055\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 1056\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 1057\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MOTOR_OFFSET\",\n                            \"id\": 1058\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_COMP\",\n                            \"id\": 1059\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_OFFSET\",\n                            \"id\": 1060\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_OK\",\n                            \"id\": 1061\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_UNKNOWN_COMMAND\",\n                            \"id\": 1062\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_INVALID_COMMAND\",\n                            \"id\": 1063\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_INVALID_PARAMS\",\n                            \"id\": 1064\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_BAD_EXEC\",\n                            \"id\": 1065\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_DISABLED\",\n                            \"id\": 1066\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_FREE\",\n                            \"id\": 1067\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_TELEOP\",\n                            \"id\": 1068\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_COORD\",\n                            \"id\": 1069\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOINT_FLAG\",\n                            \"id\": 1070\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_FLAG\",\n                            \"id\": 1071\n                        },\n                        {\n                            \"name\": \"MT_PRU_FIRMWARE\",\n                            \"id\": 2048\n                        },\n                        {\n                            \"name\": \"MT_MESA_5I20_FIRMWARE\",\n                            \"id\": 3000\n                        },\n                        {\n                            \"name\": \"MT_BLOB\",\n                            \"id\": 4000\n                        },\n                        {\n                            \"name\": \"MT_TEST1\",\n                            \"id\": 5001\n                        },\n                        {\n                            \"name\": \"MT_TEST2\",\n                            \"id\": 5002\n                        },\n                        {\n                            \"name\": \"MT_TEST3\",\n                            \"id\": 5003\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_LOWER\",\n                            \"id\": 10000\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_UPPER\",\n                            \"id\": 13000\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_ERROR\",\n                            \"id\": 10011\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_TEXT\",\n                            \"id\": 10012\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_DISPLAY\",\n                            \"id\": 10013\n                        },\n                        {\n                            \"name\": \"MT_EMC_NULL\",\n                            \"id\": 10021\n                        },\n                        {\n                            \"name\": \"MT_EMC_SET_DEBUG\",\n                            \"id\": 10022\n                        },\n                        {\n                            \"name\": \"MT_EMC_SYSTEM_CMD\",\n                            \"id\": 10030\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_AXIS\",\n                            \"id\": 10101\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_UNITS\",\n                            \"id\": 10102\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MIN_POSITION_LIMIT\",\n                            \"id\": 10107\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MAX_POSITION_LIMIT\",\n                            \"id\": 10108\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_START_CHANGE\",\n                            \"id\": 1110\n                        },\n                        {\n                            \"name\": \"MT_EMC_EXEC_PLUGIN_CALL\",\n                            \"id\": 1112\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_PLUGIN_CALL\",\n                            \"id\": 1113\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_FERROR\",\n                            \"id\": 10111\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_HOMING_PARAMS\",\n                            \"id\": 10112\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MIN_FERROR\",\n                            \"id\": 10115\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MAX_VELOCITY\",\n                            \"id\": 10116\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_INIT\",\n                            \"id\": 10118\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_HALT\",\n                            \"id\": 10119\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ABORT\",\n                            \"id\": 10120\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ENABLE\",\n                            \"id\": 10121\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_DISABLE\",\n                            \"id\": 10122\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_HOME\",\n                            \"id\": 10123\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_UNHOME\",\n                            \"id\": 10135\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_JOG\",\n                            \"id\": 10124\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_INCR_JOG\",\n                            \"id\": 10125\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ABS_JOG\",\n                            \"id\": 10126\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ACTIVATE\",\n                            \"id\": 10127\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_DEACTIVATE\",\n                            \"id\": 10128\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_OVERRIDE_LIMITS\",\n                            \"id\": 10129\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_LOAD_COMP\",\n                            \"id\": 10131\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_BACKLASH\",\n                            \"id\": 10134\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_STAT\",\n                            \"id\": 10199\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_AXES\",\n                            \"id\": 10201\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_UNITS\",\n                            \"id\": 10202\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_CYCLE_TIME\",\n                            \"id\": 10203\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MODE\",\n                            \"id\": 10204\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_VELOCITY\",\n                            \"id\": 10205\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_ACCELERATION\",\n                            \"id\": 10206\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MAX_VELOCITY\",\n                            \"id\": 10207\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MAX_ACCELERATION\",\n                            \"id\": 10208\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SCALE\",\n                            \"id\": 10209\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MOTION_ID\",\n                            \"id\": 10210\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_INIT\",\n                            \"id\": 10211\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_HALT\",\n                            \"id\": 10212\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_ENABLE\",\n                            \"id\": 10213\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_DISABLE\",\n                            \"id\": 10214\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_ABORT\",\n                            \"id\": 10215\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_PAUSE\",\n                            \"id\": 10216\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_STEP\",\n                            \"id\": 10217\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_RESUME\",\n                            \"id\": 10218\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_DELAY\",\n                            \"id\": 10219\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_LINEAR_MOVE\",\n                            \"id\": 10220\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_CIRCULAR_MOVE\",\n                            \"id\": 10221\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TERM_COND\",\n                            \"id\": 10222\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_OFFSET\",\n                            \"id\": 10223\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_G5X\",\n                            \"id\": 10224\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_HOME\",\n                            \"id\": 10225\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_ROTATION\",\n                            \"id\": 10226\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_G92\",\n                            \"id\": 10227\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_CLEAR_PROBE_TRIPPED_FLAG\",\n                            \"id\": 10228\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_PROBE\",\n                            \"id\": 10229\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TELEOP_ENABLE\",\n                            \"id\": 10230\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TELEOP_VECTOR\",\n                            \"id\": 10231\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SPINDLESYNC\",\n                            \"id\": 10232\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SPINDLE_SCALE\",\n                            \"id\": 10233\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_FO_ENABLE\",\n                            \"id\": 10234\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SO_ENABLE\",\n                            \"id\": 10235\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_FH_ENABLE\",\n                            \"id\": 10236\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_RIGID_TAP\",\n                            \"id\": 10237\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_RAPID_SCALE\",\n                            \"id\": 10238\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_STAT\",\n                            \"id\": 10299\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_INIT\",\n                            \"id\": 10301\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_HALT\",\n                            \"id\": 10302\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_ABORT\",\n                            \"id\": 10303\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_SET_AOUT\",\n                            \"id\": 10304\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_SET_DOUT\",\n                            \"id\": 10305\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_ADAPTIVE\",\n                            \"id\": 10306\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_ORIENT\",\n                            \"id\": 10317\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_WAIT_ORIENT_COMPLETE\",\n                            \"id\": 10318\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_STAT\",\n                            \"id\": 10399\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_INIT\",\n                            \"id\": 10501\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_HALT\",\n                            \"id\": 10502\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_ABORT\",\n                            \"id\": 10503\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_SET_MODE\",\n                            \"id\": 10504\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_SET_STATE\",\n                            \"id\": 10505\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_OPEN\",\n                            \"id\": 10506\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RUN\",\n                            \"id\": 10507\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_READ\",\n                            \"id\": 10508\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_EXECUTE\",\n                            \"id\": 10509\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_PAUSE\",\n                            \"id\": 10510\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_STEP\",\n                            \"id\": 10511\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RESUME\",\n                            \"id\": 10512\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_END\",\n                            \"id\": 10513\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_CLOSE\",\n                            \"id\": 10514\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_INIT\",\n                            \"id\": 10515\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SYNCH\",\n                            \"id\": 10516\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SET_OPTIONAL_STOP\",\n                            \"id\": 10517\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SET_BLOCK_DELETE\",\n                            \"id\": 10518\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_OPTIONAL_STOP\",\n                            \"id\": 10519\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RESET\",\n                            \"id\": 10520\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_REPLY\",\n                            \"id\": 10530\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_STAT\",\n                            \"id\": 10599\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_INIT\",\n                            \"id\": 11101\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_HALT\",\n                            \"id\": 11102\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_ABORT\",\n                            \"id\": 11103\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_PREPARE\",\n                            \"id\": 11104\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_LOAD\",\n                            \"id\": 11105\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_UNLOAD\",\n                            \"id\": 11106\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_LOAD_TOOL_TABLE\",\n                            \"id\": 11107\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_SET_OFFSET\",\n                            \"id\": 11108\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_SET_NUMBER\",\n                            \"id\": 11109\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_UPDATE_TOOL_TABLE\",\n                            \"id\": 11110\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_STAT\",\n                            \"id\": 11199\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_ON\",\n                            \"id\": 11206\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_OFF\",\n                            \"id\": 11207\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_RESET\",\n                            \"id\": 11208\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_INPUT_WAIT\",\n                            \"id\": 11209\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_STAT\",\n                            \"id\": 11299\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_ON\",\n                            \"id\": 11304\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_OFF\",\n                            \"id\": 11305\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_INCREASE\",\n                            \"id\": 11309\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_DECREASE\",\n                            \"id\": 11310\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_CONSTANT\",\n                            \"id\": 11311\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 11312\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 11313\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_SPEED\",\n                            \"id\": 11316\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_STAT\",\n                            \"id\": 11399\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_MIST_ON\",\n                            \"id\": 11404\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_MIST_OFF\",\n                            \"id\": 11405\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_FLOOD_ON\",\n                            \"id\": 11406\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_FLOOD_OFF\",\n                            \"id\": 11407\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_STAT\",\n                            \"id\": 11499\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_ON\",\n                            \"id\": 11504\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_OFF\",\n                            \"id\": 11505\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_STAT\",\n                            \"id\": 11599\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_INIT\",\n                            \"id\": 11601\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_HALT\",\n                            \"id\": 11602\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_ABORT\",\n                            \"id\": 11603\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_SET_CYCLE_TIME\",\n                            \"id\": 11604\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_STAT\",\n                            \"id\": 11699\n                        },\n                        {\n                            \"name\": \"MT_EMC_INIT\",\n                            \"id\": 11901\n                        },\n                        {\n                            \"name\": \"MT_EMC_HALT\",\n                            \"id\": 11902\n                        },\n                        {\n                            \"name\": \"MT_EMC_ABORT\",\n                            \"id\": 11903\n                        },\n                        {\n                            \"name\": \"MT_EMC_STAT\",\n                            \"id\": 11999\n                        },\n                        {\n                            \"name\": \"MT_EMCSTAT_FULL_UPDATE\",\n                            \"id\": 12500\n                        },\n                        {\n                            \"name\": \"MT_EMCSTAT_INCREMENTAL_UPDATE\",\n                            \"id\": 12501\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_ERROR\",\n                            \"id\": 12510\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_TEXT\",\n                            \"id\": 12511\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_DISPLAY\",\n                            \"id\": 12512\n                        },\n                        {\n                            \"name\": \"MT_EMCCMD_EXECUTED\",\n                            \"id\": 12520\n                        },\n                        {\n                            \"name\": \"MT_EMCCMD_COMPLETED\",\n                            \"id\": 12521\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_FULL_UPDATE\",\n                            \"id\": 12600\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_INCREMENTAL_UPDATE\",\n                            \"id\": 12601\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_ERROR\",\n                            \"id\": 12602\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_START\",\n                            \"id\": 12610\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_TERMINATE\",\n                            \"id\": 12611\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_KILL\",\n                            \"id\": 12612\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_WRITE_STDIN\",\n                            \"id\": 12613\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_CALL\",\n                            \"id\": 12614\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_SHUTDOWN\",\n                            \"id\": 12615\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_SET\",\n                            \"id\": 12616\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginIndex\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ORIGIN_UNKNOWN\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ORIGIN_G54\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ORIGIN_G55\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ORIGIN_G56\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ORIGIN_G57\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ORIGIN_G58\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_1\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_2\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_3\",\n                            \"id\": 9\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TermConditionType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"_EMC_TRAJ_TERM_COND_STOP\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_EMC_TRAJ_TERM_COND_BLEND\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"CanonDirection\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"_CANON_STOPPED\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_CANON_CLOCKWISE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"_CANON_COUNTERCLOCKWISE\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"InputType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"_ANALOG_INPUT\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"_DIGITAL_INPUT\",\n                            \"id\": 1\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"WaitType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"IMMEDIATE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"RISE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"FALL\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"BE_HIGH\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"BE_LOW\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"InterpreterStateType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"INTERP_IDLE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"INTERP_RUNNING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"INTERP_SYNC_WAIT\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"INTERP_PAUSED\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"INTERP_QUEUE_WAIT\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"INTERP_ABORT_WAIT\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"INTERP_STATE_UNSET\",\n                            \"id\": 99\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"KinematicsType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"KT_JOINT\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"KT_TRIVKINS\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"KT_DELTA\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"PreviewOpType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"PV_STRAIGHT_PROBE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"PV_RIGID_TAP\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"PV_STRAIGHT_FEED\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"PV_ARC_FEED\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"PV_STRAIGHT_TRAVERSE\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"PV_SET_G5X_OFFSET\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"PV_SET_G92_OFFSET\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"PV_SET_XY_ROTATION\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"PV_SELECT_PLANE\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"PV_SET_TRAVERSE_RATE\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"PV_SET_FEED_RATE\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"PV_CHANGE_TOOL\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"PV_CHANGE_TOOL_NUMBER\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"PV_DWELL\",\n                            \"id\": 14\n                        },\n                        {\n                            \"name\": \"PV_MESSAGE\",\n                            \"id\": 15\n                        },\n                        {\n                            \"name\": \"PV_COMMENT\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"PV_USE_TOOL_OFFSET\",\n                            \"id\": 17\n                        },\n                        {\n                            \"name\": \"PV_SET_PARAMS\",\n                            \"id\": 18\n                        },\n                        {\n                            \"name\": \"PV_SET_FEED_MODE\",\n                            \"id\": 19\n                        },\n                        {\n                            \"name\": \"PV_SOURCE_CONTEXT\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"PV_PREVIEW_START\",\n                            \"id\": 21\n                        },\n                        {\n                            \"name\": \"PV_PREVIEW_END\",\n                            \"id\": 22\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"SourceType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ST_NGC_FILE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ST_NGC_STRING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ST_PYTHON_METHOD\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MotionType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_TRAVERSE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_FEED\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_ARC\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_TOOLCHANGE\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_PROBING\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"_EMC_MOTION_TYPE_INDEXROTARY\",\n                            \"id\": 6\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"cmd_code_t\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMCMOT_ABORT\",\n                            \"id\": 4000\n                        },\n                        {\n                            \"name\": \"EMCMOT_AXIS_ABORT\",\n                            \"id\": 4001\n                        },\n                        {\n                            \"name\": \"EMCMOT_ENABLE\",\n                            \"id\": 4002\n                        },\n                        {\n                            \"name\": \"EMCMOT_DISABLE\",\n                            \"id\": 4003\n                        },\n                        {\n                            \"name\": \"EMCMOT_ENABLE_AMPLIFIER\",\n                            \"id\": 4004\n                        },\n                        {\n                            \"name\": \"EMCMOT_DISABLE_AMPLIFIER\",\n                            \"id\": 4005\n                        },\n                        {\n                            \"name\": \"EMCMOT_ENABLE_WATCHDOG\",\n                            \"id\": 4006\n                        },\n                        {\n                            \"name\": \"EMCMOT_DISABLE_WATCHDOG\",\n                            \"id\": 4007\n                        },\n                        {\n                            \"name\": \"EMCMOT_ACTIVATE_JOINT\",\n                            \"id\": 4008\n                        },\n                        {\n                            \"name\": \"EMCMOT_DEACTIVATE_JOINT\",\n                            \"id\": 4009\n                        },\n                        {\n                            \"name\": \"EMCMOT_PAUSE\",\n                            \"id\": 4010\n                        },\n                        {\n                            \"name\": \"EMCMOT_RESUME\",\n                            \"id\": 4011\n                        },\n                        {\n                            \"name\": \"EMCMOT_STEP\",\n                            \"id\": 4012\n                        },\n                        {\n                            \"name\": \"EMCMOT_FREE\",\n                            \"id\": 4013\n                        },\n                        {\n                            \"name\": \"EMCMOT_COORD\",\n                            \"id\": 4014\n                        },\n                        {\n                            \"name\": \"EMCMOT_TELEOP\",\n                            \"id\": 4015\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_SCALE\",\n                            \"id\": 4016\n                        },\n                        {\n                            \"name\": \"EMCMOT_SS_ENABLE\",\n                            \"id\": 4017\n                        },\n                        {\n                            \"name\": \"EMCMOT_FEED_SCALE\",\n                            \"id\": 4018\n                        },\n                        {\n                            \"name\": \"EMCMOT_FS_ENABLE\",\n                            \"id\": 4019\n                        },\n                        {\n                            \"name\": \"EMCMOT_FH_ENABLE\",\n                            \"id\": 4020\n                        },\n                        {\n                            \"name\": \"EMCMOT_AF_ENABLE\",\n                            \"id\": 4021\n                        },\n                        {\n                            \"name\": \"EMCMOT_OVERRIDE_LIMITS\",\n                            \"id\": 4022\n                        },\n                        {\n                            \"name\": \"EMCMOT_HOME\",\n                            \"id\": 4023\n                        },\n                        {\n                            \"name\": \"EMCMOT_UNHOME\",\n                            \"id\": 4024\n                        },\n                        {\n                            \"name\": \"EMCMOT_JOG_CONT\",\n                            \"id\": 4025\n                        },\n                        {\n                            \"name\": \"EMCMOT_JOG_INCR\",\n                            \"id\": 4026\n                        },\n                        {\n                            \"name\": \"EMCMOT_JOG_ABS\",\n                            \"id\": 4027\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_LINE\",\n                            \"id\": 4028\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_CIRCLE\",\n                            \"id\": 4029\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_TELEOP_VECTOR\",\n                            \"id\": 4030\n                        },\n                        {\n                            \"name\": \"EMCMOT_CLEAR_PROBE_FLAGS\",\n                            \"id\": 4031\n                        },\n                        {\n                            \"name\": \"EMCMOT_PROBE\",\n                            \"id\": 4032\n                        },\n                        {\n                            \"name\": \"EMCMOT_RIGID_TAP\",\n                            \"id\": 4033\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_POSITION_LIMITS\",\n                            \"id\": 4034\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_BACKLASH\",\n                            \"id\": 4035\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_MIN_FERROR\",\n                            \"id\": 4036\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_MAX_FERROR\",\n                            \"id\": 4037\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_VEL\",\n                            \"id\": 4038\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_VEL_LIMIT\",\n                            \"id\": 4039\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_JOINT_VEL_LIMIT\",\n                            \"id\": 4040\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_JOINT_ACC_LIMIT\",\n                            \"id\": 4041\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_ACC\",\n                            \"id\": 4042\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_TERM_COND\",\n                            \"id\": 4043\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_NUM_AXES\",\n                            \"id\": 4044\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_WORLD_HOME\",\n                            \"id\": 4045\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_HOMING_PARAMS\",\n                            \"id\": 4046\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_DEBUG\",\n                            \"id\": 4047\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_DOUT\",\n                            \"id\": 4048\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_AOUT\",\n                            \"id\": 4049\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_SPINDLESYNC\",\n                            \"id\": 4050\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_ON\",\n                            \"id\": 4051\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_OFF\",\n                            \"id\": 4052\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_INCREASE\",\n                            \"id\": 4053\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_DECREASE\",\n                            \"id\": 4054\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 4055\n                        },\n                        {\n                            \"name\": \"EMCMOT_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 4056\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_MOTOR_OFFSET\",\n                            \"id\": 4057\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_JOINT_COMP\",\n                            \"id\": 4058\n                        },\n                        {\n                            \"name\": \"EMCMOT_SET_OFFSET\",\n                            \"id\": 4059\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"cmd_status_t\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMCMOT_COMMAND_OK\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"EMCMOT_COMMAND_UNKNOWN_COMMAND\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMCMOT_COMMAND_INVALID_COMMAND\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"EMCMOT_COMMAND_INVALID_PARAMS\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"EMCMOT_COMMAND_BAD_EXEC\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcTaskExecStateType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMC_TASK_EXEC_ERROR\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMC_TASK_EXEC_DONE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"EMC_TASK_EXEC_WAITING_FOR_MOTION\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"EMC_TASK_EXEC_WAITING_FOR_MOTION_QUEUE\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"EMC_TASK_EXEC_WAITING_FOR_IO\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"EMC_TASK_EXEC_WAITING_FOR_MOTION_AND_IO\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"EMC_TASK_EXEC_WAITING_FOR_DELAY\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"EMC_TASK_EXEC_WAITING_FOR_SYSTEM_CMD\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"EMC_TASK_EXEC_WAITING_FOR_SPINDLE_ORIENTED\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcInterpStateType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMC_TASK_INTERP_IDLE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMC_TASK_INTERP_READING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"EMC_TASK_INTERP_PAUSED\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"EMC_TASK_INTERP_WAITING\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcInterpExitCodeType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMC_INTERP_EXIT_OK\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"EMC_INTERP_EXIT_EXIT\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMC_INTERP_EXIT_EXECUTE_FINISH\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"EMC_INTERP_EXIT_ENDFILE\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"EMC_INTERP_EXIT_FILE_NOT_OPEN\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"EMC_INTERP_EXIT_ERROR\",\n                            \"id\": 5\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcKinematicsType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"KINEMATICS_IDENTITY\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"KINEMATICS_FORWARD_ONLY\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"KINEMATICS_INVERSE_ONLY\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"KINEMATICS_BOTH\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcTrajectoryModeType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMC_TRAJ_MODE_FREE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMC_TRAJ_MODE_COORD\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"EMC_TRAJ_MODE_TELEOP\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcCanonUnitsType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"CANON_UNITS_INCH\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"CANON_UNITS_MM\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"CANON_UNITS_CM\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcLinearUnitsType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"LINEAR_UNITS_INCH\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"LINEAR_UNITS_MM\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"LINEAR_UNITS_CM\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcAngularUnitsType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ANGULAR_UNITS_DEGREES\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ANGULAR_UNITS_RADIAN\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ANGULAR_UNITS_GRAD\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcTimeUnitsType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"TIME_UNITS_MINUTE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"TIME_UNITS_SECOND\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcTaskModeType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMC_TASK_MODE_MANUAL\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMC_TASK_MODE_AUTO\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"EMC_TASK_MODE_MDI\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcTaskStateType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMC_TASK_STATE_ESTOP\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMC_TASK_STATE_ESTOP_RESET\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"EMC_TASK_STATE_OFF\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"EMC_TASK_STATE_ON\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcAxisType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMC_AXIS_LINEAR\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMC_AXIS_ANGULAR\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcPositionOffsetType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMC_CONFIG_RELATIVE_OFFSET\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMC_CONFIG_MACHINE_OFFSET\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcPositionFeedbackType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"EMC_CONFIG_ACTUAL_FEEDBACK\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"EMC_CONFIG_COMMANDED_FEEDBACK\",\n                            \"id\": 2\n                        }\n                    ]\n                }\n            ],\n            \"isNamespace\": true\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"FieldType\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"FT_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"FT_CALLBACK\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"FT_POINTER\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"FT_STATIC\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"FT_IGNORE\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"IntSize\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"IS_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"IS_8\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"IS_16\",\n                    \"id\": 16\n                },\n                {\n                    \"name\": \"IS_32\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"IS_64\",\n                    \"id\": 64\n                }\n            ]\n        }\n    ],\n    \"isNamespace\": true\n}).build();","module.exports = require(\"protobufjs\").newBuilder({})['import']({\n    \"package\": null,\n    \"syntax\": \"proto2\",\n    \"options\": {\n        \"java_package\": \"fi.kapsi.koti.jpa.nanopb\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"NanoPBOptions\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_size\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_count\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"IntSize\",\n                    \"name\": \"int_size\",\n                    \"id\": 7,\n                    \"options\": {\n                        \"default\": \"IS_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"FieldType\",\n                    \"name\": \"type\",\n                    \"id\": 3,\n                    \"options\": {\n                        \"default\": \"FT_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"long_names\",\n                    \"id\": 4,\n                    \"options\": {\n                        \"default\": true\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"packed_struct\",\n                    \"id\": 5,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"skip_message\",\n                    \"id\": 6,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"no_unions\",\n                    \"id\": 8,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"uint32\",\n                    \"name\": \"msgid\",\n                    \"id\": 9\n                }\n            ]\n        },\n        {\n            \"name\": \"machinetalk\",\n            \"fields\": [],\n            \"syntax\": \"proto2\",\n            \"messages\": [\n                {\n                    \"name\": \"TaskPlanExecute\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1200\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"command\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"line\",\n                            \"id\": 30\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TaskPlanBlockDelete\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1201\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"state\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TaskPlanOptionalStop\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1202\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"bool\",\n                            \"name\": \"state\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TaskPlanOpen\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1203\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"string\",\n                            \"name\": \"filename\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TaskPlanReply\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1204\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"ContainerType\",\n                            \"name\": \"cmd\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"errormsg\",\n                            \"id\": 20\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TaskReply\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1205\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"ticket\",\n                            \"id\": 10\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TicketUpdate\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1206\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"cticket\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"RCS_STATUS\",\n                            \"name\": \"status\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"text\",\n                            \"id\": 30\n                        }\n                    ]\n                }\n            ],\n            \"enums\": [\n                {\n                    \"name\": \"ValueType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_BIT\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"HAL_FLOAT\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"HAL_S32\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"HAL_U32\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"HAL_S64\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"HAL_U64\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"STRING\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"BYTES\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"INT32\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"UINT32\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"INT64\",\n                            \"id\": 40\n                        },\n                        {\n                            \"name\": \"UINT64\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"DOUBLE\",\n                            \"id\": 60\n                        },\n                        {\n                            \"name\": \"BOOL\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"CARTESIAN\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"LEGACY_CARTESIAN\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"POSE\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"LEGACY_POSE\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalPinDirection\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_IN\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"HAL_OUT\",\n                            \"id\": 32\n                        },\n                        {\n                            \"name\": \"HAL_IO\",\n                            \"id\": 48\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalParamDirection\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_RO\",\n                            \"id\": 64\n                        },\n                        {\n                            \"name\": \"HAL_RW\",\n                            \"id\": 192\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalFunctType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"FS_LEGACY_THREADFUNC\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"FS_XTHREADFUNC\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"FS_USERLAND\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ObjectType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_OBJECT_INVALID\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"HAL_PIN\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"HAL_SIGNAL\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"HAL_PARAM\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"HAL_THREAD\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"HAL_FUNCT\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"HAL_COMPONENT\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"HAL_VTABLE\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"HAL_INST\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"HAL_RING\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"HAL_GROUP\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"HAL_PLUG\",\n                            \"id\": 12\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"msgidType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"MSGID_MAX\",\n                            \"id\": 4000\n                        },\n                        {\n                            \"name\": \"MSGID_ROUTE_DELIMITER\",\n                            \"id\": 4001\n                        },\n                        {\n                            \"name\": \"MSGID_ERROR_MSG\",\n                            \"id\": 4002\n                        },\n                        {\n                            \"name\": \"MSGID_BLOB\",\n                            \"id\": 4003\n                        },\n                        {\n                            \"name\": \"MSGID_STRING\",\n                            \"id\": 4004\n                        },\n                        {\n                            \"name\": \"MSGID_HOP\",\n                            \"id\": 4005\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"socketType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ST_ZMQ_PAIR\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_PUB\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_SUB\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_REQ\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_REP\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_DEALER\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_ROUTER\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_PULL\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_PUSH\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_XPUB\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_XSUB\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_STREAM\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_INVALID\",\n                            \"id\": 15\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"securityMechanism\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"SM_ZMQ_NONE\",\n                            \"id\": -1\n                        },\n                        {\n                            \"name\": \"SM_ZMQ_NULL\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"SM_ZMQ_PLAIN\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"SM_ZMQ_CURVE\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"RCS_STATUS\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"UNINITIALIZED_STATUS\",\n                            \"id\": -1\n                        },\n                        {\n                            \"name\": \"RCS_DONE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"RCS_EXEC\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"RCS_ERROR\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"RCS_RECEIVED\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MsgOrigin\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"MSG_KERNEL\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"MSG_RTUSER\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"MSG_ULAPI\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MsgLevel\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"RTAPI_MSG_NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_ERR\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_WARN\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_INFO\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_DBG\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_ALL\",\n                            \"id\": 5\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginDetail\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"UNIX_SIGNAL\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"INSTANCE_SHUTDOWN\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"ZMQ_SOCKET\",\n                            \"id\": 70\n                        },\n                        {\n                            \"name\": \"NML_LAYER\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"RCS_LAYER\",\n                            \"id\": 90\n                        },\n                        {\n                            \"name\": \"CMS_LAYER\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"IP_LAYER\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"TCP_LAYER\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"PGM_LAYER\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"PROCESS\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"USER_THREAD\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"RT_THREAD\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"COMPONENT\",\n                            \"id\": 40\n                        },\n                        {\n                            \"name\": \"THREAD_FUNCTION\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"COMPONENT_INIT\",\n                            \"id\": 60\n                        },\n                        {\n                            \"name\": \"COMPONENT_EXIT\",\n                            \"id\": 70\n                        },\n                        {\n                            \"name\": \"GROUP\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"PIN\",\n                            \"id\": 90\n                        },\n                        {\n                            \"name\": \"SIGNAL\",\n                            \"id\": 100\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Severity\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"S_INFORMATIONAL\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"S_WARNING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"S_FAIL\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"StatusType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ENQUEUED\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"PROCESSING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"COMPLETE\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"FAILED\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ReplyType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ON_RECEPTION\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ON_QUEUED\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ON_COMPLETION\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ALL_STEPS\",\n                            \"id\": 255\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ST_LOGGING\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ST_CONFIG\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ST_REDIS\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ST_HTTP\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ST_HTTPS\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ST_WEBSOCKET\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ST_WEBSOCKETS\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ST_RTAPI_COMMAND\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ST_STP_HALGROUP\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"ST_STP_HALRCOMP\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"ST_STP_INTERP\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"ST_STP_TASK\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"ST_HAL_RCOMMAND\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"ST_TASK_COMMAND\",\n                            \"id\": 14\n                        },\n                        {\n                            \"name\": \"ST_INTERP_COMMAND\",\n                            \"id\": 15\n                        },\n                        {\n                            \"name\": \"ST_MESSAGEBUS_COMMAND\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"ST_MESSAGEBUS_RESPONSE\",\n                            \"id\": 17\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceAPI\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"SA_ZMQ_PROTOBUF\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"SA_WS_JSON\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ContainerType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"MT_RTMESSAGE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"MT_MOTCMD\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"MT_MOTSTATUS\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTCMD\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTSTATUS\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"MT_WOU\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"MT_HALUPDATE\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_MESSAGE\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"MT_LOG_MESSAGE\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"MT_PREVIEW\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"MT_PROGRESS\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"MT_INTERP_STAT\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"MT_SYSLOG\",\n                            \"id\": 18\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_NML\",\n                            \"id\": 19\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTCONFIG\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"MT_STP_UPDATE_FULL\",\n                            \"id\": 26\n                        },\n                        {\n                            \"name\": \"MT_STP_UPDATE\",\n                            \"id\": 28\n                        },\n                        {\n                            \"name\": \"MT_STP_NOGROUP\",\n                            \"id\": 27\n                        },\n                        {\n                            \"name\": \"MT_SHUTDOWN\",\n                            \"id\": 45\n                        },\n                        {\n                            \"name\": \"MT_CONFIRM_SHUTDOWN\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE0\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE1\",\n                            \"id\": 31\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE2\",\n                            \"id\": 32\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE3\",\n                            \"id\": 33\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE4\",\n                            \"id\": 34\n                        },\n                        {\n                            \"name\": \"MT_ASCII\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"MT_UNICODE\",\n                            \"id\": 101\n                        },\n                        {\n                            \"name\": \"MT_GCODE\",\n                            \"id\": 102\n                        },\n                        {\n                            \"name\": \"MT_PYTHON\",\n                            \"id\": 103\n                        },\n                        {\n                            \"name\": \"MT_PICKLE\",\n                            \"id\": 104\n                        },\n                        {\n                            \"name\": \"MT_TCL\",\n                            \"id\": 105\n                        },\n                        {\n                            \"name\": \"MT_XML\",\n                            \"id\": 106\n                        },\n                        {\n                            \"name\": \"MT_JSON\",\n                            \"id\": 107\n                        },\n                        {\n                            \"name\": \"MT_JPEG\",\n                            \"id\": 108\n                        },\n                        {\n                            \"name\": \"MT_PNG\",\n                            \"id\": 109\n                        },\n                        {\n                            \"name\": \"MT_TIFF\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"MT_POSTSCRIPT\",\n                            \"id\": 111\n                        },\n                        {\n                            \"name\": \"MT_SVG\",\n                            \"id\": 112\n                        },\n                        {\n                            \"name\": \"MT_ZMQ_SUBSCRIBE\",\n                            \"id\": 150\n                        },\n                        {\n                            \"name\": \"MT_ZMQ_UNSUBSCRIBE\",\n                            \"id\": 151\n                        },\n                        {\n                            \"name\": \"MT_PING\",\n                            \"id\": 210\n                        },\n                        {\n                            \"name\": \"MT_PING_ACKNOWLEDGE\",\n                            \"id\": 215\n                        },\n                        {\n                            \"name\": \"MT_REJECT\",\n                            \"id\": 220\n                        },\n                        {\n                            \"name\": \"MT_DONE\",\n                            \"id\": 240\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_REQUEST\",\n                            \"id\": 250\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_ANNOUNCEMENT\",\n                            \"id\": 251\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_PROBE\",\n                            \"id\": 252\n                        },\n                        {\n                            \"name\": \"MT_MESSAGEBUS_NO_DESTINATION\",\n                            \"id\": 255\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND\",\n                            \"id\": 256\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND_CONFIRM\",\n                            \"id\": 257\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND_REJECT\",\n                            \"id\": 258\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_SET\",\n                            \"id\": 259\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_SET_REJECT\",\n                            \"id\": 260\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_ACK\",\n                            \"id\": 263\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_SET\",\n                            \"id\": 265\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_SET_REJECT\",\n                            \"id\": 266\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_GET\",\n                            \"id\": 267\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_GET_REJECT\",\n                            \"id\": 268\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_CREATE\",\n                            \"id\": 269\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_CREATE_REJECT\",\n                            \"id\": 270\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DELETE\",\n                            \"id\": 271\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DELETE_REJECT\",\n                            \"id\": 272\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_ACK\",\n                            \"id\": 273\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_ERROR\",\n                            \"id\": 274\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DESCRIBE\",\n                            \"id\": 276\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DESCRIPTION\",\n                            \"id\": 277\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_FULL_UPDATE\",\n                            \"id\": 288\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_INCREMENTAL_UPDATE\",\n                            \"id\": 289\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_ERROR\",\n                            \"id\": 290\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND\",\n                            \"id\": 294\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND_CONFIRM\",\n                            \"id\": 295\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND_REJECT\",\n                            \"id\": 296\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_FULL_UPDATE\",\n                            \"id\": 297\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_INCREMENTAL_UPDATE\",\n                            \"id\": 298\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_ERROR\",\n                            \"id\": 299\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_EXIT\",\n                            \"id\": 300\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_PING\",\n                            \"id\": 301\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_LOADRT\",\n                            \"id\": 302\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_LOG\",\n                            \"id\": 303\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_UNLOADRT\",\n                            \"id\": 305\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_NEWINST\",\n                            \"id\": 306\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_NEWTHREAD\",\n                            \"id\": 307\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_DELTHREAD\",\n                            \"id\": 308\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_CALLFUNC\",\n                            \"id\": 309\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_REPLY\",\n                            \"id\": 310\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_DELINST\",\n                            \"id\": 311\n                        },\n                        {\n                            \"name\": \"MT_LIST_APPLICATIONS\",\n                            \"id\": 350\n                        },\n                        {\n                            \"name\": \"MT_DESCRIBE_APPLICATION\",\n                            \"id\": 351\n                        },\n                        {\n                            \"name\": \"MT_RETRIEVE_APPLICATION\",\n                            \"id\": 352\n                        },\n                        {\n                            \"name\": \"MT_APPLICATION_DETAIL\",\n                            \"id\": 353\n                        },\n                        {\n                            \"name\": \"MT_ERROR\",\n                            \"id\": 360\n                        },\n                        {\n                            \"name\": \"MT_FULL_UPDATE\",\n                            \"id\": 370\n                        },\n                        {\n                            \"name\": \"MT_INCREMENTAL_UPDATE\",\n                            \"id\": 371\n                        },\n                        {\n                            \"name\": \"MT_TASK_REPLY\",\n                            \"id\": 400\n                        },\n                        {\n                            \"name\": \"MT_TICKET_UPDATE\",\n                            \"id\": 401\n                        },\n                        {\n                            \"name\": \"MT_CREDIT_UPDATE\",\n                            \"id\": 450\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_LOWER\",\n                            \"id\": 1000\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_UPPER\",\n                            \"id\": 1100\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ABORT\",\n                            \"id\": 1001\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_AXIS_ABORT\",\n                            \"id\": 1002\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE\",\n                            \"id\": 1003\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE\",\n                            \"id\": 1004\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE_AMPLIFIER\",\n                            \"id\": 1005\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE_AMPLIFIER\",\n                            \"id\": 1006\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE_WATCHDOG\",\n                            \"id\": 1007\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE_WATCHDOG\",\n                            \"id\": 1008\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ACTIVATE_JOINT\",\n                            \"id\": 1009\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DEACTIVATE_JOINT\",\n                            \"id\": 1010\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_PAUSE\",\n                            \"id\": 1011\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_RESUME\",\n                            \"id\": 1012\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_STEP\",\n                            \"id\": 1013\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FREE\",\n                            \"id\": 1014\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COORD\",\n                            \"id\": 1015\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_TELEOP\",\n                            \"id\": 1016\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_SCALE\",\n                            \"id\": 1017\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SS_ENABLE\",\n                            \"id\": 1018\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FEED_SCALE\",\n                            \"id\": 1019\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FS_ENABLE\",\n                            \"id\": 1020\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FH_ENABLE\",\n                            \"id\": 1021\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_AF_ENABLE\",\n                            \"id\": 1022\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_OVERRIDE_LIMITS\",\n                            \"id\": 1023\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_HOME\",\n                            \"id\": 1024\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_UNHOME\",\n                            \"id\": 1025\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_CONT\",\n                            \"id\": 1026\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_INCR\",\n                            \"id\": 1027\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_ABS\",\n                            \"id\": 1028\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_LINE\",\n                            \"id\": 1029\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_CIRCLE\",\n                            \"id\": 1030\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_TELEOP_VECTOR\",\n                            \"id\": 1031\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_CLEAR_PROBE_FLAGS\",\n                            \"id\": 1032\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_PROBE\",\n                            \"id\": 1033\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_RIGID_TAP\",\n                            \"id\": 1034\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_POSITION_LIMITS\",\n                            \"id\": 1035\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_BACKLASH\",\n                            \"id\": 1036\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MIN_FERROR\",\n                            \"id\": 1037\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MAX_FERROR\",\n                            \"id\": 1038\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_VEL\",\n                            \"id\": 1039\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_VEL_LIMIT\",\n                            \"id\": 1040\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_VEL_LIMIT\",\n                            \"id\": 1041\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_ACC_LIMIT\",\n                            \"id\": 1042\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_ACC\",\n                            \"id\": 1043\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_TERM_COND\",\n                            \"id\": 1044\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_NUM_AXES\",\n                            \"id\": 1045\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_WORLD_HOME\",\n                            \"id\": 1046\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_HOMING_PARAMS\",\n                            \"id\": 1047\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_DEBUG\",\n                            \"id\": 1048\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_DOUT\",\n                            \"id\": 1049\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_AOUT\",\n                            \"id\": 1050\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_SPINDLESYNC\",\n                            \"id\": 1051\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_ON\",\n                            \"id\": 1052\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_OFF\",\n                            \"id\": 1053\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_INCREASE\",\n                            \"id\": 1054\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_DECREASE\",\n                            \"id\": 1055\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 1056\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 1057\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MOTOR_OFFSET\",\n                            \"id\": 1058\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_COMP\",\n                            \"id\": 1059\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_OFFSET\",\n                            \"id\": 1060\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_OK\",\n                            \"id\": 1061\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_UNKNOWN_COMMAND\",\n                            \"id\": 1062\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_INVALID_COMMAND\",\n                            \"id\": 1063\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_INVALID_PARAMS\",\n                            \"id\": 1064\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_BAD_EXEC\",\n                            \"id\": 1065\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_DISABLED\",\n                            \"id\": 1066\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_FREE\",\n                            \"id\": 1067\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_TELEOP\",\n                            \"id\": 1068\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_COORD\",\n                            \"id\": 1069\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOINT_FLAG\",\n                            \"id\": 1070\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_FLAG\",\n                            \"id\": 1071\n                        },\n                        {\n                            \"name\": \"MT_PRU_FIRMWARE\",\n                            \"id\": 2048\n                        },\n                        {\n                            \"name\": \"MT_MESA_5I20_FIRMWARE\",\n                            \"id\": 3000\n                        },\n                        {\n                            \"name\": \"MT_BLOB\",\n                            \"id\": 4000\n                        },\n                        {\n                            \"name\": \"MT_TEST1\",\n                            \"id\": 5001\n                        },\n                        {\n                            \"name\": \"MT_TEST2\",\n                            \"id\": 5002\n                        },\n                        {\n                            \"name\": \"MT_TEST3\",\n                            \"id\": 5003\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_LOWER\",\n                            \"id\": 10000\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_UPPER\",\n                            \"id\": 13000\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_ERROR\",\n                            \"id\": 10011\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_TEXT\",\n                            \"id\": 10012\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_DISPLAY\",\n                            \"id\": 10013\n                        },\n                        {\n                            \"name\": \"MT_EMC_NULL\",\n                            \"id\": 10021\n                        },\n                        {\n                            \"name\": \"MT_EMC_SET_DEBUG\",\n                            \"id\": 10022\n                        },\n                        {\n                            \"name\": \"MT_EMC_SYSTEM_CMD\",\n                            \"id\": 10030\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_AXIS\",\n                            \"id\": 10101\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_UNITS\",\n                            \"id\": 10102\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MIN_POSITION_LIMIT\",\n                            \"id\": 10107\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MAX_POSITION_LIMIT\",\n                            \"id\": 10108\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_START_CHANGE\",\n                            \"id\": 1110\n                        },\n                        {\n                            \"name\": \"MT_EMC_EXEC_PLUGIN_CALL\",\n                            \"id\": 1112\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_PLUGIN_CALL\",\n                            \"id\": 1113\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_FERROR\",\n                            \"id\": 10111\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_HOMING_PARAMS\",\n                            \"id\": 10112\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MIN_FERROR\",\n                            \"id\": 10115\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MAX_VELOCITY\",\n                            \"id\": 10116\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_INIT\",\n                            \"id\": 10118\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_HALT\",\n                            \"id\": 10119\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ABORT\",\n                            \"id\": 10120\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ENABLE\",\n                            \"id\": 10121\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_DISABLE\",\n                            \"id\": 10122\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_HOME\",\n                            \"id\": 10123\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_UNHOME\",\n                            \"id\": 10135\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_JOG\",\n                            \"id\": 10124\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_INCR_JOG\",\n                            \"id\": 10125\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ABS_JOG\",\n                            \"id\": 10126\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ACTIVATE\",\n                            \"id\": 10127\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_DEACTIVATE\",\n                            \"id\": 10128\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_OVERRIDE_LIMITS\",\n                            \"id\": 10129\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_LOAD_COMP\",\n                            \"id\": 10131\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_BACKLASH\",\n                            \"id\": 10134\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_STAT\",\n                            \"id\": 10199\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_AXES\",\n                            \"id\": 10201\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_UNITS\",\n                            \"id\": 10202\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_CYCLE_TIME\",\n                            \"id\": 10203\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MODE\",\n                            \"id\": 10204\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_VELOCITY\",\n                            \"id\": 10205\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_ACCELERATION\",\n                            \"id\": 10206\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MAX_VELOCITY\",\n                            \"id\": 10207\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MAX_ACCELERATION\",\n                            \"id\": 10208\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SCALE\",\n                            \"id\": 10209\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MOTION_ID\",\n                            \"id\": 10210\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_INIT\",\n                            \"id\": 10211\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_HALT\",\n                            \"id\": 10212\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_ENABLE\",\n                            \"id\": 10213\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_DISABLE\",\n                            \"id\": 10214\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_ABORT\",\n                            \"id\": 10215\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_PAUSE\",\n                            \"id\": 10216\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_STEP\",\n                            \"id\": 10217\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_RESUME\",\n                            \"id\": 10218\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_DELAY\",\n                            \"id\": 10219\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_LINEAR_MOVE\",\n                            \"id\": 10220\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_CIRCULAR_MOVE\",\n                            \"id\": 10221\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TERM_COND\",\n                            \"id\": 10222\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_OFFSET\",\n                            \"id\": 10223\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_G5X\",\n                            \"id\": 10224\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_HOME\",\n                            \"id\": 10225\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_ROTATION\",\n                            \"id\": 10226\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_G92\",\n                            \"id\": 10227\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_CLEAR_PROBE_TRIPPED_FLAG\",\n                            \"id\": 10228\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_PROBE\",\n                            \"id\": 10229\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TELEOP_ENABLE\",\n                            \"id\": 10230\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TELEOP_VECTOR\",\n                            \"id\": 10231\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SPINDLESYNC\",\n                            \"id\": 10232\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SPINDLE_SCALE\",\n                            \"id\": 10233\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_FO_ENABLE\",\n                            \"id\": 10234\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SO_ENABLE\",\n                            \"id\": 10235\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_FH_ENABLE\",\n                            \"id\": 10236\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_RIGID_TAP\",\n                            \"id\": 10237\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_RAPID_SCALE\",\n                            \"id\": 10238\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_STAT\",\n                            \"id\": 10299\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_INIT\",\n                            \"id\": 10301\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_HALT\",\n                            \"id\": 10302\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_ABORT\",\n                            \"id\": 10303\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_SET_AOUT\",\n                            \"id\": 10304\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_SET_DOUT\",\n                            \"id\": 10305\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_ADAPTIVE\",\n                            \"id\": 10306\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_ORIENT\",\n                            \"id\": 10317\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_WAIT_ORIENT_COMPLETE\",\n                            \"id\": 10318\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_STAT\",\n                            \"id\": 10399\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_INIT\",\n                            \"id\": 10501\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_HALT\",\n                            \"id\": 10502\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_ABORT\",\n                            \"id\": 10503\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_SET_MODE\",\n                            \"id\": 10504\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_SET_STATE\",\n                            \"id\": 10505\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_OPEN\",\n                            \"id\": 10506\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RUN\",\n                            \"id\": 10507\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_READ\",\n                            \"id\": 10508\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_EXECUTE\",\n                            \"id\": 10509\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_PAUSE\",\n                            \"id\": 10510\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_STEP\",\n                            \"id\": 10511\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RESUME\",\n                            \"id\": 10512\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_END\",\n                            \"id\": 10513\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_CLOSE\",\n                            \"id\": 10514\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_INIT\",\n                            \"id\": 10515\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SYNCH\",\n                            \"id\": 10516\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SET_OPTIONAL_STOP\",\n                            \"id\": 10517\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SET_BLOCK_DELETE\",\n                            \"id\": 10518\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_OPTIONAL_STOP\",\n                            \"id\": 10519\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RESET\",\n                            \"id\": 10520\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_REPLY\",\n                            \"id\": 10530\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_STAT\",\n                            \"id\": 10599\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_INIT\",\n                            \"id\": 11101\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_HALT\",\n                            \"id\": 11102\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_ABORT\",\n                            \"id\": 11103\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_PREPARE\",\n                            \"id\": 11104\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_LOAD\",\n                            \"id\": 11105\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_UNLOAD\",\n                            \"id\": 11106\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_LOAD_TOOL_TABLE\",\n                            \"id\": 11107\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_SET_OFFSET\",\n                            \"id\": 11108\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_SET_NUMBER\",\n                            \"id\": 11109\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_UPDATE_TOOL_TABLE\",\n                            \"id\": 11110\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_STAT\",\n                            \"id\": 11199\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_ON\",\n                            \"id\": 11206\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_OFF\",\n                            \"id\": 11207\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_RESET\",\n                            \"id\": 11208\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_INPUT_WAIT\",\n                            \"id\": 11209\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_STAT\",\n                            \"id\": 11299\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_ON\",\n                            \"id\": 11304\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_OFF\",\n                            \"id\": 11305\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_INCREASE\",\n                            \"id\": 11309\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_DECREASE\",\n                            \"id\": 11310\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_CONSTANT\",\n                            \"id\": 11311\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 11312\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 11313\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_SPEED\",\n                            \"id\": 11316\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_STAT\",\n                            \"id\": 11399\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_MIST_ON\",\n                            \"id\": 11404\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_MIST_OFF\",\n                            \"id\": 11405\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_FLOOD_ON\",\n                            \"id\": 11406\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_FLOOD_OFF\",\n                            \"id\": 11407\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_STAT\",\n                            \"id\": 11499\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_ON\",\n                            \"id\": 11504\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_OFF\",\n                            \"id\": 11505\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_STAT\",\n                            \"id\": 11599\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_INIT\",\n                            \"id\": 11601\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_HALT\",\n                            \"id\": 11602\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_ABORT\",\n                            \"id\": 11603\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_SET_CYCLE_TIME\",\n                            \"id\": 11604\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_STAT\",\n                            \"id\": 11699\n                        },\n                        {\n                            \"name\": \"MT_EMC_INIT\",\n                            \"id\": 11901\n                        },\n                        {\n                            \"name\": \"MT_EMC_HALT\",\n                            \"id\": 11902\n                        },\n                        {\n                            \"name\": \"MT_EMC_ABORT\",\n                            \"id\": 11903\n                        },\n                        {\n                            \"name\": \"MT_EMC_STAT\",\n                            \"id\": 11999\n                        },\n                        {\n                            \"name\": \"MT_EMCSTAT_FULL_UPDATE\",\n                            \"id\": 12500\n                        },\n                        {\n                            \"name\": \"MT_EMCSTAT_INCREMENTAL_UPDATE\",\n                            \"id\": 12501\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_ERROR\",\n                            \"id\": 12510\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_TEXT\",\n                            \"id\": 12511\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_DISPLAY\",\n                            \"id\": 12512\n                        },\n                        {\n                            \"name\": \"MT_EMCCMD_EXECUTED\",\n                            \"id\": 12520\n                        },\n                        {\n                            \"name\": \"MT_EMCCMD_COMPLETED\",\n                            \"id\": 12521\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_FULL_UPDATE\",\n                            \"id\": 12600\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_INCREMENTAL_UPDATE\",\n                            \"id\": 12601\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_ERROR\",\n                            \"id\": 12602\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_START\",\n                            \"id\": 12610\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_TERMINATE\",\n                            \"id\": 12611\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_KILL\",\n                            \"id\": 12612\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_WRITE_STDIN\",\n                            \"id\": 12613\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_CALL\",\n                            \"id\": 12614\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_SHUTDOWN\",\n                            \"id\": 12615\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_SET\",\n                            \"id\": 12616\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginIndex\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ORIGIN_UNKNOWN\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ORIGIN_G54\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ORIGIN_G55\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ORIGIN_G56\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ORIGIN_G57\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ORIGIN_G58\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_1\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_2\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_3\",\n                            \"id\": 9\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TermConditionType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"_EMC_TRAJ_TERM_COND_STOP\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_EMC_TRAJ_TERM_COND_BLEND\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"CanonDirection\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"_CANON_STOPPED\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_CANON_CLOCKWISE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"_CANON_COUNTERCLOCKWISE\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"InputType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"_ANALOG_INPUT\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"_DIGITAL_INPUT\",\n                            \"id\": 1\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"WaitType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"IMMEDIATE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"RISE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"FALL\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"BE_HIGH\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"BE_LOW\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"InterpreterStateType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"INTERP_IDLE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"INTERP_RUNNING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"INTERP_SYNC_WAIT\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"INTERP_PAUSED\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"INTERP_QUEUE_WAIT\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"INTERP_ABORT_WAIT\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"INTERP_STATE_UNSET\",\n                            \"id\": 99\n                        }\n                    ]\n                }\n            ],\n            \"isNamespace\": true\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"FieldType\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"FT_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"FT_CALLBACK\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"FT_POINTER\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"FT_STATIC\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"FT_IGNORE\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"IntSize\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"IS_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"IS_8\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"IS_16\",\n                    \"id\": 16\n                },\n                {\n                    \"name\": \"IS_32\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"IS_64\",\n                    \"id\": 64\n                }\n            ]\n        }\n    ],\n    \"isNamespace\": true\n}).build();","module.exports = require(\"protobufjs\").newBuilder({})['import']({\n    \"package\": null,\n    \"syntax\": \"proto2\",\n    \"options\": {\n        \"java_package\": \"fi.kapsi.koti.jpa.nanopb\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"NanoPBOptions\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_size\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_count\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"IntSize\",\n                    \"name\": \"int_size\",\n                    \"id\": 7,\n                    \"options\": {\n                        \"default\": \"IS_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"FieldType\",\n                    \"name\": \"type\",\n                    \"id\": 3,\n                    \"options\": {\n                        \"default\": \"FT_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"long_names\",\n                    \"id\": 4,\n                    \"options\": {\n                        \"default\": true\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"packed_struct\",\n                    \"id\": 5,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"skip_message\",\n                    \"id\": 6,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"no_unions\",\n                    \"id\": 8,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"uint32\",\n                    \"name\": \"msgid\",\n                    \"id\": 9\n                }\n            ]\n        },\n        {\n            \"name\": \"machinetalk\",\n            \"fields\": [],\n            \"syntax\": \"proto2\",\n            \"messages\": [\n                {\n                    \"name\": \"PmCartesian\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 300\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"x\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"y\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"z\",\n                            \"id\": 30\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcPose\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 301\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"tran\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"a\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"b\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"c\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"u\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"v\",\n                            \"id\": 60\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"w\",\n                            \"id\": 70\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Test1\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1300\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"TestOpType\",\n                            \"name\": \"op\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"end\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"center\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"normal\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"int32\",\n                            \"name\": \"turn\",\n                            \"id\": 50\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Test2\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1301\n                    },\n                    \"fields\": []\n                },\n                {\n                    \"name\": \"Test3\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1302\n                    },\n                    \"fields\": []\n                }\n            ],\n            \"enums\": [\n                {\n                    \"name\": \"TestOpType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"LINE\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"CIRCLE\",\n                            \"id\": 20\n                        }\n                    ]\n                }\n            ],\n            \"isNamespace\": true\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"FieldType\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"FT_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"FT_CALLBACK\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"FT_POINTER\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"FT_STATIC\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"FT_IGNORE\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"IntSize\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"IS_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"IS_8\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"IS_16\",\n                    \"id\": 16\n                },\n                {\n                    \"name\": \"IS_32\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"IS_64\",\n                    \"id\": 64\n                }\n            ]\n        }\n    ],\n    \"isNamespace\": true\n}).build();","module.exports = require(\"protobufjs\").newBuilder({})['import']({\n    \"package\": null,\n    \"syntax\": \"proto2\",\n    \"options\": {\n        \"java_package\": \"fi.kapsi.koti.jpa.nanopb\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"NanoPBOptions\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_size\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_count\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"IntSize\",\n                    \"name\": \"int_size\",\n                    \"id\": 7,\n                    \"options\": {\n                        \"default\": \"IS_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"FieldType\",\n                    \"name\": \"type\",\n                    \"id\": 3,\n                    \"options\": {\n                        \"default\": \"FT_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"long_names\",\n                    \"id\": 4,\n                    \"options\": {\n                        \"default\": true\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"packed_struct\",\n                    \"id\": 5,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"skip_message\",\n                    \"id\": 6,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"no_unions\",\n                    \"id\": 8,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"uint32\",\n                    \"name\": \"msgid\",\n                    \"id\": 9\n                }\n            ]\n        },\n        {\n            \"name\": \"machinetalk\",\n            \"fields\": [],\n            \"syntax\": \"proto2\",\n            \"enums\": [\n                {\n                    \"name\": \"ValueType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_BIT\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"HAL_FLOAT\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"HAL_S32\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"HAL_U32\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"HAL_S64\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"HAL_U64\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"STRING\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"BYTES\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"INT32\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"UINT32\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"INT64\",\n                            \"id\": 40\n                        },\n                        {\n                            \"name\": \"UINT64\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"DOUBLE\",\n                            \"id\": 60\n                        },\n                        {\n                            \"name\": \"BOOL\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"CARTESIAN\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"LEGACY_CARTESIAN\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"POSE\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"LEGACY_POSE\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalPinDirection\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_IN\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"HAL_OUT\",\n                            \"id\": 32\n                        },\n                        {\n                            \"name\": \"HAL_IO\",\n                            \"id\": 48\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalParamDirection\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_RO\",\n                            \"id\": 64\n                        },\n                        {\n                            \"name\": \"HAL_RW\",\n                            \"id\": 192\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalFunctType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"FS_LEGACY_THREADFUNC\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"FS_XTHREADFUNC\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"FS_USERLAND\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ObjectType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_OBJECT_INVALID\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"HAL_PIN\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"HAL_SIGNAL\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"HAL_PARAM\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"HAL_THREAD\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"HAL_FUNCT\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"HAL_COMPONENT\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"HAL_VTABLE\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"HAL_INST\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"HAL_RING\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"HAL_GROUP\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"HAL_PLUG\",\n                            \"id\": 12\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"msgidType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"MSGID_MAX\",\n                            \"id\": 4000\n                        },\n                        {\n                            \"name\": \"MSGID_ROUTE_DELIMITER\",\n                            \"id\": 4001\n                        },\n                        {\n                            \"name\": \"MSGID_ERROR_MSG\",\n                            \"id\": 4002\n                        },\n                        {\n                            \"name\": \"MSGID_BLOB\",\n                            \"id\": 4003\n                        },\n                        {\n                            \"name\": \"MSGID_STRING\",\n                            \"id\": 4004\n                        },\n                        {\n                            \"name\": \"MSGID_HOP\",\n                            \"id\": 4005\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"socketType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ST_ZMQ_PAIR\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_PUB\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_SUB\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_REQ\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_REP\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_DEALER\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_ROUTER\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_PULL\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_PUSH\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_XPUB\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_XSUB\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_STREAM\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_INVALID\",\n                            \"id\": 15\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"securityMechanism\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"SM_ZMQ_NONE\",\n                            \"id\": -1\n                        },\n                        {\n                            \"name\": \"SM_ZMQ_NULL\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"SM_ZMQ_PLAIN\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"SM_ZMQ_CURVE\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"RCS_STATUS\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"UNINITIALIZED_STATUS\",\n                            \"id\": -1\n                        },\n                        {\n                            \"name\": \"RCS_DONE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"RCS_EXEC\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"RCS_ERROR\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"RCS_RECEIVED\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MsgOrigin\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"MSG_KERNEL\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"MSG_RTUSER\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"MSG_ULAPI\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MsgLevel\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"RTAPI_MSG_NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_ERR\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_WARN\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_INFO\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_DBG\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_ALL\",\n                            \"id\": 5\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginDetail\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"UNIX_SIGNAL\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"INSTANCE_SHUTDOWN\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"ZMQ_SOCKET\",\n                            \"id\": 70\n                        },\n                        {\n                            \"name\": \"NML_LAYER\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"RCS_LAYER\",\n                            \"id\": 90\n                        },\n                        {\n                            \"name\": \"CMS_LAYER\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"IP_LAYER\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"TCP_LAYER\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"PGM_LAYER\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"PROCESS\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"USER_THREAD\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"RT_THREAD\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"COMPONENT\",\n                            \"id\": 40\n                        },\n                        {\n                            \"name\": \"THREAD_FUNCTION\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"COMPONENT_INIT\",\n                            \"id\": 60\n                        },\n                        {\n                            \"name\": \"COMPONENT_EXIT\",\n                            \"id\": 70\n                        },\n                        {\n                            \"name\": \"GROUP\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"PIN\",\n                            \"id\": 90\n                        },\n                        {\n                            \"name\": \"SIGNAL\",\n                            \"id\": 100\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Severity\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"S_INFORMATIONAL\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"S_WARNING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"S_FAIL\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"StatusType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ENQUEUED\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"PROCESSING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"COMPLETE\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"FAILED\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ReplyType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ON_RECEPTION\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ON_QUEUED\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ON_COMPLETION\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ALL_STEPS\",\n                            \"id\": 255\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ST_LOGGING\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ST_CONFIG\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ST_REDIS\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ST_HTTP\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ST_HTTPS\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ST_WEBSOCKET\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ST_WEBSOCKETS\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ST_RTAPI_COMMAND\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ST_STP_HALGROUP\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"ST_STP_HALRCOMP\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"ST_STP_INTERP\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"ST_STP_TASK\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"ST_HAL_RCOMMAND\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"ST_TASK_COMMAND\",\n                            \"id\": 14\n                        },\n                        {\n                            \"name\": \"ST_INTERP_COMMAND\",\n                            \"id\": 15\n                        },\n                        {\n                            \"name\": \"ST_MESSAGEBUS_COMMAND\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"ST_MESSAGEBUS_RESPONSE\",\n                            \"id\": 17\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceAPI\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"SA_ZMQ_PROTOBUF\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"SA_WS_JSON\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ContainerType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"MT_RTMESSAGE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"MT_MOTCMD\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"MT_MOTSTATUS\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTCMD\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTSTATUS\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"MT_WOU\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"MT_HALUPDATE\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_MESSAGE\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"MT_LOG_MESSAGE\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"MT_PREVIEW\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"MT_PROGRESS\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"MT_INTERP_STAT\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"MT_SYSLOG\",\n                            \"id\": 18\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_NML\",\n                            \"id\": 19\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTCONFIG\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"MT_STP_UPDATE_FULL\",\n                            \"id\": 26\n                        },\n                        {\n                            \"name\": \"MT_STP_UPDATE\",\n                            \"id\": 28\n                        },\n                        {\n                            \"name\": \"MT_STP_NOGROUP\",\n                            \"id\": 27\n                        },\n                        {\n                            \"name\": \"MT_SHUTDOWN\",\n                            \"id\": 45\n                        },\n                        {\n                            \"name\": \"MT_CONFIRM_SHUTDOWN\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE0\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE1\",\n                            \"id\": 31\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE2\",\n                            \"id\": 32\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE3\",\n                            \"id\": 33\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE4\",\n                            \"id\": 34\n                        },\n                        {\n                            \"name\": \"MT_ASCII\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"MT_UNICODE\",\n                            \"id\": 101\n                        },\n                        {\n                            \"name\": \"MT_GCODE\",\n                            \"id\": 102\n                        },\n                        {\n                            \"name\": \"MT_PYTHON\",\n                            \"id\": 103\n                        },\n                        {\n                            \"name\": \"MT_PICKLE\",\n                            \"id\": 104\n                        },\n                        {\n                            \"name\": \"MT_TCL\",\n                            \"id\": 105\n                        },\n                        {\n                            \"name\": \"MT_XML\",\n                            \"id\": 106\n                        },\n                        {\n                            \"name\": \"MT_JSON\",\n                            \"id\": 107\n                        },\n                        {\n                            \"name\": \"MT_JPEG\",\n                            \"id\": 108\n                        },\n                        {\n                            \"name\": \"MT_PNG\",\n                            \"id\": 109\n                        },\n                        {\n                            \"name\": \"MT_TIFF\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"MT_POSTSCRIPT\",\n                            \"id\": 111\n                        },\n                        {\n                            \"name\": \"MT_SVG\",\n                            \"id\": 112\n                        },\n                        {\n                            \"name\": \"MT_ZMQ_SUBSCRIBE\",\n                            \"id\": 150\n                        },\n                        {\n                            \"name\": \"MT_ZMQ_UNSUBSCRIBE\",\n                            \"id\": 151\n                        },\n                        {\n                            \"name\": \"MT_PING\",\n                            \"id\": 210\n                        },\n                        {\n                            \"name\": \"MT_PING_ACKNOWLEDGE\",\n                            \"id\": 215\n                        },\n                        {\n                            \"name\": \"MT_REJECT\",\n                            \"id\": 220\n                        },\n                        {\n                            \"name\": \"MT_DONE\",\n                            \"id\": 240\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_REQUEST\",\n                            \"id\": 250\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_ANNOUNCEMENT\",\n                            \"id\": 251\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_PROBE\",\n                            \"id\": 252\n                        },\n                        {\n                            \"name\": \"MT_MESSAGEBUS_NO_DESTINATION\",\n                            \"id\": 255\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND\",\n                            \"id\": 256\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND_CONFIRM\",\n                            \"id\": 257\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND_REJECT\",\n                            \"id\": 258\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_SET\",\n                            \"id\": 259\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_SET_REJECT\",\n                            \"id\": 260\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_ACK\",\n                            \"id\": 263\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_SET\",\n                            \"id\": 265\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_SET_REJECT\",\n                            \"id\": 266\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_GET\",\n                            \"id\": 267\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_GET_REJECT\",\n                            \"id\": 268\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_CREATE\",\n                            \"id\": 269\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_CREATE_REJECT\",\n                            \"id\": 270\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DELETE\",\n                            \"id\": 271\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DELETE_REJECT\",\n                            \"id\": 272\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_ACK\",\n                            \"id\": 273\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_ERROR\",\n                            \"id\": 274\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DESCRIBE\",\n                            \"id\": 276\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DESCRIPTION\",\n                            \"id\": 277\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_FULL_UPDATE\",\n                            \"id\": 288\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_INCREMENTAL_UPDATE\",\n                            \"id\": 289\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_ERROR\",\n                            \"id\": 290\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND\",\n                            \"id\": 294\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND_CONFIRM\",\n                            \"id\": 295\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND_REJECT\",\n                            \"id\": 296\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_FULL_UPDATE\",\n                            \"id\": 297\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_INCREMENTAL_UPDATE\",\n                            \"id\": 298\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_ERROR\",\n                            \"id\": 299\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_EXIT\",\n                            \"id\": 300\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_PING\",\n                            \"id\": 301\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_LOADRT\",\n                            \"id\": 302\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_LOG\",\n                            \"id\": 303\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_UNLOADRT\",\n                            \"id\": 305\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_NEWINST\",\n                            \"id\": 306\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_NEWTHREAD\",\n                            \"id\": 307\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_DELTHREAD\",\n                            \"id\": 308\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_CALLFUNC\",\n                            \"id\": 309\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_REPLY\",\n                            \"id\": 310\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_DELINST\",\n                            \"id\": 311\n                        },\n                        {\n                            \"name\": \"MT_LIST_APPLICATIONS\",\n                            \"id\": 350\n                        },\n                        {\n                            \"name\": \"MT_DESCRIBE_APPLICATION\",\n                            \"id\": 351\n                        },\n                        {\n                            \"name\": \"MT_RETRIEVE_APPLICATION\",\n                            \"id\": 352\n                        },\n                        {\n                            \"name\": \"MT_APPLICATION_DETAIL\",\n                            \"id\": 353\n                        },\n                        {\n                            \"name\": \"MT_ERROR\",\n                            \"id\": 360\n                        },\n                        {\n                            \"name\": \"MT_FULL_UPDATE\",\n                            \"id\": 370\n                        },\n                        {\n                            \"name\": \"MT_INCREMENTAL_UPDATE\",\n                            \"id\": 371\n                        },\n                        {\n                            \"name\": \"MT_TASK_REPLY\",\n                            \"id\": 400\n                        },\n                        {\n                            \"name\": \"MT_TICKET_UPDATE\",\n                            \"id\": 401\n                        },\n                        {\n                            \"name\": \"MT_CREDIT_UPDATE\",\n                            \"id\": 450\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_LOWER\",\n                            \"id\": 1000\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_UPPER\",\n                            \"id\": 1100\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ABORT\",\n                            \"id\": 1001\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_AXIS_ABORT\",\n                            \"id\": 1002\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE\",\n                            \"id\": 1003\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE\",\n                            \"id\": 1004\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE_AMPLIFIER\",\n                            \"id\": 1005\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE_AMPLIFIER\",\n                            \"id\": 1006\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE_WATCHDOG\",\n                            \"id\": 1007\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE_WATCHDOG\",\n                            \"id\": 1008\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ACTIVATE_JOINT\",\n                            \"id\": 1009\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DEACTIVATE_JOINT\",\n                            \"id\": 1010\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_PAUSE\",\n                            \"id\": 1011\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_RESUME\",\n                            \"id\": 1012\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_STEP\",\n                            \"id\": 1013\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FREE\",\n                            \"id\": 1014\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COORD\",\n                            \"id\": 1015\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_TELEOP\",\n                            \"id\": 1016\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_SCALE\",\n                            \"id\": 1017\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SS_ENABLE\",\n                            \"id\": 1018\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FEED_SCALE\",\n                            \"id\": 1019\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FS_ENABLE\",\n                            \"id\": 1020\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FH_ENABLE\",\n                            \"id\": 1021\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_AF_ENABLE\",\n                            \"id\": 1022\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_OVERRIDE_LIMITS\",\n                            \"id\": 1023\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_HOME\",\n                            \"id\": 1024\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_UNHOME\",\n                            \"id\": 1025\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_CONT\",\n                            \"id\": 1026\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_INCR\",\n                            \"id\": 1027\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_ABS\",\n                            \"id\": 1028\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_LINE\",\n                            \"id\": 1029\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_CIRCLE\",\n                            \"id\": 1030\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_TELEOP_VECTOR\",\n                            \"id\": 1031\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_CLEAR_PROBE_FLAGS\",\n                            \"id\": 1032\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_PROBE\",\n                            \"id\": 1033\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_RIGID_TAP\",\n                            \"id\": 1034\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_POSITION_LIMITS\",\n                            \"id\": 1035\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_BACKLASH\",\n                            \"id\": 1036\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MIN_FERROR\",\n                            \"id\": 1037\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MAX_FERROR\",\n                            \"id\": 1038\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_VEL\",\n                            \"id\": 1039\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_VEL_LIMIT\",\n                            \"id\": 1040\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_VEL_LIMIT\",\n                            \"id\": 1041\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_ACC_LIMIT\",\n                            \"id\": 1042\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_ACC\",\n                            \"id\": 1043\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_TERM_COND\",\n                            \"id\": 1044\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_NUM_AXES\",\n                            \"id\": 1045\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_WORLD_HOME\",\n                            \"id\": 1046\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_HOMING_PARAMS\",\n                            \"id\": 1047\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_DEBUG\",\n                            \"id\": 1048\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_DOUT\",\n                            \"id\": 1049\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_AOUT\",\n                            \"id\": 1050\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_SPINDLESYNC\",\n                            \"id\": 1051\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_ON\",\n                            \"id\": 1052\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_OFF\",\n                            \"id\": 1053\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_INCREASE\",\n                            \"id\": 1054\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_DECREASE\",\n                            \"id\": 1055\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 1056\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 1057\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MOTOR_OFFSET\",\n                            \"id\": 1058\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_COMP\",\n                            \"id\": 1059\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_OFFSET\",\n                            \"id\": 1060\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_OK\",\n                            \"id\": 1061\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_UNKNOWN_COMMAND\",\n                            \"id\": 1062\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_INVALID_COMMAND\",\n                            \"id\": 1063\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_INVALID_PARAMS\",\n                            \"id\": 1064\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_BAD_EXEC\",\n                            \"id\": 1065\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_DISABLED\",\n                            \"id\": 1066\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_FREE\",\n                            \"id\": 1067\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_TELEOP\",\n                            \"id\": 1068\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_COORD\",\n                            \"id\": 1069\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOINT_FLAG\",\n                            \"id\": 1070\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_FLAG\",\n                            \"id\": 1071\n                        },\n                        {\n                            \"name\": \"MT_PRU_FIRMWARE\",\n                            \"id\": 2048\n                        },\n                        {\n                            \"name\": \"MT_MESA_5I20_FIRMWARE\",\n                            \"id\": 3000\n                        },\n                        {\n                            \"name\": \"MT_BLOB\",\n                            \"id\": 4000\n                        },\n                        {\n                            \"name\": \"MT_TEST1\",\n                            \"id\": 5001\n                        },\n                        {\n                            \"name\": \"MT_TEST2\",\n                            \"id\": 5002\n                        },\n                        {\n                            \"name\": \"MT_TEST3\",\n                            \"id\": 5003\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_LOWER\",\n                            \"id\": 10000\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_UPPER\",\n                            \"id\": 13000\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_ERROR\",\n                            \"id\": 10011\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_TEXT\",\n                            \"id\": 10012\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_DISPLAY\",\n                            \"id\": 10013\n                        },\n                        {\n                            \"name\": \"MT_EMC_NULL\",\n                            \"id\": 10021\n                        },\n                        {\n                            \"name\": \"MT_EMC_SET_DEBUG\",\n                            \"id\": 10022\n                        },\n                        {\n                            \"name\": \"MT_EMC_SYSTEM_CMD\",\n                            \"id\": 10030\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_AXIS\",\n                            \"id\": 10101\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_UNITS\",\n                            \"id\": 10102\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MIN_POSITION_LIMIT\",\n                            \"id\": 10107\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MAX_POSITION_LIMIT\",\n                            \"id\": 10108\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_START_CHANGE\",\n                            \"id\": 1110\n                        },\n                        {\n                            \"name\": \"MT_EMC_EXEC_PLUGIN_CALL\",\n                            \"id\": 1112\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_PLUGIN_CALL\",\n                            \"id\": 1113\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_FERROR\",\n                            \"id\": 10111\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_HOMING_PARAMS\",\n                            \"id\": 10112\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MIN_FERROR\",\n                            \"id\": 10115\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MAX_VELOCITY\",\n                            \"id\": 10116\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_INIT\",\n                            \"id\": 10118\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_HALT\",\n                            \"id\": 10119\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ABORT\",\n                            \"id\": 10120\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ENABLE\",\n                            \"id\": 10121\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_DISABLE\",\n                            \"id\": 10122\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_HOME\",\n                            \"id\": 10123\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_UNHOME\",\n                            \"id\": 10135\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_JOG\",\n                            \"id\": 10124\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_INCR_JOG\",\n                            \"id\": 10125\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ABS_JOG\",\n                            \"id\": 10126\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ACTIVATE\",\n                            \"id\": 10127\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_DEACTIVATE\",\n                            \"id\": 10128\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_OVERRIDE_LIMITS\",\n                            \"id\": 10129\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_LOAD_COMP\",\n                            \"id\": 10131\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_BACKLASH\",\n                            \"id\": 10134\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_STAT\",\n                            \"id\": 10199\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_AXES\",\n                            \"id\": 10201\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_UNITS\",\n                            \"id\": 10202\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_CYCLE_TIME\",\n                            \"id\": 10203\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MODE\",\n                            \"id\": 10204\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_VELOCITY\",\n                            \"id\": 10205\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_ACCELERATION\",\n                            \"id\": 10206\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MAX_VELOCITY\",\n                            \"id\": 10207\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MAX_ACCELERATION\",\n                            \"id\": 10208\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SCALE\",\n                            \"id\": 10209\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MOTION_ID\",\n                            \"id\": 10210\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_INIT\",\n                            \"id\": 10211\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_HALT\",\n                            \"id\": 10212\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_ENABLE\",\n                            \"id\": 10213\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_DISABLE\",\n                            \"id\": 10214\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_ABORT\",\n                            \"id\": 10215\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_PAUSE\",\n                            \"id\": 10216\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_STEP\",\n                            \"id\": 10217\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_RESUME\",\n                            \"id\": 10218\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_DELAY\",\n                            \"id\": 10219\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_LINEAR_MOVE\",\n                            \"id\": 10220\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_CIRCULAR_MOVE\",\n                            \"id\": 10221\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TERM_COND\",\n                            \"id\": 10222\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_OFFSET\",\n                            \"id\": 10223\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_G5X\",\n                            \"id\": 10224\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_HOME\",\n                            \"id\": 10225\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_ROTATION\",\n                            \"id\": 10226\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_G92\",\n                            \"id\": 10227\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_CLEAR_PROBE_TRIPPED_FLAG\",\n                            \"id\": 10228\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_PROBE\",\n                            \"id\": 10229\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TELEOP_ENABLE\",\n                            \"id\": 10230\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TELEOP_VECTOR\",\n                            \"id\": 10231\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SPINDLESYNC\",\n                            \"id\": 10232\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SPINDLE_SCALE\",\n                            \"id\": 10233\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_FO_ENABLE\",\n                            \"id\": 10234\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SO_ENABLE\",\n                            \"id\": 10235\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_FH_ENABLE\",\n                            \"id\": 10236\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_RIGID_TAP\",\n                            \"id\": 10237\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_RAPID_SCALE\",\n                            \"id\": 10238\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_STAT\",\n                            \"id\": 10299\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_INIT\",\n                            \"id\": 10301\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_HALT\",\n                            \"id\": 10302\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_ABORT\",\n                            \"id\": 10303\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_SET_AOUT\",\n                            \"id\": 10304\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_SET_DOUT\",\n                            \"id\": 10305\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_ADAPTIVE\",\n                            \"id\": 10306\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_ORIENT\",\n                            \"id\": 10317\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_WAIT_ORIENT_COMPLETE\",\n                            \"id\": 10318\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_STAT\",\n                            \"id\": 10399\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_INIT\",\n                            \"id\": 10501\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_HALT\",\n                            \"id\": 10502\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_ABORT\",\n                            \"id\": 10503\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_SET_MODE\",\n                            \"id\": 10504\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_SET_STATE\",\n                            \"id\": 10505\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_OPEN\",\n                            \"id\": 10506\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RUN\",\n                            \"id\": 10507\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_READ\",\n                            \"id\": 10508\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_EXECUTE\",\n                            \"id\": 10509\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_PAUSE\",\n                            \"id\": 10510\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_STEP\",\n                            \"id\": 10511\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RESUME\",\n                            \"id\": 10512\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_END\",\n                            \"id\": 10513\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_CLOSE\",\n                            \"id\": 10514\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_INIT\",\n                            \"id\": 10515\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SYNCH\",\n                            \"id\": 10516\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SET_OPTIONAL_STOP\",\n                            \"id\": 10517\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SET_BLOCK_DELETE\",\n                            \"id\": 10518\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_OPTIONAL_STOP\",\n                            \"id\": 10519\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RESET\",\n                            \"id\": 10520\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_REPLY\",\n                            \"id\": 10530\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_STAT\",\n                            \"id\": 10599\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_INIT\",\n                            \"id\": 11101\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_HALT\",\n                            \"id\": 11102\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_ABORT\",\n                            \"id\": 11103\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_PREPARE\",\n                            \"id\": 11104\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_LOAD\",\n                            \"id\": 11105\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_UNLOAD\",\n                            \"id\": 11106\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_LOAD_TOOL_TABLE\",\n                            \"id\": 11107\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_SET_OFFSET\",\n                            \"id\": 11108\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_SET_NUMBER\",\n                            \"id\": 11109\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_UPDATE_TOOL_TABLE\",\n                            \"id\": 11110\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_STAT\",\n                            \"id\": 11199\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_ON\",\n                            \"id\": 11206\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_OFF\",\n                            \"id\": 11207\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_RESET\",\n                            \"id\": 11208\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_INPUT_WAIT\",\n                            \"id\": 11209\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_STAT\",\n                            \"id\": 11299\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_ON\",\n                            \"id\": 11304\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_OFF\",\n                            \"id\": 11305\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_INCREASE\",\n                            \"id\": 11309\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_DECREASE\",\n                            \"id\": 11310\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_CONSTANT\",\n                            \"id\": 11311\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 11312\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 11313\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_SPEED\",\n                            \"id\": 11316\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_STAT\",\n                            \"id\": 11399\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_MIST_ON\",\n                            \"id\": 11404\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_MIST_OFF\",\n                            \"id\": 11405\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_FLOOD_ON\",\n                            \"id\": 11406\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_FLOOD_OFF\",\n                            \"id\": 11407\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_STAT\",\n                            \"id\": 11499\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_ON\",\n                            \"id\": 11504\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_OFF\",\n                            \"id\": 11505\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_STAT\",\n                            \"id\": 11599\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_INIT\",\n                            \"id\": 11601\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_HALT\",\n                            \"id\": 11602\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_ABORT\",\n                            \"id\": 11603\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_SET_CYCLE_TIME\",\n                            \"id\": 11604\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_STAT\",\n                            \"id\": 11699\n                        },\n                        {\n                            \"name\": \"MT_EMC_INIT\",\n                            \"id\": 11901\n                        },\n                        {\n                            \"name\": \"MT_EMC_HALT\",\n                            \"id\": 11902\n                        },\n                        {\n                            \"name\": \"MT_EMC_ABORT\",\n                            \"id\": 11903\n                        },\n                        {\n                            \"name\": \"MT_EMC_STAT\",\n                            \"id\": 11999\n                        },\n                        {\n                            \"name\": \"MT_EMCSTAT_FULL_UPDATE\",\n                            \"id\": 12500\n                        },\n                        {\n                            \"name\": \"MT_EMCSTAT_INCREMENTAL_UPDATE\",\n                            \"id\": 12501\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_ERROR\",\n                            \"id\": 12510\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_TEXT\",\n                            \"id\": 12511\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_DISPLAY\",\n                            \"id\": 12512\n                        },\n                        {\n                            \"name\": \"MT_EMCCMD_EXECUTED\",\n                            \"id\": 12520\n                        },\n                        {\n                            \"name\": \"MT_EMCCMD_COMPLETED\",\n                            \"id\": 12521\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_FULL_UPDATE\",\n                            \"id\": 12600\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_INCREMENTAL_UPDATE\",\n                            \"id\": 12601\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_ERROR\",\n                            \"id\": 12602\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_START\",\n                            \"id\": 12610\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_TERMINATE\",\n                            \"id\": 12611\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_KILL\",\n                            \"id\": 12612\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_WRITE_STDIN\",\n                            \"id\": 12613\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_CALL\",\n                            \"id\": 12614\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_SHUTDOWN\",\n                            \"id\": 12615\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_SET\",\n                            \"id\": 12616\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginIndex\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ORIGIN_UNKNOWN\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ORIGIN_G54\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ORIGIN_G55\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ORIGIN_G56\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ORIGIN_G57\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ORIGIN_G58\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_1\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_2\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_3\",\n                            \"id\": 9\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TermConditionType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"_EMC_TRAJ_TERM_COND_STOP\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_EMC_TRAJ_TERM_COND_BLEND\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"CanonDirection\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"_CANON_STOPPED\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_CANON_CLOCKWISE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"_CANON_COUNTERCLOCKWISE\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"InputType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"_ANALOG_INPUT\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"_DIGITAL_INPUT\",\n                            \"id\": 1\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"WaitType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"IMMEDIATE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"RISE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"FALL\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"BE_HIGH\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"BE_LOW\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"InterpreterStateType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"INTERP_IDLE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"INTERP_RUNNING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"INTERP_SYNC_WAIT\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"INTERP_PAUSED\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"INTERP_QUEUE_WAIT\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"INTERP_ABORT_WAIT\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"INTERP_STATE_UNSET\",\n                            \"id\": 99\n                        }\n                    ]\n                }\n            ],\n            \"isNamespace\": true\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"FieldType\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"FT_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"FT_CALLBACK\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"FT_POINTER\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"FT_STATIC\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"FT_IGNORE\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"IntSize\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"IS_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"IS_8\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"IS_16\",\n                    \"id\": 16\n                },\n                {\n                    \"name\": \"IS_32\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"IS_64\",\n                    \"id\": 64\n                }\n            ]\n        }\n    ],\n    \"isNamespace\": true\n}).build();","module.exports = require(\"protobufjs\").newBuilder({})['import']({\n    \"package\": null,\n    \"syntax\": \"proto2\",\n    \"options\": {\n        \"java_package\": \"fi.kapsi.koti.jpa.nanopb\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"NanoPBOptions\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_size\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"max_count\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"IntSize\",\n                    \"name\": \"int_size\",\n                    \"id\": 7,\n                    \"options\": {\n                        \"default\": \"IS_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"FieldType\",\n                    \"name\": \"type\",\n                    \"id\": 3,\n                    \"options\": {\n                        \"default\": \"FT_DEFAULT\"\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"long_names\",\n                    \"id\": 4,\n                    \"options\": {\n                        \"default\": true\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"packed_struct\",\n                    \"id\": 5,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"skip_message\",\n                    \"id\": 6,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"no_unions\",\n                    \"id\": 8,\n                    \"options\": {\n                        \"default\": false\n                    }\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"uint32\",\n                    \"name\": \"msgid\",\n                    \"id\": 9\n                }\n            ]\n        },\n        {\n            \"name\": \"machinetalk\",\n            \"fields\": [],\n            \"syntax\": \"proto2\",\n            \"messages\": [\n                {\n                    \"name\": \"PmCartesian\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 300\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"x\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"y\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"z\",\n                            \"id\": 30\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"EmcPose\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 301\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"tran\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"a\",\n                            \"id\": 20\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"b\",\n                            \"id\": 30\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"c\",\n                            \"id\": 40\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"u\",\n                            \"id\": 50\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"v\",\n                            \"id\": 60\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"w\",\n                            \"id\": 70\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Value\",\n                    \"syntax\": \"proto2\",\n                    \"options\": {\n                        \"(nanopb_msgopt).msgid\": 1500\n                    },\n                    \"fields\": [\n                        {\n                            \"rule\": \"required\",\n                            \"type\": \"ValueType\",\n                            \"name\": \"type\",\n                            \"id\": 10\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"halbit\",\n                            \"id\": 100\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"halfloat\",\n                            \"id\": 101\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"hals32\",\n                            \"id\": 102\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"halu32\",\n                            \"id\": 103\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bytes\",\n                            \"name\": \"v_bytes\",\n                            \"id\": 120\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed32\",\n                            \"name\": \"v_int32\",\n                            \"id\": 130\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"sfixed64\",\n                            \"name\": \"v_int64\",\n                            \"id\": 140\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed32\",\n                            \"name\": \"v_uint32\",\n                            \"id\": 150\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"fixed64\",\n                            \"name\": \"v_uint64\",\n                            \"id\": 160\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"double\",\n                            \"name\": \"v_double\",\n                            \"id\": 170\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"string\",\n                            \"name\": \"v_string\",\n                            \"id\": 180,\n                            \"options\": {\n                                \"(nanopb).max_size\": 41\n                            }\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"bool\",\n                            \"name\": \"v_bool\",\n                            \"id\": 190\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"PmCartesian\",\n                            \"name\": \"carte\",\n                            \"id\": 200\n                        },\n                        {\n                            \"rule\": \"optional\",\n                            \"type\": \"EmcPose\",\n                            \"name\": \"pose\",\n                            \"id\": 220\n                        }\n                    ]\n                }\n            ],\n            \"enums\": [\n                {\n                    \"name\": \"ValueType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_BIT\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"HAL_FLOAT\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"HAL_S32\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"HAL_U32\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"HAL_S64\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"HAL_U64\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"STRING\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"BYTES\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"INT32\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"UINT32\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"INT64\",\n                            \"id\": 40\n                        },\n                        {\n                            \"name\": \"UINT64\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"DOUBLE\",\n                            \"id\": 60\n                        },\n                        {\n                            \"name\": \"BOOL\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"CARTESIAN\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"LEGACY_CARTESIAN\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"POSE\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"LEGACY_POSE\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalPinDirection\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_IN\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"HAL_OUT\",\n                            \"id\": 32\n                        },\n                        {\n                            \"name\": \"HAL_IO\",\n                            \"id\": 48\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalParamDirection\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_RO\",\n                            \"id\": 64\n                        },\n                        {\n                            \"name\": \"HAL_RW\",\n                            \"id\": 192\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"HalFunctType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"FS_LEGACY_THREADFUNC\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"FS_XTHREADFUNC\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"FS_USERLAND\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ObjectType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"HAL_OBJECT_INVALID\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"HAL_PIN\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"HAL_SIGNAL\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"HAL_PARAM\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"HAL_THREAD\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"HAL_FUNCT\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"HAL_COMPONENT\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"HAL_VTABLE\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"HAL_INST\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"HAL_RING\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"HAL_GROUP\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"HAL_MEMBER\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"HAL_PLUG\",\n                            \"id\": 12\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"msgidType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"MSGID_MAX\",\n                            \"id\": 4000\n                        },\n                        {\n                            \"name\": \"MSGID_ROUTE_DELIMITER\",\n                            \"id\": 4001\n                        },\n                        {\n                            \"name\": \"MSGID_ERROR_MSG\",\n                            \"id\": 4002\n                        },\n                        {\n                            \"name\": \"MSGID_BLOB\",\n                            \"id\": 4003\n                        },\n                        {\n                            \"name\": \"MSGID_STRING\",\n                            \"id\": 4004\n                        },\n                        {\n                            \"name\": \"MSGID_HOP\",\n                            \"id\": 4005\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"socketType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ST_ZMQ_PAIR\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_PUB\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_SUB\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_REQ\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_REP\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_DEALER\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_ROUTER\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_PULL\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_PUSH\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_XPUB\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_XSUB\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_STREAM\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"ST_ZMQ_INVALID\",\n                            \"id\": 15\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"securityMechanism\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"SM_ZMQ_NONE\",\n                            \"id\": -1\n                        },\n                        {\n                            \"name\": \"SM_ZMQ_NULL\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"SM_ZMQ_PLAIN\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"SM_ZMQ_CURVE\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"RCS_STATUS\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"UNINITIALIZED_STATUS\",\n                            \"id\": -1\n                        },\n                        {\n                            \"name\": \"RCS_DONE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"RCS_EXEC\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"RCS_ERROR\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"RCS_RECEIVED\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MsgOrigin\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"MSG_KERNEL\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"MSG_RTUSER\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"MSG_ULAPI\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"MsgLevel\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"RTAPI_MSG_NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_ERR\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_WARN\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_INFO\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_DBG\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"RTAPI_MSG_ALL\",\n                            \"id\": 5\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginDetail\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"UNIX_SIGNAL\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"INSTANCE_SHUTDOWN\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"ZMQ_SOCKET\",\n                            \"id\": 70\n                        },\n                        {\n                            \"name\": \"NML_LAYER\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"RCS_LAYER\",\n                            \"id\": 90\n                        },\n                        {\n                            \"name\": \"CMS_LAYER\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"IP_LAYER\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"TCP_LAYER\",\n                            \"id\": 120\n                        },\n                        {\n                            \"name\": \"PGM_LAYER\",\n                            \"id\": 130\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"PROCESS\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"USER_THREAD\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"RT_THREAD\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"COMPONENT\",\n                            \"id\": 40\n                        },\n                        {\n                            \"name\": \"THREAD_FUNCTION\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"COMPONENT_INIT\",\n                            \"id\": 60\n                        },\n                        {\n                            \"name\": \"COMPONENT_EXIT\",\n                            \"id\": 70\n                        },\n                        {\n                            \"name\": \"GROUP\",\n                            \"id\": 80\n                        },\n                        {\n                            \"name\": \"PIN\",\n                            \"id\": 90\n                        },\n                        {\n                            \"name\": \"SIGNAL\",\n                            \"id\": 100\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"Severity\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"S_INFORMATIONAL\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"S_WARNING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"S_FAIL\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"StatusType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ENQUEUED\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"PROCESSING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"COMPLETE\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"FAILED\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ReplyType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"NONE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ON_RECEPTION\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ON_QUEUED\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ON_COMPLETION\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ALL_STEPS\",\n                            \"id\": 255\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ST_LOGGING\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ST_CONFIG\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ST_REDIS\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ST_HTTP\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ST_HTTPS\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ST_WEBSOCKET\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ST_WEBSOCKETS\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ST_RTAPI_COMMAND\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ST_STP_HALGROUP\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"ST_STP_HALRCOMP\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"ST_STP_INTERP\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"ST_STP_TASK\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"ST_HAL_RCOMMAND\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"ST_TASK_COMMAND\",\n                            \"id\": 14\n                        },\n                        {\n                            \"name\": \"ST_INTERP_COMMAND\",\n                            \"id\": 15\n                        },\n                        {\n                            \"name\": \"ST_MESSAGEBUS_COMMAND\",\n                            \"id\": 16\n                        },\n                        {\n                            \"name\": \"ST_MESSAGEBUS_RESPONSE\",\n                            \"id\": 17\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ServiceAPI\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"SA_ZMQ_PROTOBUF\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"SA_WS_JSON\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"ContainerType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"MT_RTMESSAGE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"MT_MOTCMD\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"MT_MOTSTATUS\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTCMD\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTSTATUS\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"MT_WOU\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"MT_HALUPDATE\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_MESSAGE\",\n                            \"id\": 9\n                        },\n                        {\n                            \"name\": \"MT_LOG_MESSAGE\",\n                            \"id\": 10\n                        },\n                        {\n                            \"name\": \"MT_PREVIEW\",\n                            \"id\": 11\n                        },\n                        {\n                            \"name\": \"MT_PROGRESS\",\n                            \"id\": 12\n                        },\n                        {\n                            \"name\": \"MT_INTERP_STAT\",\n                            \"id\": 13\n                        },\n                        {\n                            \"name\": \"MT_SYSLOG\",\n                            \"id\": 18\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_NML\",\n                            \"id\": 19\n                        },\n                        {\n                            \"name\": \"MT_LEGACY_MOTCONFIG\",\n                            \"id\": 20\n                        },\n                        {\n                            \"name\": \"MT_STP_UPDATE_FULL\",\n                            \"id\": 26\n                        },\n                        {\n                            \"name\": \"MT_STP_UPDATE\",\n                            \"id\": 28\n                        },\n                        {\n                            \"name\": \"MT_STP_NOGROUP\",\n                            \"id\": 27\n                        },\n                        {\n                            \"name\": \"MT_SHUTDOWN\",\n                            \"id\": 45\n                        },\n                        {\n                            \"name\": \"MT_CONFIRM_SHUTDOWN\",\n                            \"id\": 50\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE0\",\n                            \"id\": 30\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE1\",\n                            \"id\": 31\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE2\",\n                            \"id\": 32\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE3\",\n                            \"id\": 33\n                        },\n                        {\n                            \"name\": \"MT_RTMESSAGE4\",\n                            \"id\": 34\n                        },\n                        {\n                            \"name\": \"MT_ASCII\",\n                            \"id\": 100\n                        },\n                        {\n                            \"name\": \"MT_UNICODE\",\n                            \"id\": 101\n                        },\n                        {\n                            \"name\": \"MT_GCODE\",\n                            \"id\": 102\n                        },\n                        {\n                            \"name\": \"MT_PYTHON\",\n                            \"id\": 103\n                        },\n                        {\n                            \"name\": \"MT_PICKLE\",\n                            \"id\": 104\n                        },\n                        {\n                            \"name\": \"MT_TCL\",\n                            \"id\": 105\n                        },\n                        {\n                            \"name\": \"MT_XML\",\n                            \"id\": 106\n                        },\n                        {\n                            \"name\": \"MT_JSON\",\n                            \"id\": 107\n                        },\n                        {\n                            \"name\": \"MT_JPEG\",\n                            \"id\": 108\n                        },\n                        {\n                            \"name\": \"MT_PNG\",\n                            \"id\": 109\n                        },\n                        {\n                            \"name\": \"MT_TIFF\",\n                            \"id\": 110\n                        },\n                        {\n                            \"name\": \"MT_POSTSCRIPT\",\n                            \"id\": 111\n                        },\n                        {\n                            \"name\": \"MT_SVG\",\n                            \"id\": 112\n                        },\n                        {\n                            \"name\": \"MT_ZMQ_SUBSCRIBE\",\n                            \"id\": 150\n                        },\n                        {\n                            \"name\": \"MT_ZMQ_UNSUBSCRIBE\",\n                            \"id\": 151\n                        },\n                        {\n                            \"name\": \"MT_PING\",\n                            \"id\": 210\n                        },\n                        {\n                            \"name\": \"MT_PING_ACKNOWLEDGE\",\n                            \"id\": 215\n                        },\n                        {\n                            \"name\": \"MT_REJECT\",\n                            \"id\": 220\n                        },\n                        {\n                            \"name\": \"MT_DONE\",\n                            \"id\": 240\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_REQUEST\",\n                            \"id\": 250\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_ANNOUNCEMENT\",\n                            \"id\": 251\n                        },\n                        {\n                            \"name\": \"MT_SERVICE_PROBE\",\n                            \"id\": 252\n                        },\n                        {\n                            \"name\": \"MT_MESSAGEBUS_NO_DESTINATION\",\n                            \"id\": 255\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND\",\n                            \"id\": 256\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND_CONFIRM\",\n                            \"id\": 257\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_BIND_REJECT\",\n                            \"id\": 258\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_SET\",\n                            \"id\": 259\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_SET_REJECT\",\n                            \"id\": 260\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_ACK\",\n                            \"id\": 263\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_SET\",\n                            \"id\": 265\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_SET_REJECT\",\n                            \"id\": 266\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_GET\",\n                            \"id\": 267\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_GET_REJECT\",\n                            \"id\": 268\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_CREATE\",\n                            \"id\": 269\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_CREATE_REJECT\",\n                            \"id\": 270\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DELETE\",\n                            \"id\": 271\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DELETE_REJECT\",\n                            \"id\": 272\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_ACK\",\n                            \"id\": 273\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_ERROR\",\n                            \"id\": 274\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DESCRIBE\",\n                            \"id\": 276\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMMAND_DESCRIPTION\",\n                            \"id\": 277\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_FULL_UPDATE\",\n                            \"id\": 288\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_INCREMENTAL_UPDATE\",\n                            \"id\": 289\n                        },\n                        {\n                            \"name\": \"MT_HALRCOMP_ERROR\",\n                            \"id\": 290\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND\",\n                            \"id\": 294\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND_CONFIRM\",\n                            \"id\": 295\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_BIND_REJECT\",\n                            \"id\": 296\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_FULL_UPDATE\",\n                            \"id\": 297\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_INCREMENTAL_UPDATE\",\n                            \"id\": 298\n                        },\n                        {\n                            \"name\": \"MT_HALGROUP_ERROR\",\n                            \"id\": 299\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_EXIT\",\n                            \"id\": 300\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_PING\",\n                            \"id\": 301\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_LOADRT\",\n                            \"id\": 302\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_LOG\",\n                            \"id\": 303\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_UNLOADRT\",\n                            \"id\": 305\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_NEWINST\",\n                            \"id\": 306\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_NEWTHREAD\",\n                            \"id\": 307\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_DELTHREAD\",\n                            \"id\": 308\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_CALLFUNC\",\n                            \"id\": 309\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_REPLY\",\n                            \"id\": 310\n                        },\n                        {\n                            \"name\": \"MT_RTAPI_APP_DELINST\",\n                            \"id\": 311\n                        },\n                        {\n                            \"name\": \"MT_LIST_APPLICATIONS\",\n                            \"id\": 350\n                        },\n                        {\n                            \"name\": \"MT_DESCRIBE_APPLICATION\",\n                            \"id\": 351\n                        },\n                        {\n                            \"name\": \"MT_RETRIEVE_APPLICATION\",\n                            \"id\": 352\n                        },\n                        {\n                            \"name\": \"MT_APPLICATION_DETAIL\",\n                            \"id\": 353\n                        },\n                        {\n                            \"name\": \"MT_ERROR\",\n                            \"id\": 360\n                        },\n                        {\n                            \"name\": \"MT_FULL_UPDATE\",\n                            \"id\": 370\n                        },\n                        {\n                            \"name\": \"MT_INCREMENTAL_UPDATE\",\n                            \"id\": 371\n                        },\n                        {\n                            \"name\": \"MT_TASK_REPLY\",\n                            \"id\": 400\n                        },\n                        {\n                            \"name\": \"MT_TICKET_UPDATE\",\n                            \"id\": 401\n                        },\n                        {\n                            \"name\": \"MT_CREDIT_UPDATE\",\n                            \"id\": 450\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_LOWER\",\n                            \"id\": 1000\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_UPPER\",\n                            \"id\": 1100\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ABORT\",\n                            \"id\": 1001\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_AXIS_ABORT\",\n                            \"id\": 1002\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE\",\n                            \"id\": 1003\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE\",\n                            \"id\": 1004\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE_AMPLIFIER\",\n                            \"id\": 1005\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE_AMPLIFIER\",\n                            \"id\": 1006\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ENABLE_WATCHDOG\",\n                            \"id\": 1007\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DISABLE_WATCHDOG\",\n                            \"id\": 1008\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_ACTIVATE_JOINT\",\n                            \"id\": 1009\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_DEACTIVATE_JOINT\",\n                            \"id\": 1010\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_PAUSE\",\n                            \"id\": 1011\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_RESUME\",\n                            \"id\": 1012\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_STEP\",\n                            \"id\": 1013\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FREE\",\n                            \"id\": 1014\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COORD\",\n                            \"id\": 1015\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_TELEOP\",\n                            \"id\": 1016\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_SCALE\",\n                            \"id\": 1017\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SS_ENABLE\",\n                            \"id\": 1018\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FEED_SCALE\",\n                            \"id\": 1019\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FS_ENABLE\",\n                            \"id\": 1020\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_FH_ENABLE\",\n                            \"id\": 1021\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_AF_ENABLE\",\n                            \"id\": 1022\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_OVERRIDE_LIMITS\",\n                            \"id\": 1023\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_HOME\",\n                            \"id\": 1024\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_UNHOME\",\n                            \"id\": 1025\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_CONT\",\n                            \"id\": 1026\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_INCR\",\n                            \"id\": 1027\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOG_ABS\",\n                            \"id\": 1028\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_LINE\",\n                            \"id\": 1029\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_CIRCLE\",\n                            \"id\": 1030\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_TELEOP_VECTOR\",\n                            \"id\": 1031\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_CLEAR_PROBE_FLAGS\",\n                            \"id\": 1032\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_PROBE\",\n                            \"id\": 1033\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_RIGID_TAP\",\n                            \"id\": 1034\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_POSITION_LIMITS\",\n                            \"id\": 1035\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_BACKLASH\",\n                            \"id\": 1036\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MIN_FERROR\",\n                            \"id\": 1037\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MAX_FERROR\",\n                            \"id\": 1038\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_VEL\",\n                            \"id\": 1039\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_VEL_LIMIT\",\n                            \"id\": 1040\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_VEL_LIMIT\",\n                            \"id\": 1041\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_ACC_LIMIT\",\n                            \"id\": 1042\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_ACC\",\n                            \"id\": 1043\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_TERM_COND\",\n                            \"id\": 1044\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_NUM_AXES\",\n                            \"id\": 1045\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_WORLD_HOME\",\n                            \"id\": 1046\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_HOMING_PARAMS\",\n                            \"id\": 1047\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_DEBUG\",\n                            \"id\": 1048\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_DOUT\",\n                            \"id\": 1049\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_AOUT\",\n                            \"id\": 1050\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_SPINDLESYNC\",\n                            \"id\": 1051\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_ON\",\n                            \"id\": 1052\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_OFF\",\n                            \"id\": 1053\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_INCREASE\",\n                            \"id\": 1054\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_DECREASE\",\n                            \"id\": 1055\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 1056\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 1057\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_MOTOR_OFFSET\",\n                            \"id\": 1058\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_JOINT_COMP\",\n                            \"id\": 1059\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_SET_OFFSET\",\n                            \"id\": 1060\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_OK\",\n                            \"id\": 1061\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_UNKNOWN_COMMAND\",\n                            \"id\": 1062\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_INVALID_COMMAND\",\n                            \"id\": 1063\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_INVALID_PARAMS\",\n                            \"id\": 1064\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_COMMAND_BAD_EXEC\",\n                            \"id\": 1065\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_DISABLED\",\n                            \"id\": 1066\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_FREE\",\n                            \"id\": 1067\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_TELEOP\",\n                            \"id\": 1068\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_COORD\",\n                            \"id\": 1069\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_JOINT_FLAG\",\n                            \"id\": 1070\n                        },\n                        {\n                            \"name\": \"MT_EMCMOT_MOTION_FLAG\",\n                            \"id\": 1071\n                        },\n                        {\n                            \"name\": \"MT_PRU_FIRMWARE\",\n                            \"id\": 2048\n                        },\n                        {\n                            \"name\": \"MT_MESA_5I20_FIRMWARE\",\n                            \"id\": 3000\n                        },\n                        {\n                            \"name\": \"MT_BLOB\",\n                            \"id\": 4000\n                        },\n                        {\n                            \"name\": \"MT_TEST1\",\n                            \"id\": 5001\n                        },\n                        {\n                            \"name\": \"MT_TEST2\",\n                            \"id\": 5002\n                        },\n                        {\n                            \"name\": \"MT_TEST3\",\n                            \"id\": 5003\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_LOWER\",\n                            \"id\": 10000\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_UPPER\",\n                            \"id\": 13000\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_ERROR\",\n                            \"id\": 10011\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_TEXT\",\n                            \"id\": 10012\n                        },\n                        {\n                            \"name\": \"MT_EMC_OPERATOR_DISPLAY\",\n                            \"id\": 10013\n                        },\n                        {\n                            \"name\": \"MT_EMC_NULL\",\n                            \"id\": 10021\n                        },\n                        {\n                            \"name\": \"MT_EMC_SET_DEBUG\",\n                            \"id\": 10022\n                        },\n                        {\n                            \"name\": \"MT_EMC_SYSTEM_CMD\",\n                            \"id\": 10030\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_AXIS\",\n                            \"id\": 10101\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_UNITS\",\n                            \"id\": 10102\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MIN_POSITION_LIMIT\",\n                            \"id\": 10107\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MAX_POSITION_LIMIT\",\n                            \"id\": 10108\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_START_CHANGE\",\n                            \"id\": 1110\n                        },\n                        {\n                            \"name\": \"MT_EMC_EXEC_PLUGIN_CALL\",\n                            \"id\": 1112\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_PLUGIN_CALL\",\n                            \"id\": 1113\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_FERROR\",\n                            \"id\": 10111\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_HOMING_PARAMS\",\n                            \"id\": 10112\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MIN_FERROR\",\n                            \"id\": 10115\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_MAX_VELOCITY\",\n                            \"id\": 10116\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_INIT\",\n                            \"id\": 10118\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_HALT\",\n                            \"id\": 10119\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ABORT\",\n                            \"id\": 10120\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ENABLE\",\n                            \"id\": 10121\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_DISABLE\",\n                            \"id\": 10122\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_HOME\",\n                            \"id\": 10123\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_UNHOME\",\n                            \"id\": 10135\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_JOG\",\n                            \"id\": 10124\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_INCR_JOG\",\n                            \"id\": 10125\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ABS_JOG\",\n                            \"id\": 10126\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_ACTIVATE\",\n                            \"id\": 10127\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_DEACTIVATE\",\n                            \"id\": 10128\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_OVERRIDE_LIMITS\",\n                            \"id\": 10129\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_LOAD_COMP\",\n                            \"id\": 10131\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_SET_BACKLASH\",\n                            \"id\": 10134\n                        },\n                        {\n                            \"name\": \"MT_EMC_AXIS_STAT\",\n                            \"id\": 10199\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_AXES\",\n                            \"id\": 10201\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_UNITS\",\n                            \"id\": 10202\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_CYCLE_TIME\",\n                            \"id\": 10203\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MODE\",\n                            \"id\": 10204\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_VELOCITY\",\n                            \"id\": 10205\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_ACCELERATION\",\n                            \"id\": 10206\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MAX_VELOCITY\",\n                            \"id\": 10207\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MAX_ACCELERATION\",\n                            \"id\": 10208\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SCALE\",\n                            \"id\": 10209\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_MOTION_ID\",\n                            \"id\": 10210\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_INIT\",\n                            \"id\": 10211\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_HALT\",\n                            \"id\": 10212\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_ENABLE\",\n                            \"id\": 10213\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_DISABLE\",\n                            \"id\": 10214\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_ABORT\",\n                            \"id\": 10215\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_PAUSE\",\n                            \"id\": 10216\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_STEP\",\n                            \"id\": 10217\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_RESUME\",\n                            \"id\": 10218\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_DELAY\",\n                            \"id\": 10219\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_LINEAR_MOVE\",\n                            \"id\": 10220\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_CIRCULAR_MOVE\",\n                            \"id\": 10221\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TERM_COND\",\n                            \"id\": 10222\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_OFFSET\",\n                            \"id\": 10223\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_G5X\",\n                            \"id\": 10224\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_HOME\",\n                            \"id\": 10225\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_ROTATION\",\n                            \"id\": 10226\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_G92\",\n                            \"id\": 10227\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_CLEAR_PROBE_TRIPPED_FLAG\",\n                            \"id\": 10228\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_PROBE\",\n                            \"id\": 10229\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TELEOP_ENABLE\",\n                            \"id\": 10230\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_TELEOP_VECTOR\",\n                            \"id\": 10231\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SPINDLESYNC\",\n                            \"id\": 10232\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SPINDLE_SCALE\",\n                            \"id\": 10233\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_FO_ENABLE\",\n                            \"id\": 10234\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_SO_ENABLE\",\n                            \"id\": 10235\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_FH_ENABLE\",\n                            \"id\": 10236\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_RIGID_TAP\",\n                            \"id\": 10237\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_SET_RAPID_SCALE\",\n                            \"id\": 10238\n                        },\n                        {\n                            \"name\": \"MT_EMC_TRAJ_STAT\",\n                            \"id\": 10299\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_INIT\",\n                            \"id\": 10301\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_HALT\",\n                            \"id\": 10302\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_ABORT\",\n                            \"id\": 10303\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_SET_AOUT\",\n                            \"id\": 10304\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_SET_DOUT\",\n                            \"id\": 10305\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_ADAPTIVE\",\n                            \"id\": 10306\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_ORIENT\",\n                            \"id\": 10317\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_WAIT_ORIENT_COMPLETE\",\n                            \"id\": 10318\n                        },\n                        {\n                            \"name\": \"MT_EMC_MOTION_STAT\",\n                            \"id\": 10399\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_INIT\",\n                            \"id\": 10501\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_HALT\",\n                            \"id\": 10502\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_ABORT\",\n                            \"id\": 10503\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_SET_MODE\",\n                            \"id\": 10504\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_SET_STATE\",\n                            \"id\": 10505\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_OPEN\",\n                            \"id\": 10506\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RUN\",\n                            \"id\": 10507\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_READ\",\n                            \"id\": 10508\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_EXECUTE\",\n                            \"id\": 10509\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_PAUSE\",\n                            \"id\": 10510\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_STEP\",\n                            \"id\": 10511\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RESUME\",\n                            \"id\": 10512\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_END\",\n                            \"id\": 10513\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_CLOSE\",\n                            \"id\": 10514\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_INIT\",\n                            \"id\": 10515\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SYNCH\",\n                            \"id\": 10516\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SET_OPTIONAL_STOP\",\n                            \"id\": 10517\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_SET_BLOCK_DELETE\",\n                            \"id\": 10518\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_OPTIONAL_STOP\",\n                            \"id\": 10519\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_RESET\",\n                            \"id\": 10520\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_PLAN_REPLY\",\n                            \"id\": 10530\n                        },\n                        {\n                            \"name\": \"MT_EMC_TASK_STAT\",\n                            \"id\": 10599\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_INIT\",\n                            \"id\": 11101\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_HALT\",\n                            \"id\": 11102\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_ABORT\",\n                            \"id\": 11103\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_PREPARE\",\n                            \"id\": 11104\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_LOAD\",\n                            \"id\": 11105\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_UNLOAD\",\n                            \"id\": 11106\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_LOAD_TOOL_TABLE\",\n                            \"id\": 11107\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_SET_OFFSET\",\n                            \"id\": 11108\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_SET_NUMBER\",\n                            \"id\": 11109\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_UPDATE_TOOL_TABLE\",\n                            \"id\": 11110\n                        },\n                        {\n                            \"name\": \"MT_EMC_TOOL_STAT\",\n                            \"id\": 11199\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_ON\",\n                            \"id\": 11206\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_OFF\",\n                            \"id\": 11207\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_ESTOP_RESET\",\n                            \"id\": 11208\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_INPUT_WAIT\",\n                            \"id\": 11209\n                        },\n                        {\n                            \"name\": \"MT_EMC_AUX_STAT\",\n                            \"id\": 11299\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_ON\",\n                            \"id\": 11304\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_OFF\",\n                            \"id\": 11305\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_INCREASE\",\n                            \"id\": 11309\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_DECREASE\",\n                            \"id\": 11310\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_CONSTANT\",\n                            \"id\": 11311\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_BRAKE_RELEASE\",\n                            \"id\": 11312\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_BRAKE_ENGAGE\",\n                            \"id\": 11313\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_SPEED\",\n                            \"id\": 11316\n                        },\n                        {\n                            \"name\": \"MT_EMC_SPINDLE_STAT\",\n                            \"id\": 11399\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_MIST_ON\",\n                            \"id\": 11404\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_MIST_OFF\",\n                            \"id\": 11405\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_FLOOD_ON\",\n                            \"id\": 11406\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_FLOOD_OFF\",\n                            \"id\": 11407\n                        },\n                        {\n                            \"name\": \"MT_EMC_COOLANT_STAT\",\n                            \"id\": 11499\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_ON\",\n                            \"id\": 11504\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_OFF\",\n                            \"id\": 11505\n                        },\n                        {\n                            \"name\": \"MT_EMC_LUBE_STAT\",\n                            \"id\": 11599\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_INIT\",\n                            \"id\": 11601\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_HALT\",\n                            \"id\": 11602\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_ABORT\",\n                            \"id\": 11603\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_SET_CYCLE_TIME\",\n                            \"id\": 11604\n                        },\n                        {\n                            \"name\": \"MT_EMC_IO_STAT\",\n                            \"id\": 11699\n                        },\n                        {\n                            \"name\": \"MT_EMC_INIT\",\n                            \"id\": 11901\n                        },\n                        {\n                            \"name\": \"MT_EMC_HALT\",\n                            \"id\": 11902\n                        },\n                        {\n                            \"name\": \"MT_EMC_ABORT\",\n                            \"id\": 11903\n                        },\n                        {\n                            \"name\": \"MT_EMC_STAT\",\n                            \"id\": 11999\n                        },\n                        {\n                            \"name\": \"MT_EMCSTAT_FULL_UPDATE\",\n                            \"id\": 12500\n                        },\n                        {\n                            \"name\": \"MT_EMCSTAT_INCREMENTAL_UPDATE\",\n                            \"id\": 12501\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_ERROR\",\n                            \"id\": 12510\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_TEXT\",\n                            \"id\": 12511\n                        },\n                        {\n                            \"name\": \"MT_EMC_NML_DISPLAY\",\n                            \"id\": 12512\n                        },\n                        {\n                            \"name\": \"MT_EMCCMD_EXECUTED\",\n                            \"id\": 12520\n                        },\n                        {\n                            \"name\": \"MT_EMCCMD_COMPLETED\",\n                            \"id\": 12521\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_FULL_UPDATE\",\n                            \"id\": 12600\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_INCREMENTAL_UPDATE\",\n                            \"id\": 12601\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_ERROR\",\n                            \"id\": 12602\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_START\",\n                            \"id\": 12610\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_TERMINATE\",\n                            \"id\": 12611\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_KILL\",\n                            \"id\": 12612\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_WRITE_STDIN\",\n                            \"id\": 12613\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_CALL\",\n                            \"id\": 12614\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_SHUTDOWN\",\n                            \"id\": 12615\n                        },\n                        {\n                            \"name\": \"MT_LAUNCHER_SET\",\n                            \"id\": 12616\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"OriginIndex\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"ORIGIN_UNKNOWN\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"ORIGIN_G54\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"ORIGIN_G55\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"ORIGIN_G56\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"ORIGIN_G57\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"ORIGIN_G58\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_1\",\n                            \"id\": 7\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_2\",\n                            \"id\": 8\n                        },\n                        {\n                            \"name\": \"ORIGIN_G59_3\",\n                            \"id\": 9\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"TermConditionType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"_EMC_TRAJ_TERM_COND_STOP\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_EMC_TRAJ_TERM_COND_BLEND\",\n                            \"id\": 2\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"CanonDirection\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"_CANON_STOPPED\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"_CANON_CLOCKWISE\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"_CANON_COUNTERCLOCKWISE\",\n                            \"id\": 3\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"InputType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"_ANALOG_INPUT\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"_DIGITAL_INPUT\",\n                            \"id\": 1\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"WaitType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"IMMEDIATE\",\n                            \"id\": 0\n                        },\n                        {\n                            \"name\": \"RISE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"FALL\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"BE_HIGH\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"BE_LOW\",\n                            \"id\": 4\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"InterpreterStateType\",\n                    \"syntax\": \"proto2\",\n                    \"values\": [\n                        {\n                            \"name\": \"INTERP_IDLE\",\n                            \"id\": 1\n                        },\n                        {\n                            \"name\": \"INTERP_RUNNING\",\n                            \"id\": 2\n                        },\n                        {\n                            \"name\": \"INTERP_SYNC_WAIT\",\n                            \"id\": 3\n                        },\n                        {\n                            \"name\": \"INTERP_PAUSED\",\n                            \"id\": 4\n                        },\n                        {\n                            \"name\": \"INTERP_QUEUE_WAIT\",\n                            \"id\": 5\n                        },\n                        {\n                            \"name\": \"INTERP_ABORT_WAIT\",\n                            \"id\": 6\n                        },\n                        {\n                            \"name\": \"INTERP_STATE_UNSET\",\n                            \"id\": 99\n                        }\n                    ]\n                }\n            ],\n            \"isNamespace\": true\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"FieldType\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"FT_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"FT_CALLBACK\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"FT_POINTER\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"FT_STATIC\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"FT_IGNORE\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"IntSize\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"IS_DEFAULT\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"IS_8\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"IS_16\",\n                    \"id\": 16\n                },\n                {\n                    \"name\": \"IS_32\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"IS_64\",\n                    \"id\": 64\n                }\n            ]\n        }\n    ],\n    \"isNamespace\": true\n}).build();","module.exports['canon'] = require('./machinetalk/protobuf/canon.js').pb;\nmodule.exports['config'] = require('./machinetalk/protobuf/config.js').pb;\nmodule.exports['emcclass'] = require('./machinetalk/protobuf/emcclass.js').pb;\nmodule.exports['firmware'] = require('./machinetalk/protobuf/firmware.js').pb;\nmodule.exports['jplan'] = require('./machinetalk/protobuf/jplan.js').pb;\nmodule.exports['log'] = require('./machinetalk/protobuf/log.js').pb;\nmodule.exports['message'] = require('./machinetalk/protobuf/message.js').pb;\nmodule.exports['motcmds'] = require('./machinetalk/protobuf/motcmds.js').pb;\nmodule.exports['nanopb'] = require('./machinetalk/protobuf/nanopb.js').pb;\nmodule.exports['object'] = require('./machinetalk/protobuf/object.js').pb;\nmodule.exports['preview'] = require('./machinetalk/protobuf/preview.js').pb;\nmodule.exports['ros'] = require('./machinetalk/protobuf/ros.js').pb;\nmodule.exports['rtapi_message'] = require('./machinetalk/protobuf/rtapi_message.js').pb;\nmodule.exports['rtapicommand'] = require('./machinetalk/protobuf/rtapicommand.js').pb;\nmodule.exports['status'] = require('./machinetalk/protobuf/status.js').pb;\nmodule.exports['task'] = require('./machinetalk/protobuf/task.js').pb;\nmodule.exports['test'] = require('./machinetalk/protobuf/test.js').pb;\nmodule.exports['types'] = require('./machinetalk/protobuf/types.js').pb;\nmodule.exports['value'] = require('./machinetalk/protobuf/value.js').pb;\n","/*\r\n Copyright 2013-2014 Daniel Wirtz <dcode@dcode.io>\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n */\r\n\r\n/**\r\n * @license bytebuffer.js (c) 2015 Daniel Wirtz <dcode@dcode.io>\r\n * Backing buffer: ArrayBuffer, Accessor: Uint8Array\r\n * Released under the Apache License, Version 2.0\r\n * see: https://github.com/dcodeIO/bytebuffer.js for details\r\n */\r\n(function(global, factory) {\r\n\r\n    /* AMD */ if (typeof define === 'function' && define[\"amd\"])\r\n        define([\"long\"], factory);\r\n    /* CommonJS */ else if (typeof require === 'function' && typeof module === \"object\" && module && module[\"exports\"])\r\n        module['exports'] = (function() {\r\n            var Long; try { Long = require(\"long\"); } catch (e) {}\r\n            return factory(Long);\r\n        })();\r\n    /* Global */ else\r\n        (global[\"dcodeIO\"] = global[\"dcodeIO\"] || {})[\"ByteBuffer\"] = factory(global[\"dcodeIO\"][\"Long\"]);\r\n\r\n})(this, function(Long) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Constructs a new ByteBuffer.\r\n     * @class The swiss army knife for binary data in JavaScript.\r\n     * @exports ByteBuffer\r\n     * @constructor\r\n     * @param {number=} capacity Initial capacity. Defaults to {@link ByteBuffer.DEFAULT_CAPACITY}.\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @expose\r\n     */\r\n    var ByteBuffer = function(capacity, littleEndian, noAssert) {\r\n        if (typeof capacity === 'undefined')\r\n            capacity = ByteBuffer.DEFAULT_CAPACITY;\r\n        if (typeof littleEndian === 'undefined')\r\n            littleEndian = ByteBuffer.DEFAULT_ENDIAN;\r\n        if (typeof noAssert === 'undefined')\r\n            noAssert = ByteBuffer.DEFAULT_NOASSERT;\r\n        if (!noAssert) {\r\n            capacity = capacity | 0;\r\n            if (capacity < 0)\r\n                throw RangeError(\"Illegal capacity\");\r\n            littleEndian = !!littleEndian;\r\n            noAssert = !!noAssert;\r\n        }\r\n\r\n        /**\r\n         * Backing ArrayBuffer.\r\n         * @type {!ArrayBuffer}\r\n         * @expose\r\n         */\r\n        this.buffer = capacity === 0 ? EMPTY_BUFFER : new ArrayBuffer(capacity);\r\n\r\n        /**\r\n         * Uint8Array utilized to manipulate the backing buffer. Becomes `null` if the backing buffer has a capacity of `0`.\r\n         * @type {?Uint8Array}\r\n         * @expose\r\n         */\r\n        this.view = capacity === 0 ? null : new Uint8Array(this.buffer);\r\n\r\n        /**\r\n         * Absolute read/write offset.\r\n         * @type {number}\r\n         * @expose\r\n         * @see ByteBuffer#flip\r\n         * @see ByteBuffer#clear\r\n         */\r\n        this.offset = 0;\r\n\r\n        /**\r\n         * Marked offset.\r\n         * @type {number}\r\n         * @expose\r\n         * @see ByteBuffer#mark\r\n         * @see ByteBuffer#reset\r\n         */\r\n        this.markedOffset = -1;\r\n\r\n        /**\r\n         * Absolute limit of the contained data. Set to the backing buffer's capacity upon allocation.\r\n         * @type {number}\r\n         * @expose\r\n         * @see ByteBuffer#flip\r\n         * @see ByteBuffer#clear\r\n         */\r\n        this.limit = capacity;\r\n\r\n        /**\r\n         * Whether to use little endian byte order, defaults to `false` for big endian.\r\n         * @type {boolean}\r\n         * @expose\r\n         */\r\n        this.littleEndian = littleEndian;\r\n\r\n        /**\r\n         * Whether to skip assertions of offsets and values, defaults to `false`.\r\n         * @type {boolean}\r\n         * @expose\r\n         */\r\n        this.noAssert = noAssert;\r\n    };\r\n\r\n    /**\r\n     * ByteBuffer version.\r\n     * @type {string}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.VERSION = \"5.0.1\";\r\n\r\n    /**\r\n     * Little endian constant that can be used instead of its boolean value. Evaluates to `true`.\r\n     * @type {boolean}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.LITTLE_ENDIAN = true;\r\n\r\n    /**\r\n     * Big endian constant that can be used instead of its boolean value. Evaluates to `false`.\r\n     * @type {boolean}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.BIG_ENDIAN = false;\r\n\r\n    /**\r\n     * Default initial capacity of `16`.\r\n     * @type {number}\r\n     * @expose\r\n     */\r\n    ByteBuffer.DEFAULT_CAPACITY = 16;\r\n\r\n    /**\r\n     * Default endianess of `false` for big endian.\r\n     * @type {boolean}\r\n     * @expose\r\n     */\r\n    ByteBuffer.DEFAULT_ENDIAN = ByteBuffer.BIG_ENDIAN;\r\n\r\n    /**\r\n     * Default no assertions flag of `false`.\r\n     * @type {boolean}\r\n     * @expose\r\n     */\r\n    ByteBuffer.DEFAULT_NOASSERT = false;\r\n\r\n    /**\r\n     * A `Long` class for representing a 64-bit two's-complement integer value. May be `null` if Long.js has not been loaded\r\n     *  and int64 support is not available.\r\n     * @type {?Long}\r\n     * @const\r\n     * @see https://github.com/dcodeIO/long.js\r\n     * @expose\r\n     */\r\n    ByteBuffer.Long = Long || null;\r\n\r\n    /**\r\n     * @alias ByteBuffer.prototype\r\n     * @inner\r\n     */\r\n    var ByteBufferPrototype = ByteBuffer.prototype;\r\n\r\n    /**\r\n     * An indicator used to reliably determine if an object is a ByteBuffer or not.\r\n     * @type {boolean}\r\n     * @const\r\n     * @expose\r\n     * @private\r\n     */\r\n    ByteBufferPrototype.__isByteBuffer__;\r\n\r\n    Object.defineProperty(ByteBufferPrototype, \"__isByteBuffer__\", {\r\n        value: true,\r\n        enumerable: false,\r\n        configurable: false\r\n    });\r\n\r\n    // helpers\r\n\r\n    /**\r\n     * @type {!ArrayBuffer}\r\n     * @inner\r\n     */\r\n    var EMPTY_BUFFER = new ArrayBuffer(0);\r\n\r\n    /**\r\n     * String.fromCharCode reference for compile-time renaming.\r\n     * @type {function(...number):string}\r\n     * @inner\r\n     */\r\n    var stringFromCharCode = String.fromCharCode;\r\n\r\n    /**\r\n     * Creates a source function for a string.\r\n     * @param {string} s String to read from\r\n     * @returns {function():number|null} Source function returning the next char code respectively `null` if there are\r\n     *  no more characters left.\r\n     * @throws {TypeError} If the argument is invalid\r\n     * @inner\r\n     */\r\n    function stringSource(s) {\r\n        var i=0; return function() {\r\n            return i < s.length ? s.charCodeAt(i++) : null;\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Creates a destination function for a string.\r\n     * @returns {function(number=):undefined|string} Destination function successively called with the next char code.\r\n     *  Returns the final string when called without arguments.\r\n     * @inner\r\n     */\r\n    function stringDestination() {\r\n        var cs = [], ps = []; return function() {\r\n            if (arguments.length === 0)\r\n                return ps.join('')+stringFromCharCode.apply(String, cs);\r\n            if (cs.length + arguments.length > 1024)\r\n                ps.push(stringFromCharCode.apply(String, cs)),\r\n                    cs.length = 0;\r\n            Array.prototype.push.apply(cs, arguments);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Gets the accessor type.\r\n     * @returns {Function} `Buffer` under node.js, `Uint8Array` respectively `DataView` in the browser (classes)\r\n     * @expose\r\n     */\r\n    ByteBuffer.accessor = function() {\r\n        return Uint8Array;\r\n    };\r\n    /**\r\n     * Allocates a new ByteBuffer backed by a buffer of the specified capacity.\r\n     * @param {number=} capacity Initial capacity. Defaults to {@link ByteBuffer.DEFAULT_CAPACITY}.\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer}\r\n     * @expose\r\n     */\r\n    ByteBuffer.allocate = function(capacity, littleEndian, noAssert) {\r\n        return new ByteBuffer(capacity, littleEndian, noAssert);\r\n    };\r\n\r\n    /**\r\n     * Concatenates multiple ByteBuffers into one.\r\n     * @param {!Array.<!ByteBuffer|!ArrayBuffer|!Uint8Array|string>} buffers Buffers to concatenate\r\n     * @param {(string|boolean)=} encoding String encoding if `buffers` contains a string (\"base64\", \"hex\", \"binary\",\r\n     *  defaults to \"utf8\")\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order for the resulting ByteBuffer. Defaults\r\n     *  to {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values for the resulting ByteBuffer. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} Concatenated ByteBuffer\r\n     * @expose\r\n     */\r\n    ByteBuffer.concat = function(buffers, encoding, littleEndian, noAssert) {\r\n        if (typeof encoding === 'boolean' || typeof encoding !== 'string') {\r\n            noAssert = littleEndian;\r\n            littleEndian = encoding;\r\n            encoding = undefined;\r\n        }\r\n        var capacity = 0;\r\n        for (var i=0, k=buffers.length, length; i<k; ++i) {\r\n            if (!ByteBuffer.isByteBuffer(buffers[i]))\r\n                buffers[i] = ByteBuffer.wrap(buffers[i], encoding);\r\n            length = buffers[i].limit - buffers[i].offset;\r\n            if (length > 0) capacity += length;\r\n        }\r\n        if (capacity === 0)\r\n            return new ByteBuffer(0, littleEndian, noAssert);\r\n        var bb = new ByteBuffer(capacity, littleEndian, noAssert),\r\n            bi;\r\n        i=0; while (i<k) {\r\n            bi = buffers[i++];\r\n            length = bi.limit - bi.offset;\r\n            if (length <= 0) continue;\r\n            bb.view.set(bi.view.subarray(bi.offset, bi.limit), bb.offset);\r\n            bb.offset += length;\r\n        }\r\n        bb.limit = bb.offset;\r\n        bb.offset = 0;\r\n        return bb;\r\n    };\r\n\r\n    /**\r\n     * Tests if the specified type is a ByteBuffer.\r\n     * @param {*} bb ByteBuffer to test\r\n     * @returns {boolean} `true` if it is a ByteBuffer, otherwise `false`\r\n     * @expose\r\n     */\r\n    ByteBuffer.isByteBuffer = function(bb) {\r\n        return (bb && bb[\"__isByteBuffer__\"]) === true;\r\n    };\r\n    /**\r\n     * Gets the backing buffer type.\r\n     * @returns {Function} `Buffer` under node.js, `ArrayBuffer` in the browser (classes)\r\n     * @expose\r\n     */\r\n    ByteBuffer.type = function() {\r\n        return ArrayBuffer;\r\n    };\r\n    /**\r\n     * Wraps a buffer or a string. Sets the allocated ByteBuffer's {@link ByteBuffer#offset} to `0` and its\r\n     *  {@link ByteBuffer#limit} to the length of the wrapped data.\r\n     * @param {!ByteBuffer|!ArrayBuffer|!Uint8Array|string|!Array.<number>} buffer Anything that can be wrapped\r\n     * @param {(string|boolean)=} encoding String encoding if `buffer` is a string (\"base64\", \"hex\", \"binary\", defaults to\r\n     *  \"utf8\")\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} A ByteBuffer wrapping `buffer`\r\n     * @expose\r\n     */\r\n    ByteBuffer.wrap = function(buffer, encoding, littleEndian, noAssert) {\r\n        if (typeof encoding !== 'string') {\r\n            noAssert = littleEndian;\r\n            littleEndian = encoding;\r\n            encoding = undefined;\r\n        }\r\n        if (typeof buffer === 'string') {\r\n            if (typeof encoding === 'undefined')\r\n                encoding = \"utf8\";\r\n            switch (encoding) {\r\n                case \"base64\":\r\n                    return ByteBuffer.fromBase64(buffer, littleEndian);\r\n                case \"hex\":\r\n                    return ByteBuffer.fromHex(buffer, littleEndian);\r\n                case \"binary\":\r\n                    return ByteBuffer.fromBinary(buffer, littleEndian);\r\n                case \"utf8\":\r\n                    return ByteBuffer.fromUTF8(buffer, littleEndian);\r\n                case \"debug\":\r\n                    return ByteBuffer.fromDebug(buffer, littleEndian);\r\n                default:\r\n                    throw Error(\"Unsupported encoding: \"+encoding);\r\n            }\r\n        }\r\n        if (buffer === null || typeof buffer !== 'object')\r\n            throw TypeError(\"Illegal buffer\");\r\n        var bb;\r\n        if (ByteBuffer.isByteBuffer(buffer)) {\r\n            bb = ByteBufferPrototype.clone.call(buffer);\r\n            bb.markedOffset = -1;\r\n            return bb;\r\n        }\r\n        if (buffer instanceof Uint8Array) { // Extract ArrayBuffer from Uint8Array\r\n            bb = new ByteBuffer(0, littleEndian, noAssert);\r\n            if (buffer.length > 0) { // Avoid references to more than one EMPTY_BUFFER\r\n                bb.buffer = buffer.buffer;\r\n                bb.offset = buffer.byteOffset;\r\n                bb.limit = buffer.byteOffset + buffer.byteLength;\r\n                bb.view = new Uint8Array(buffer.buffer);\r\n            }\r\n        } else if (buffer instanceof ArrayBuffer) { // Reuse ArrayBuffer\r\n            bb = new ByteBuffer(0, littleEndian, noAssert);\r\n            if (buffer.byteLength > 0) {\r\n                bb.buffer = buffer;\r\n                bb.offset = 0;\r\n                bb.limit = buffer.byteLength;\r\n                bb.view = buffer.byteLength > 0 ? new Uint8Array(buffer) : null;\r\n            }\r\n        } else if (Object.prototype.toString.call(buffer) === \"[object Array]\") { // Create from octets\r\n            bb = new ByteBuffer(buffer.length, littleEndian, noAssert);\r\n            bb.limit = buffer.length;\r\n            for (var i=0; i<buffer.length; ++i)\r\n                bb.view[i] = buffer[i];\r\n        } else\r\n            throw TypeError(\"Illegal buffer\"); // Otherwise fail\r\n        return bb;\r\n    };\r\n\r\n    /**\r\n     * Writes the array as a bitset.\r\n     * @param {Array<boolean>} value Array of booleans to write\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `length` if omitted.\r\n     * @returns {!ByteBuffer}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeBitSet = function(value, offset) {\r\n      var relative = typeof offset === 'undefined';\n      if (relative) offset = this.offset;\n      if (!this.noAssert) {\r\n        if (!(value instanceof Array))\r\n          throw TypeError(\"Illegal BitSet: Not an array\");\r\n        if (typeof offset !== 'number' || offset % 1 !== 0)\n            throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n        offset >>>= 0;\n        if (offset < 0 || offset + 0 > this.buffer.byteLength)\n            throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n      }\r\n\r\n      var start = offset,\r\n          bits = value.length,\r\n          bytes = (bits >> 3),\r\n          bit = 0,\r\n          k;\r\n\r\n      offset += this.writeVarint32(bits,offset);\r\n\r\n      while(bytes--) {\r\n        k = (!!value[bit++] & 1) |\r\n            ((!!value[bit++] & 1) << 1) |\r\n            ((!!value[bit++] & 1) << 2) |\r\n            ((!!value[bit++] & 1) << 3) |\r\n            ((!!value[bit++] & 1) << 4) |\r\n            ((!!value[bit++] & 1) << 5) |\r\n            ((!!value[bit++] & 1) << 6) |\r\n            ((!!value[bit++] & 1) << 7);\r\n        this.writeByte(k,offset++);\r\n      }\r\n\r\n      if(bit < bits) {\r\n        var m = 0; k = 0;\r\n        while(bit < bits) k = k | ((!!value[bit++] & 1) << (m++));\r\n        this.writeByte(k,offset++);\r\n      }\r\n\r\n      if (relative) {\r\n        this.offset = offset;\r\n        return this;\r\n      }\r\n      return offset - start;\r\n    }\r\n\r\n    /**\r\n     * Reads a BitSet as an array of booleans.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `length` if omitted.\r\n     * @returns {Array<boolean>\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readBitSet = function(offset) {\r\n      var relative = typeof offset === 'undefined';\n      if (relative) offset = this.offset;\n\r\n      var ret = this.readVarint32(offset),\r\n          bits = ret.value,\r\n          bytes = (bits >> 3),\r\n          bit = 0,\r\n          value = [],\r\n          k;\r\n\r\n      offset += ret.length;\r\n\r\n      while(bytes--) {\r\n        k = this.readByte(offset++);\r\n        value[bit++] = !!(k & 0x01);\r\n        value[bit++] = !!(k & 0x02);\r\n        value[bit++] = !!(k & 0x04);\r\n        value[bit++] = !!(k & 0x08);\r\n        value[bit++] = !!(k & 0x10);\r\n        value[bit++] = !!(k & 0x20);\r\n        value[bit++] = !!(k & 0x40);\r\n        value[bit++] = !!(k & 0x80);\r\n      }\r\n\r\n      if(bit < bits) {\r\n        var m = 0;\r\n        k = this.readByte(offset++);\r\n        while(bit < bits) value[bit++] = !!((k >> (m++)) & 1);\r\n      }\r\n\r\n      if (relative) {\r\n        this.offset = offset;\r\n      }\r\n      return value;\r\n    }\r\n    /**\r\n     * Reads the specified number of bytes.\r\n     * @param {number} length Number of bytes to read\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `length` if omitted.\r\n     * @returns {!ByteBuffer}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readBytes = function(length, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + length > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+length+\") <= \"+this.buffer.byteLength);\n        }\r\n        var slice = this.slice(offset, offset + length);\r\n        if (relative) this.offset += length;\n        return slice;\r\n    };\r\n\r\n    /**\r\n     * Writes a payload of bytes. This is an alias of {@link ByteBuffer#append}.\r\n     * @function\r\n     * @param {!ByteBuffer|!ArrayBuffer|!Uint8Array|string} source Data to write. If `source` is a ByteBuffer, its offsets\r\n     *  will be modified according to the performed read operation.\r\n     * @param {(string|number)=} encoding Encoding if `data` is a string (\"base64\", \"hex\", \"binary\", defaults to \"utf8\")\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeBytes = ByteBufferPrototype.append;\r\n\r\n    // types/ints/int8\r\n\r\n    /**\r\n     * Writes an 8bit signed integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeInt8 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        offset += 1;\n        var capacity0 = this.buffer.byteLength;\n        if (offset > capacity0)\n            this.resize((capacity0 *= 2) > offset ? capacity0 : offset);\n        offset -= 1;\n        this.view[offset] = value;\r\n        if (relative) this.offset += 1;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes an 8bit signed integer. This is an alias of {@link ByteBuffer#writeInt8}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeByte = ByteBufferPrototype.writeInt8;\r\n\r\n    /**\r\n     * Reads an 8bit signed integer.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readInt8 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.byteLength);\n        }\r\n        var value = this.view[offset];\r\n        if ((value & 0x80) === 0x80) value = -(0xFF - value + 1); // Cast to signed\r\n        if (relative) this.offset += 1;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads an 8bit signed integer. This is an alias of {@link ByteBuffer#readInt8}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readByte = ByteBufferPrototype.readInt8;\r\n\r\n    /**\r\n     * Writes an 8bit unsigned integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUint8 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value >>>= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        offset += 1;\n        var capacity1 = this.buffer.byteLength;\n        if (offset > capacity1)\n            this.resize((capacity1 *= 2) > offset ? capacity1 : offset);\n        offset -= 1;\n        this.view[offset] = value;\r\n        if (relative) this.offset += 1;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes an 8bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint8}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUInt8 = ByteBufferPrototype.writeUint8;\r\n\r\n    /**\r\n     * Reads an 8bit unsigned integer.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUint8 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.byteLength);\n        }\r\n        var value = this.view[offset];\r\n        if (relative) this.offset += 1;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads an 8bit unsigned integer. This is an alias of {@link ByteBuffer#readUint8}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUInt8 = ByteBufferPrototype.readUint8;\r\n\r\n    // types/ints/int16\r\n\r\n    /**\r\n     * Writes a 16bit signed integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @throws {TypeError} If `offset` or `value` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeInt16 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        offset += 2;\n        var capacity2 = this.buffer.byteLength;\n        if (offset > capacity2)\n            this.resize((capacity2 *= 2) > offset ? capacity2 : offset);\n        offset -= 2;\n        if (this.littleEndian) {\r\n            this.view[offset+1] = (value & 0xFF00) >>> 8;\r\n            this.view[offset  ] =  value & 0x00FF;\r\n        } else {\r\n            this.view[offset]   = (value & 0xFF00) >>> 8;\r\n            this.view[offset+1] =  value & 0x00FF;\r\n        }\r\n        if (relative) this.offset += 2;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 16bit signed integer. This is an alias of {@link ByteBuffer#writeInt16}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @throws {TypeError} If `offset` or `value` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeShort = ByteBufferPrototype.writeInt16;\r\n\r\n    /**\r\n     * Reads a 16bit signed integer.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @returns {number} Value read\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readInt16 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 2 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+2+\") <= \"+this.buffer.byteLength);\n        }\r\n        var value = 0;\r\n        if (this.littleEndian) {\r\n            value  = this.view[offset  ];\r\n            value |= this.view[offset+1] << 8;\r\n        } else {\r\n            value  = this.view[offset  ] << 8;\r\n            value |= this.view[offset+1];\r\n        }\r\n        if ((value & 0x8000) === 0x8000) value = -(0xFFFF - value + 1); // Cast to signed\r\n        if (relative) this.offset += 2;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 16bit signed integer. This is an alias of {@link ByteBuffer#readInt16}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @returns {number} Value read\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readShort = ByteBufferPrototype.readInt16;\r\n\r\n    /**\r\n     * Writes a 16bit unsigned integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @throws {TypeError} If `offset` or `value` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUint16 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value >>>= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        offset += 2;\n        var capacity3 = this.buffer.byteLength;\n        if (offset > capacity3)\n            this.resize((capacity3 *= 2) > offset ? capacity3 : offset);\n        offset -= 2;\n        if (this.littleEndian) {\r\n            this.view[offset+1] = (value & 0xFF00) >>> 8;\r\n            this.view[offset  ] =  value & 0x00FF;\r\n        } else {\r\n            this.view[offset]   = (value & 0xFF00) >>> 8;\r\n            this.view[offset+1] =  value & 0x00FF;\r\n        }\r\n        if (relative) this.offset += 2;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 16bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint16}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @throws {TypeError} If `offset` or `value` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUInt16 = ByteBufferPrototype.writeUint16;\r\n\r\n    /**\r\n     * Reads a 16bit unsigned integer.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @returns {number} Value read\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUint16 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 2 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+2+\") <= \"+this.buffer.byteLength);\n        }\r\n        var value = 0;\r\n        if (this.littleEndian) {\r\n            value  = this.view[offset  ];\r\n            value |= this.view[offset+1] << 8;\r\n        } else {\r\n            value  = this.view[offset  ] << 8;\r\n            value |= this.view[offset+1];\r\n        }\r\n        if (relative) this.offset += 2;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 16bit unsigned integer. This is an alias of {@link ByteBuffer#readUint16}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @returns {number} Value read\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUInt16 = ByteBufferPrototype.readUint16;\r\n\r\n    // types/ints/int32\r\n\r\n    /**\r\n     * Writes a 32bit signed integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeInt32 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        offset += 4;\n        var capacity4 = this.buffer.byteLength;\n        if (offset > capacity4)\n            this.resize((capacity4 *= 2) > offset ? capacity4 : offset);\n        offset -= 4;\n        if (this.littleEndian) {\n            this.view[offset+3] = (value >>> 24) & 0xFF;\n            this.view[offset+2] = (value >>> 16) & 0xFF;\n            this.view[offset+1] = (value >>>  8) & 0xFF;\n            this.view[offset  ] =  value         & 0xFF;\n        } else {\n            this.view[offset  ] = (value >>> 24) & 0xFF;\n            this.view[offset+1] = (value >>> 16) & 0xFF;\n            this.view[offset+2] = (value >>>  8) & 0xFF;\n            this.view[offset+3] =  value         & 0xFF;\n        }\n        if (relative) this.offset += 4;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 32bit signed integer. This is an alias of {@link ByteBuffer#writeInt32}.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeInt = ByteBufferPrototype.writeInt32;\r\n\r\n    /**\r\n     * Reads a 32bit signed integer.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readInt32 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 4 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.byteLength);\n        }\r\n        var value = 0;\r\n        if (this.littleEndian) {\n            value  = this.view[offset+2] << 16;\n            value |= this.view[offset+1] <<  8;\n            value |= this.view[offset  ];\n            value += this.view[offset+3] << 24 >>> 0;\n        } else {\n            value  = this.view[offset+1] << 16;\n            value |= this.view[offset+2] <<  8;\n            value |= this.view[offset+3];\n            value += this.view[offset  ] << 24 >>> 0;\n        }\n        value |= 0; // Cast to signed\r\n        if (relative) this.offset += 4;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 32bit signed integer. This is an alias of {@link ByteBuffer#readInt32}.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readInt = ByteBufferPrototype.readInt32;\r\n\r\n    /**\r\n     * Writes a 32bit unsigned integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUint32 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value >>>= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        offset += 4;\n        var capacity5 = this.buffer.byteLength;\n        if (offset > capacity5)\n            this.resize((capacity5 *= 2) > offset ? capacity5 : offset);\n        offset -= 4;\n        if (this.littleEndian) {\n            this.view[offset+3] = (value >>> 24) & 0xFF;\n            this.view[offset+2] = (value >>> 16) & 0xFF;\n            this.view[offset+1] = (value >>>  8) & 0xFF;\n            this.view[offset  ] =  value         & 0xFF;\n        } else {\n            this.view[offset  ] = (value >>> 24) & 0xFF;\n            this.view[offset+1] = (value >>> 16) & 0xFF;\n            this.view[offset+2] = (value >>>  8) & 0xFF;\n            this.view[offset+3] =  value         & 0xFF;\n        }\n        if (relative) this.offset += 4;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 32bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint32}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUInt32 = ByteBufferPrototype.writeUint32;\r\n\r\n    /**\r\n     * Reads a 32bit unsigned integer.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUint32 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 4 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.byteLength);\n        }\r\n        var value = 0;\r\n        if (this.littleEndian) {\n            value  = this.view[offset+2] << 16;\n            value |= this.view[offset+1] <<  8;\n            value |= this.view[offset  ];\n            value += this.view[offset+3] << 24 >>> 0;\n        } else {\n            value  = this.view[offset+1] << 16;\n            value |= this.view[offset+2] <<  8;\n            value |= this.view[offset+3];\n            value += this.view[offset  ] << 24 >>> 0;\n        }\n        if (relative) this.offset += 4;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 32bit unsigned integer. This is an alias of {@link ByteBuffer#readUint32}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUInt32 = ByteBufferPrototype.readUint32;\r\n\r\n    // types/ints/int64\r\n\r\n    if (Long) {\r\n\r\n        /**\r\n         * Writes a 64bit signed integer.\r\n         * @param {number|!Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!ByteBuffer} this\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeInt64 = function(value, offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof value === 'number')\n                    value = Long.fromNumber(value);\n                else if (typeof value === 'string')\n                    value = Long.fromString(value);\n                else if (!(value && value instanceof Long))\n                    throw TypeError(\"Illegal value: \"+value+\" (not an integer or Long)\");\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n            }\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value);\n            else if (typeof value === 'string')\n                value = Long.fromString(value);\n            offset += 8;\n            var capacity6 = this.buffer.byteLength;\n            if (offset > capacity6)\n                this.resize((capacity6 *= 2) > offset ? capacity6 : offset);\n            offset -= 8;\n            var lo = value.low,\r\n                hi = value.high;\r\n            if (this.littleEndian) {\r\n                this.view[offset+3] = (lo >>> 24) & 0xFF;\n                this.view[offset+2] = (lo >>> 16) & 0xFF;\n                this.view[offset+1] = (lo >>>  8) & 0xFF;\n                this.view[offset  ] =  lo         & 0xFF;\n                offset += 4;\r\n                this.view[offset+3] = (hi >>> 24) & 0xFF;\n                this.view[offset+2] = (hi >>> 16) & 0xFF;\n                this.view[offset+1] = (hi >>>  8) & 0xFF;\n                this.view[offset  ] =  hi         & 0xFF;\n            } else {\r\n                this.view[offset  ] = (hi >>> 24) & 0xFF;\n                this.view[offset+1] = (hi >>> 16) & 0xFF;\n                this.view[offset+2] = (hi >>>  8) & 0xFF;\n                this.view[offset+3] =  hi         & 0xFF;\n                offset += 4;\r\n                this.view[offset  ] = (lo >>> 24) & 0xFF;\n                this.view[offset+1] = (lo >>> 16) & 0xFF;\n                this.view[offset+2] = (lo >>>  8) & 0xFF;\n                this.view[offset+3] =  lo         & 0xFF;\n            }\r\n            if (relative) this.offset += 8;\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Writes a 64bit signed integer. This is an alias of {@link ByteBuffer#writeInt64}.\r\n         * @param {number|!Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!ByteBuffer} this\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeLong = ByteBufferPrototype.writeInt64;\r\n\r\n        /**\r\n         * Reads a 64bit signed integer.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!Long}\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readInt64 = function(offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 8 > this.buffer.byteLength)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+8+\") <= \"+this.buffer.byteLength);\n            }\r\n            var lo = 0,\r\n                hi = 0;\r\n            if (this.littleEndian) {\r\n                lo  = this.view[offset+2] << 16;\n                lo |= this.view[offset+1] <<  8;\n                lo |= this.view[offset  ];\n                lo += this.view[offset+3] << 24 >>> 0;\n                offset += 4;\r\n                hi  = this.view[offset+2] << 16;\n                hi |= this.view[offset+1] <<  8;\n                hi |= this.view[offset  ];\n                hi += this.view[offset+3] << 24 >>> 0;\n            } else {\r\n                hi  = this.view[offset+1] << 16;\n                hi |= this.view[offset+2] <<  8;\n                hi |= this.view[offset+3];\n                hi += this.view[offset  ] << 24 >>> 0;\n                offset += 4;\r\n                lo  = this.view[offset+1] << 16;\n                lo |= this.view[offset+2] <<  8;\n                lo |= this.view[offset+3];\n                lo += this.view[offset  ] << 24 >>> 0;\n            }\r\n            var value = new Long(lo, hi, false);\r\n            if (relative) this.offset += 8;\n            return value;\r\n        };\r\n\r\n        /**\r\n         * Reads a 64bit signed integer. This is an alias of {@link ByteBuffer#readInt64}.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!Long}\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readLong = ByteBufferPrototype.readInt64;\r\n\r\n        /**\r\n         * Writes a 64bit unsigned integer.\r\n         * @param {number|!Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!ByteBuffer} this\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeUint64 = function(value, offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof value === 'number')\n                    value = Long.fromNumber(value);\n                else if (typeof value === 'string')\n                    value = Long.fromString(value);\n                else if (!(value && value instanceof Long))\n                    throw TypeError(\"Illegal value: \"+value+\" (not an integer or Long)\");\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n            }\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value);\n            else if (typeof value === 'string')\n                value = Long.fromString(value);\n            offset += 8;\n            var capacity7 = this.buffer.byteLength;\n            if (offset > capacity7)\n                this.resize((capacity7 *= 2) > offset ? capacity7 : offset);\n            offset -= 8;\n            var lo = value.low,\r\n                hi = value.high;\r\n            if (this.littleEndian) {\r\n                this.view[offset+3] = (lo >>> 24) & 0xFF;\n                this.view[offset+2] = (lo >>> 16) & 0xFF;\n                this.view[offset+1] = (lo >>>  8) & 0xFF;\n                this.view[offset  ] =  lo         & 0xFF;\n                offset += 4;\r\n                this.view[offset+3] = (hi >>> 24) & 0xFF;\n                this.view[offset+2] = (hi >>> 16) & 0xFF;\n                this.view[offset+1] = (hi >>>  8) & 0xFF;\n                this.view[offset  ] =  hi         & 0xFF;\n            } else {\r\n                this.view[offset  ] = (hi >>> 24) & 0xFF;\n                this.view[offset+1] = (hi >>> 16) & 0xFF;\n                this.view[offset+2] = (hi >>>  8) & 0xFF;\n                this.view[offset+3] =  hi         & 0xFF;\n                offset += 4;\r\n                this.view[offset  ] = (lo >>> 24) & 0xFF;\n                this.view[offset+1] = (lo >>> 16) & 0xFF;\n                this.view[offset+2] = (lo >>>  8) & 0xFF;\n                this.view[offset+3] =  lo         & 0xFF;\n            }\r\n            if (relative) this.offset += 8;\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Writes a 64bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint64}.\r\n         * @function\r\n         * @param {number|!Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!ByteBuffer} this\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeUInt64 = ByteBufferPrototype.writeUint64;\r\n\r\n        /**\r\n         * Reads a 64bit unsigned integer.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!Long}\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readUint64 = function(offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 8 > this.buffer.byteLength)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+8+\") <= \"+this.buffer.byteLength);\n            }\r\n            var lo = 0,\r\n                hi = 0;\r\n            if (this.littleEndian) {\r\n                lo  = this.view[offset+2] << 16;\n                lo |= this.view[offset+1] <<  8;\n                lo |= this.view[offset  ];\n                lo += this.view[offset+3] << 24 >>> 0;\n                offset += 4;\r\n                hi  = this.view[offset+2] << 16;\n                hi |= this.view[offset+1] <<  8;\n                hi |= this.view[offset  ];\n                hi += this.view[offset+3] << 24 >>> 0;\n            } else {\r\n                hi  = this.view[offset+1] << 16;\n                hi |= this.view[offset+2] <<  8;\n                hi |= this.view[offset+3];\n                hi += this.view[offset  ] << 24 >>> 0;\n                offset += 4;\r\n                lo  = this.view[offset+1] << 16;\n                lo |= this.view[offset+2] <<  8;\n                lo |= this.view[offset+3];\n                lo += this.view[offset  ] << 24 >>> 0;\n            }\r\n            var value = new Long(lo, hi, true);\r\n            if (relative) this.offset += 8;\n            return value;\r\n        };\r\n\r\n        /**\r\n         * Reads a 64bit unsigned integer. This is an alias of {@link ByteBuffer#readUint64}.\r\n         * @function\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!Long}\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readUInt64 = ByteBufferPrototype.readUint64;\r\n\r\n    } // Long\r\n\r\n\r\n    // types/floats/float32\r\n\r\n    /*\r\n     ieee754 - https://github.com/feross/ieee754\r\n\r\n     The MIT License (MIT)\r\n\r\n     Copyright (c) Feross Aboukhadijeh\r\n\r\n     Permission is hereby granted, free of charge, to any person obtaining a copy\r\n     of this software and associated documentation files (the \"Software\"), to deal\r\n     in the Software without restriction, including without limitation the rights\r\n     to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n     copies of the Software, and to permit persons to whom the Software is\r\n     furnished to do so, subject to the following conditions:\r\n\r\n     The above copyright notice and this permission notice shall be included in\r\n     all copies or substantial portions of the Software.\r\n\r\n     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n     IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n     AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n     OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n     THE SOFTWARE.\r\n    */\r\n\r\n    /**\r\n     * Reads an IEEE754 float from a byte array.\r\n     * @param {!Array} buffer\r\n     * @param {number} offset\r\n     * @param {boolean} isLE\r\n     * @param {number} mLen\r\n     * @param {number} nBytes\r\n     * @returns {number}\r\n     * @inner\r\n     */\r\n    function ieee754_read(buffer, offset, isLE, mLen, nBytes) {\r\n        var e, m,\r\n            eLen = nBytes * 8 - mLen - 1,\r\n            eMax = (1 << eLen) - 1,\r\n            eBias = eMax >> 1,\r\n            nBits = -7,\r\n            i = isLE ? (nBytes - 1) : 0,\r\n            d = isLE ? -1 : 1,\r\n            s = buffer[offset + i];\r\n\r\n        i += d;\r\n\r\n        e = s & ((1 << (-nBits)) - 1);\r\n        s >>= (-nBits);\r\n        nBits += eLen;\r\n        for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\r\n\r\n        m = e & ((1 << (-nBits)) - 1);\r\n        e >>= (-nBits);\r\n        nBits += mLen;\r\n        for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\r\n\r\n        if (e === 0) {\r\n            e = 1 - eBias;\r\n        } else if (e === eMax) {\r\n            return m ? NaN : ((s ? -1 : 1) * Infinity);\r\n        } else {\r\n            m = m + Math.pow(2, mLen);\r\n            e = e - eBias;\r\n        }\r\n        return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\r\n    }\r\n\r\n    /**\r\n     * Writes an IEEE754 float to a byte array.\r\n     * @param {!Array} buffer\r\n     * @param {number} value\r\n     * @param {number} offset\r\n     * @param {boolean} isLE\r\n     * @param {number} mLen\r\n     * @param {number} nBytes\r\n     * @inner\r\n     */\r\n    function ieee754_write(buffer, value, offset, isLE, mLen, nBytes) {\r\n        var e, m, c,\r\n            eLen = nBytes * 8 - mLen - 1,\r\n            eMax = (1 << eLen) - 1,\r\n            eBias = eMax >> 1,\r\n            rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0),\r\n            i = isLE ? 0 : (nBytes - 1),\r\n            d = isLE ? 1 : -1,\r\n            s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\r\n\r\n        value = Math.abs(value);\r\n\r\n        if (isNaN(value) || value === Infinity) {\r\n            m = isNaN(value) ? 1 : 0;\r\n            e = eMax;\r\n        } else {\r\n            e = Math.floor(Math.log(value) / Math.LN2);\r\n            if (value * (c = Math.pow(2, -e)) < 1) {\r\n                e--;\r\n                c *= 2;\r\n            }\r\n            if (e + eBias >= 1) {\r\n                value += rt / c;\r\n            } else {\r\n                value += rt * Math.pow(2, 1 - eBias);\r\n            }\r\n            if (value * c >= 2) {\r\n                e++;\r\n                c /= 2;\r\n            }\r\n\r\n            if (e + eBias >= eMax) {\r\n                m = 0;\r\n                e = eMax;\r\n            } else if (e + eBias >= 1) {\r\n                m = (value * c - 1) * Math.pow(2, mLen);\r\n                e = e + eBias;\r\n            } else {\r\n                m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\r\n                e = 0;\r\n            }\r\n        }\r\n\r\n        for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\r\n\r\n        e = (e << mLen) | m;\r\n        eLen += mLen;\r\n        for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\r\n\r\n        buffer[offset + i - d] |= s * 128;\r\n    }\r\n\r\n    /**\r\n     * Writes a 32bit float.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeFloat32 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number')\r\n                throw TypeError(\"Illegal value: \"+value+\" (not a number)\");\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        offset += 4;\n        var capacity8 = this.buffer.byteLength;\n        if (offset > capacity8)\n            this.resize((capacity8 *= 2) > offset ? capacity8 : offset);\n        offset -= 4;\n        ieee754_write(this.view, value, offset, this.littleEndian, 23, 4);\r\n        if (relative) this.offset += 4;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 32bit float. This is an alias of {@link ByteBuffer#writeFloat32}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeFloat = ByteBufferPrototype.writeFloat32;\r\n\r\n    /**\r\n     * Reads a 32bit float.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readFloat32 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 4 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.byteLength);\n        }\r\n        var value = ieee754_read(this.view, offset, this.littleEndian, 23, 4);\r\n        if (relative) this.offset += 4;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 32bit float. This is an alias of {@link ByteBuffer#readFloat32}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readFloat = ByteBufferPrototype.readFloat32;\r\n\r\n    // types/floats/float64\r\n\r\n    /**\r\n     * Writes a 64bit float.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeFloat64 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number')\r\n                throw TypeError(\"Illegal value: \"+value+\" (not a number)\");\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        offset += 8;\n        var capacity9 = this.buffer.byteLength;\n        if (offset > capacity9)\n            this.resize((capacity9 *= 2) > offset ? capacity9 : offset);\n        offset -= 8;\n        ieee754_write(this.view, value, offset, this.littleEndian, 52, 8);\r\n        if (relative) this.offset += 8;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 64bit float. This is an alias of {@link ByteBuffer#writeFloat64}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeDouble = ByteBufferPrototype.writeFloat64;\r\n\r\n    /**\r\n     * Reads a 64bit float.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readFloat64 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 8 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+8+\") <= \"+this.buffer.byteLength);\n        }\r\n        var value = ieee754_read(this.view, offset, this.littleEndian, 52, 8);\r\n        if (relative) this.offset += 8;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 64bit float. This is an alias of {@link ByteBuffer#readFloat64}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readDouble = ByteBufferPrototype.readFloat64;\r\n\r\n\r\n    // types/varints/varint32\r\n\r\n    /**\r\n     * Maximum number of bytes required to store a 32bit base 128 variable-length integer.\r\n     * @type {number}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.MAX_VARINT32_BYTES = 5;\r\n\r\n    /**\r\n     * Calculates the actual number of bytes required to store a 32bit base 128 variable-length integer.\r\n     * @param {number} value Value to encode\r\n     * @returns {number} Number of bytes required. Capped to {@link ByteBuffer.MAX_VARINT32_BYTES}\r\n     * @expose\r\n     */\r\n    ByteBuffer.calculateVarint32 = function(value) {\r\n        // ref: src/google/protobuf/io/coded_stream.cc\r\n        value = value >>> 0;\r\n             if (value < 1 << 7 ) return 1;\r\n        else if (value < 1 << 14) return 2;\r\n        else if (value < 1 << 21) return 3;\r\n        else if (value < 1 << 28) return 4;\r\n        else                      return 5;\r\n    };\r\n\r\n    /**\r\n     * Zigzag encodes a signed 32bit integer so that it can be effectively used with varint encoding.\r\n     * @param {number} n Signed 32bit integer\r\n     * @returns {number} Unsigned zigzag encoded 32bit integer\r\n     * @expose\r\n     */\r\n    ByteBuffer.zigZagEncode32 = function(n) {\r\n        return (((n |= 0) << 1) ^ (n >> 31)) >>> 0; // ref: src/google/protobuf/wire_format_lite.h\r\n    };\r\n\r\n    /**\r\n     * Decodes a zigzag encoded signed 32bit integer.\r\n     * @param {number} n Unsigned zigzag encoded 32bit integer\r\n     * @returns {number} Signed 32bit integer\r\n     * @expose\r\n     */\r\n    ByteBuffer.zigZagDecode32 = function(n) {\r\n        return ((n >>> 1) ^ -(n & 1)) | 0; // // ref: src/google/protobuf/wire_format_lite.h\r\n    };\r\n\r\n    /**\r\n     * Writes a 32bit base 128 variable-length integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer|number} this if `offset` is omitted, else the actual number of bytes written\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeVarint32 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        var size = ByteBuffer.calculateVarint32(value),\r\n            b;\r\n        offset += size;\n        var capacity10 = this.buffer.byteLength;\n        if (offset > capacity10)\n            this.resize((capacity10 *= 2) > offset ? capacity10 : offset);\n        offset -= size;\n        value >>>= 0;\r\n        while (value >= 0x80) {\r\n            b = (value & 0x7f) | 0x80;\r\n            this.view[offset++] = b;\r\n            value >>>= 7;\r\n        }\r\n        this.view[offset++] = value;\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return this;\r\n        }\r\n        return size;\r\n    };\r\n\r\n    /**\r\n     * Writes a zig-zag encoded (signed) 32bit base 128 variable-length integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer|number} this if `offset` is omitted, else the actual number of bytes written\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeVarint32ZigZag = function(value, offset) {\r\n        return this.writeVarint32(ByteBuffer.zigZagEncode32(value), offset);\r\n    };\r\n\r\n    /**\r\n     * Reads a 32bit base 128 variable-length integer.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {number|!{value: number, length: number}} The value read if offset is omitted, else the value read\r\n     *  and the actual number of bytes read.\r\n     * @throws {Error} If it's not a valid varint. Has a property `truncated = true` if there is not enough data available\r\n     *  to fully decode the varint.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readVarint32 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.byteLength);\n        }\r\n        var c = 0,\r\n            value = 0 >>> 0,\r\n            b;\r\n        do {\r\n            if (!this.noAssert && offset > this.limit) {\r\n                var err = Error(\"Truncated\");\r\n                err['truncated'] = true;\r\n                throw err;\r\n            }\r\n            b = this.view[offset++];\r\n            if (c < 5)\r\n                value |= (b & 0x7f) << (7*c);\r\n            ++c;\r\n        } while ((b & 0x80) !== 0);\r\n        value |= 0;\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return value;\r\n        }\r\n        return {\r\n            \"value\": value,\r\n            \"length\": c\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Reads a zig-zag encoded (signed) 32bit base 128 variable-length integer.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {number|!{value: number, length: number}} The value read if offset is omitted, else the value read\r\n     *  and the actual number of bytes read.\r\n     * @throws {Error} If it's not a valid varint\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readVarint32ZigZag = function(offset) {\r\n        var val = this.readVarint32(offset);\r\n        if (typeof val === 'object')\r\n            val[\"value\"] = ByteBuffer.zigZagDecode32(val[\"value\"]);\r\n        else\r\n            val = ByteBuffer.zigZagDecode32(val);\r\n        return val;\r\n    };\r\n\r\n    // types/varints/varint64\r\n\r\n    if (Long) {\r\n\r\n        /**\r\n         * Maximum number of bytes required to store a 64bit base 128 variable-length integer.\r\n         * @type {number}\r\n         * @const\r\n         * @expose\r\n         */\r\n        ByteBuffer.MAX_VARINT64_BYTES = 10;\r\n\r\n        /**\r\n         * Calculates the actual number of bytes required to store a 64bit base 128 variable-length integer.\r\n         * @param {number|!Long} value Value to encode\r\n         * @returns {number} Number of bytes required. Capped to {@link ByteBuffer.MAX_VARINT64_BYTES}\r\n         * @expose\r\n         */\r\n        ByteBuffer.calculateVarint64 = function(value) {\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value);\n            else if (typeof value === 'string')\n                value = Long.fromString(value);\n            // ref: src/google/protobuf/io/coded_stream.cc\r\n            var part0 = value.toInt() >>> 0,\r\n                part1 = value.shiftRightUnsigned(28).toInt() >>> 0,\r\n                part2 = value.shiftRightUnsigned(56).toInt() >>> 0;\r\n            if (part2 == 0) {\r\n                if (part1 == 0) {\r\n                    if (part0 < 1 << 14)\r\n                        return part0 < 1 << 7 ? 1 : 2;\r\n                    else\r\n                        return part0 < 1 << 21 ? 3 : 4;\r\n                } else {\r\n                    if (part1 < 1 << 14)\r\n                        return part1 < 1 << 7 ? 5 : 6;\r\n                    else\r\n                        return part1 < 1 << 21 ? 7 : 8;\r\n                }\r\n            } else\r\n                return part2 < 1 << 7 ? 9 : 10;\r\n        };\r\n\r\n        /**\r\n         * Zigzag encodes a signed 64bit integer so that it can be effectively used with varint encoding.\r\n         * @param {number|!Long} value Signed long\r\n         * @returns {!Long} Unsigned zigzag encoded long\r\n         * @expose\r\n         */\r\n        ByteBuffer.zigZagEncode64 = function(value) {\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value, false);\n            else if (typeof value === 'string')\n                value = Long.fromString(value, false);\n            else if (value.unsigned !== false) value = value.toSigned();\n            // ref: src/google/protobuf/wire_format_lite.h\r\n            return value.shiftLeft(1).xor(value.shiftRight(63)).toUnsigned();\r\n        };\r\n\r\n        /**\r\n         * Decodes a zigzag encoded signed 64bit integer.\r\n         * @param {!Long|number} value Unsigned zigzag encoded long or JavaScript number\r\n         * @returns {!Long} Signed long\r\n         * @expose\r\n         */\r\n        ByteBuffer.zigZagDecode64 = function(value) {\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value, false);\n            else if (typeof value === 'string')\n                value = Long.fromString(value, false);\n            else if (value.unsigned !== false) value = value.toSigned();\n            // ref: src/google/protobuf/wire_format_lite.h\r\n            return value.shiftRightUnsigned(1).xor(value.and(Long.ONE).toSigned().negate()).toSigned();\r\n        };\r\n\r\n        /**\r\n         * Writes a 64bit base 128 variable-length integer.\r\n         * @param {number|Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n         *  written if omitted.\r\n         * @returns {!ByteBuffer|number} `this` if offset is omitted, else the actual number of bytes written.\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeVarint64 = function(value, offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof value === 'number')\n                    value = Long.fromNumber(value);\n                else if (typeof value === 'string')\n                    value = Long.fromString(value);\n                else if (!(value && value instanceof Long))\n                    throw TypeError(\"Illegal value: \"+value+\" (not an integer or Long)\");\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n            }\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value, false);\n            else if (typeof value === 'string')\n                value = Long.fromString(value, false);\n            else if (value.unsigned !== false) value = value.toSigned();\n            var size = ByteBuffer.calculateVarint64(value),\r\n                part0 = value.toInt() >>> 0,\r\n                part1 = value.shiftRightUnsigned(28).toInt() >>> 0,\r\n                part2 = value.shiftRightUnsigned(56).toInt() >>> 0;\r\n            offset += size;\n            var capacity11 = this.buffer.byteLength;\n            if (offset > capacity11)\n                this.resize((capacity11 *= 2) > offset ? capacity11 : offset);\n            offset -= size;\n            switch (size) {\r\n                case 10: this.view[offset+9] = (part2 >>>  7) & 0x01;\r\n                case 9 : this.view[offset+8] = size !== 9 ? (part2       ) | 0x80 : (part2       ) & 0x7F;\r\n                case 8 : this.view[offset+7] = size !== 8 ? (part1 >>> 21) | 0x80 : (part1 >>> 21) & 0x7F;\r\n                case 7 : this.view[offset+6] = size !== 7 ? (part1 >>> 14) | 0x80 : (part1 >>> 14) & 0x7F;\r\n                case 6 : this.view[offset+5] = size !== 6 ? (part1 >>>  7) | 0x80 : (part1 >>>  7) & 0x7F;\r\n                case 5 : this.view[offset+4] = size !== 5 ? (part1       ) | 0x80 : (part1       ) & 0x7F;\r\n                case 4 : this.view[offset+3] = size !== 4 ? (part0 >>> 21) | 0x80 : (part0 >>> 21) & 0x7F;\r\n                case 3 : this.view[offset+2] = size !== 3 ? (part0 >>> 14) | 0x80 : (part0 >>> 14) & 0x7F;\r\n                case 2 : this.view[offset+1] = size !== 2 ? (part0 >>>  7) | 0x80 : (part0 >>>  7) & 0x7F;\r\n                case 1 : this.view[offset  ] = size !== 1 ? (part0       ) | 0x80 : (part0       ) & 0x7F;\r\n            }\r\n            if (relative) {\r\n                this.offset += size;\r\n                return this;\r\n            } else {\r\n                return size;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Writes a zig-zag encoded 64bit base 128 variable-length integer.\r\n         * @param {number|Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n         *  written if omitted.\r\n         * @returns {!ByteBuffer|number} `this` if offset is omitted, else the actual number of bytes written.\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeVarint64ZigZag = function(value, offset) {\r\n            return this.writeVarint64(ByteBuffer.zigZagEncode64(value), offset);\r\n        };\r\n\r\n        /**\r\n         * Reads a 64bit base 128 variable-length integer. Requires Long.js.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n         *  read if omitted.\r\n         * @returns {!Long|!{value: Long, length: number}} The value read if offset is omitted, else the value read and\r\n         *  the actual number of bytes read.\r\n         * @throws {Error} If it's not a valid varint\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readVarint64 = function(offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 1 > this.buffer.byteLength)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.byteLength);\n            }\r\n            // ref: src/google/protobuf/io/coded_stream.cc\r\n            var start = offset,\r\n                part0 = 0,\r\n                part1 = 0,\r\n                part2 = 0,\r\n                b  = 0;\r\n            b = this.view[offset++]; part0  = (b & 0x7F)      ; if ( b & 0x80                                                   ) {\r\n            b = this.view[offset++]; part0 |= (b & 0x7F) <<  7; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.view[offset++]; part0 |= (b & 0x7F) << 14; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.view[offset++]; part0 |= (b & 0x7F) << 21; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.view[offset++]; part1  = (b & 0x7F)      ; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.view[offset++]; part1 |= (b & 0x7F) <<  7; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.view[offset++]; part1 |= (b & 0x7F) << 14; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.view[offset++]; part1 |= (b & 0x7F) << 21; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.view[offset++]; part2  = (b & 0x7F)      ; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.view[offset++]; part2 |= (b & 0x7F) <<  7; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            throw Error(\"Buffer overrun\"); }}}}}}}}}}\r\n            var value = Long.fromBits(part0 | (part1 << 28), (part1 >>> 4) | (part2) << 24, false);\r\n            if (relative) {\r\n                this.offset = offset;\r\n                return value;\r\n            } else {\r\n                return {\r\n                    'value': value,\r\n                    'length': offset-start\r\n                };\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Reads a zig-zag encoded 64bit base 128 variable-length integer. Requires Long.js.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n         *  read if omitted.\r\n         * @returns {!Long|!{value: Long, length: number}} The value read if offset is omitted, else the value read and\r\n         *  the actual number of bytes read.\r\n         * @throws {Error} If it's not a valid varint\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readVarint64ZigZag = function(offset) {\r\n            var val = this.readVarint64(offset);\r\n            if (val && val['value'] instanceof Long)\r\n                val[\"value\"] = ByteBuffer.zigZagDecode64(val[\"value\"]);\r\n            else\r\n                val = ByteBuffer.zigZagDecode64(val);\r\n            return val;\r\n        };\r\n\r\n    } // Long\r\n\r\n\r\n    // types/strings/cstring\r\n\r\n    /**\r\n     * Writes a NULL-terminated UTF8 encoded string. For this to work the specified string must not contain any NULL\r\n     *  characters itself.\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  contained in `str` + 1 if omitted.\r\n     * @returns {!ByteBuffer|number} this if offset is omitted, else the actual number of bytes written\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeCString = function(str, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        var i,\r\n            k = str.length;\r\n        if (!this.noAssert) {\r\n            if (typeof str !== 'string')\r\n                throw TypeError(\"Illegal str: Not a string\");\r\n            for (i=0; i<k; ++i) {\r\n                if (str.charCodeAt(i) === 0)\r\n                    throw RangeError(\"Illegal str: Contains NULL-characters\");\r\n            }\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        // UTF8 strings do not contain zero bytes in between except for the zero character, so:\r\n        k = utfx.calculateUTF16asUTF8(stringSource(str))[1];\r\n        offset += k+1;\n        var capacity12 = this.buffer.byteLength;\n        if (offset > capacity12)\n            this.resize((capacity12 *= 2) > offset ? capacity12 : offset);\n        offset -= k+1;\n        utfx.encodeUTF16toUTF8(stringSource(str), function(b) {\r\n            this.view[offset++] = b;\r\n        }.bind(this));\r\n        this.view[offset++] = 0;\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return this;\r\n        }\r\n        return k;\r\n    };\r\n\r\n    /**\r\n     * Reads a NULL-terminated UTF8 encoded string. For this to work the string read must not contain any NULL characters\r\n     *  itself.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readCString = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.byteLength);\n        }\r\n        var start = offset,\r\n            temp;\r\n        // UTF8 strings do not contain zero bytes in between except for the zero character itself, so:\r\n        var sd, b = -1;\r\n        utfx.decodeUTF8toUTF16(function() {\r\n            if (b === 0) return null;\r\n            if (offset >= this.limit)\r\n                throw RangeError(\"Illegal range: Truncated data, \"+offset+\" < \"+this.limit);\r\n            b = this.view[offset++];\r\n            return b === 0 ? null : b;\r\n        }.bind(this), sd = stringDestination(), true);\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return sd();\r\n        } else {\r\n            return {\r\n                \"string\": sd(),\r\n                \"length\": offset - start\r\n            };\r\n        }\r\n    };\r\n\r\n    // types/strings/istring\r\n\r\n    /**\r\n     * Writes a length as uint32 prefixed UTF8 encoded string.\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer|number} `this` if `offset` is omitted, else the actual number of bytes written\r\n     * @expose\r\n     * @see ByteBuffer#writeVarint32\r\n     */\r\n    ByteBufferPrototype.writeIString = function(str, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof str !== 'string')\r\n                throw TypeError(\"Illegal str: Not a string\");\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        var start = offset,\r\n            k;\r\n        k = utfx.calculateUTF16asUTF8(stringSource(str), this.noAssert)[1];\r\n        offset += 4+k;\n        var capacity13 = this.buffer.byteLength;\n        if (offset > capacity13)\n            this.resize((capacity13 *= 2) > offset ? capacity13 : offset);\n        offset -= 4+k;\n        if (this.littleEndian) {\n            this.view[offset+3] = (k >>> 24) & 0xFF;\n            this.view[offset+2] = (k >>> 16) & 0xFF;\n            this.view[offset+1] = (k >>>  8) & 0xFF;\n            this.view[offset  ] =  k         & 0xFF;\n        } else {\n            this.view[offset  ] = (k >>> 24) & 0xFF;\n            this.view[offset+1] = (k >>> 16) & 0xFF;\n            this.view[offset+2] = (k >>>  8) & 0xFF;\n            this.view[offset+3] =  k         & 0xFF;\n        }\n        offset += 4;\r\n        utfx.encodeUTF16toUTF8(stringSource(str), function(b) {\r\n            this.view[offset++] = b;\r\n        }.bind(this));\r\n        if (offset !== start + 4 + k)\r\n            throw RangeError(\"Illegal range: Truncated data, \"+offset+\" == \"+(offset+4+k));\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return this;\r\n        }\r\n        return offset - start;\r\n    };\r\n\r\n    /**\r\n     * Reads a length as uint32 prefixed UTF8 encoded string.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     * @see ByteBuffer#readVarint32\r\n     */\r\n    ByteBufferPrototype.readIString = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 4 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.byteLength);\n        }\r\n        var start = offset;\r\n        var len = this.readUint32(offset);\r\n        var str = this.readUTF8String(len, ByteBuffer.METRICS_BYTES, offset += 4);\r\n        offset += str['length'];\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return str['string'];\r\n        } else {\r\n            return {\r\n                'string': str['string'],\r\n                'length': offset - start\r\n            };\r\n        }\r\n    };\r\n\r\n    // types/strings/utf8string\r\n\r\n    /**\r\n     * Metrics representing number of UTF8 characters. Evaluates to `c`.\r\n     * @type {string}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.METRICS_CHARS = 'c';\r\n\r\n    /**\r\n     * Metrics representing number of bytes. Evaluates to `b`.\r\n     * @type {string}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.METRICS_BYTES = 'b';\r\n\r\n    /**\r\n     * Writes an UTF8 encoded string.\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} if omitted.\r\n     * @returns {!ByteBuffer|number} this if offset is omitted, else the actual number of bytes written.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUTF8String = function(str, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        var k;\r\n        var start = offset;\r\n        k = utfx.calculateUTF16asUTF8(stringSource(str))[1];\r\n        offset += k;\n        var capacity14 = this.buffer.byteLength;\n        if (offset > capacity14)\n            this.resize((capacity14 *= 2) > offset ? capacity14 : offset);\n        offset -= k;\n        utfx.encodeUTF16toUTF8(stringSource(str), function(b) {\r\n            this.view[offset++] = b;\r\n        }.bind(this));\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return this;\r\n        }\r\n        return offset - start;\r\n    };\r\n\r\n    /**\r\n     * Writes an UTF8 encoded string. This is an alias of {@link ByteBuffer#writeUTF8String}.\r\n     * @function\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} if omitted.\r\n     * @returns {!ByteBuffer|number} this if offset is omitted, else the actual number of bytes written.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeString = ByteBufferPrototype.writeUTF8String;\r\n\r\n    /**\r\n     * Calculates the number of UTF8 characters of a string. JavaScript itself uses UTF-16, so that a string's\r\n     *  `length` property does not reflect its actual UTF8 size if it contains code points larger than 0xFFFF.\r\n     * @param {string} str String to calculate\r\n     * @returns {number} Number of UTF8 characters\r\n     * @expose\r\n     */\r\n    ByteBuffer.calculateUTF8Chars = function(str) {\r\n        return utfx.calculateUTF16asUTF8(stringSource(str))[0];\r\n    };\r\n\r\n    /**\r\n     * Calculates the number of UTF8 bytes of a string.\r\n     * @param {string} str String to calculate\r\n     * @returns {number} Number of UTF8 bytes\r\n     * @expose\r\n     */\r\n    ByteBuffer.calculateUTF8Bytes = function(str) {\r\n        return utfx.calculateUTF16asUTF8(stringSource(str))[1];\r\n    };\r\n\r\n    /**\r\n     * Calculates the number of UTF8 bytes of a string. This is an alias of {@link ByteBuffer.calculateUTF8Bytes}.\r\n     * @function\r\n     * @param {string} str String to calculate\r\n     * @returns {number} Number of UTF8 bytes\r\n     * @expose\r\n     */\r\n    ByteBuffer.calculateString = ByteBuffer.calculateUTF8Bytes;\r\n\r\n    /**\r\n     * Reads an UTF8 encoded string.\r\n     * @param {number} length Number of characters or bytes to read.\r\n     * @param {string=} metrics Metrics specifying what `length` is meant to count. Defaults to\r\n     *  {@link ByteBuffer.METRICS_CHARS}.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUTF8String = function(length, metrics, offset) {\r\n        if (typeof metrics === 'number') {\r\n            offset = metrics;\r\n            metrics = undefined;\r\n        }\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (typeof metrics === 'undefined') metrics = ByteBuffer.METRICS_CHARS;\r\n        if (!this.noAssert) {\r\n            if (typeof length !== 'number' || length % 1 !== 0)\n                throw TypeError(\"Illegal length: \"+length+\" (not an integer)\");\n            length |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        var i = 0,\r\n            start = offset,\r\n            sd;\r\n        if (metrics === ByteBuffer.METRICS_CHARS) { // The same for node and the browser\r\n            sd = stringDestination();\r\n            utfx.decodeUTF8(function() {\r\n                return i < length && offset < this.limit ? this.view[offset++] : null;\r\n            }.bind(this), function(cp) {\r\n                ++i; utfx.UTF8toUTF16(cp, sd);\r\n            });\r\n            if (i !== length)\r\n                throw RangeError(\"Illegal range: Truncated data, \"+i+\" == \"+length);\r\n            if (relative) {\r\n                this.offset = offset;\r\n                return sd();\r\n            } else {\r\n                return {\r\n                    \"string\": sd(),\r\n                    \"length\": offset - start\r\n                };\r\n            }\r\n        } else if (metrics === ByteBuffer.METRICS_BYTES) {\r\n            if (!this.noAssert) {\r\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + length > this.buffer.byteLength)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+length+\") <= \"+this.buffer.byteLength);\n            }\r\n            var k = offset + length;\r\n            utfx.decodeUTF8toUTF16(function() {\r\n                return offset < k ? this.view[offset++] : null;\r\n            }.bind(this), sd = stringDestination(), this.noAssert);\r\n            if (offset !== k)\r\n                throw RangeError(\"Illegal range: Truncated data, \"+offset+\" == \"+k);\r\n            if (relative) {\r\n                this.offset = offset;\r\n                return sd();\r\n            } else {\r\n                return {\r\n                    'string': sd(),\r\n                    'length': offset - start\r\n                };\r\n            }\r\n        } else\r\n            throw TypeError(\"Unsupported metrics: \"+metrics);\r\n    };\r\n\r\n    /**\r\n     * Reads an UTF8 encoded string. This is an alias of {@link ByteBuffer#readUTF8String}.\r\n     * @function\r\n     * @param {number} length Number of characters or bytes to read\r\n     * @param {number=} metrics Metrics specifying what `n` is meant to count. Defaults to\r\n     *  {@link ByteBuffer.METRICS_CHARS}.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readString = ByteBufferPrototype.readUTF8String;\r\n\r\n    // types/strings/vstring\r\n\r\n    /**\r\n     * Writes a length as varint32 prefixed UTF8 encoded string.\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer|number} `this` if `offset` is omitted, else the actual number of bytes written\r\n     * @expose\r\n     * @see ByteBuffer#writeVarint32\r\n     */\r\n    ByteBufferPrototype.writeVString = function(str, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof str !== 'string')\r\n                throw TypeError(\"Illegal str: Not a string\");\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        var start = offset,\r\n            k, l;\r\n        k = utfx.calculateUTF16asUTF8(stringSource(str), this.noAssert)[1];\r\n        l = ByteBuffer.calculateVarint32(k);\r\n        offset += l+k;\n        var capacity15 = this.buffer.byteLength;\n        if (offset > capacity15)\n            this.resize((capacity15 *= 2) > offset ? capacity15 : offset);\n        offset -= l+k;\n        offset += this.writeVarint32(k, offset);\r\n        utfx.encodeUTF16toUTF8(stringSource(str), function(b) {\r\n            this.view[offset++] = b;\r\n        }.bind(this));\r\n        if (offset !== start+k+l)\r\n            throw RangeError(\"Illegal range: Truncated data, \"+offset+\" == \"+(offset+k+l));\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return this;\r\n        }\r\n        return offset - start;\r\n    };\r\n\r\n    /**\r\n     * Reads a length as varint32 prefixed UTF8 encoded string.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     * @see ByteBuffer#readVarint32\r\n     */\r\n    ByteBufferPrototype.readVString = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.byteLength);\n        }\r\n        var start = offset;\r\n        var len = this.readVarint32(offset);\r\n        var str = this.readUTF8String(len['value'], ByteBuffer.METRICS_BYTES, offset += len['length']);\r\n        offset += str['length'];\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return str['string'];\r\n        } else {\r\n            return {\r\n                'string': str['string'],\r\n                'length': offset - start\r\n            };\r\n        }\r\n    };\r\n\r\n\r\n    /**\r\n     * Appends some data to this ByteBuffer. This will overwrite any contents behind the specified offset up to the appended\r\n     *  data's length.\r\n     * @param {!ByteBuffer|!ArrayBuffer|!Uint8Array|string} source Data to append. If `source` is a ByteBuffer, its offsets\r\n     *  will be modified according to the performed read operation.\r\n     * @param {(string|number)=} encoding Encoding if `data` is a string (\"base64\", \"hex\", \"binary\", defaults to \"utf8\")\r\n     * @param {number=} offset Offset to append at. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @example A relative `<01 02>03.append(<04 05>)` will result in `<01 02 04 05>, 04 05|`\r\n     * @example An absolute `<01 02>03.append(04 05>, 1)` will result in `<01 04>05, 04 05|`\r\n     */\r\n    ByteBufferPrototype.append = function(source, encoding, offset) {\r\n        if (typeof encoding === 'number' || typeof encoding !== 'string') {\r\n            offset = encoding;\r\n            encoding = undefined;\r\n        }\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        if (!(source instanceof ByteBuffer))\r\n            source = ByteBuffer.wrap(source, encoding);\r\n        var length = source.limit - source.offset;\r\n        if (length <= 0) return this; // Nothing to append\r\n        offset += length;\n        var capacity16 = this.buffer.byteLength;\n        if (offset > capacity16)\n            this.resize((capacity16 *= 2) > offset ? capacity16 : offset);\n        offset -= length;\n        this.view.set(source.view.subarray(source.offset, source.limit), offset);\r\n        source.offset += length;\r\n        if (relative) this.offset += length;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Appends this ByteBuffer's contents to another ByteBuffer. This will overwrite any contents at and after the\r\n        specified offset up to the length of this ByteBuffer's data.\r\n     * @param {!ByteBuffer} target Target ByteBuffer\r\n     * @param {number=} offset Offset to append to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @see ByteBuffer#append\r\n     */\r\n    ByteBufferPrototype.appendTo = function(target, offset) {\r\n        target.append(this, offset);\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Enables or disables assertions of argument types and offsets. Assertions are enabled by default but you can opt to\r\n     *  disable them if your code already makes sure that everything is valid.\r\n     * @param {boolean} assert `true` to enable assertions, otherwise `false`\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.assert = function(assert) {\r\n        this.noAssert = !assert;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Gets the capacity of this ByteBuffer's backing buffer.\r\n     * @returns {number} Capacity of the backing buffer\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.capacity = function() {\r\n        return this.buffer.byteLength;\r\n    };\r\n    /**\r\n     * Clears this ByteBuffer's offsets by setting {@link ByteBuffer#offset} to `0` and {@link ByteBuffer#limit} to the\r\n     *  backing buffer's capacity. Discards {@link ByteBuffer#markedOffset}.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.clear = function() {\r\n        this.offset = 0;\r\n        this.limit = this.buffer.byteLength;\r\n        this.markedOffset = -1;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Creates a cloned instance of this ByteBuffer, preset with this ByteBuffer's values for {@link ByteBuffer#offset},\r\n     *  {@link ByteBuffer#markedOffset} and {@link ByteBuffer#limit}.\r\n     * @param {boolean=} copy Whether to copy the backing buffer or to return another view on the same, defaults to `false`\r\n     * @returns {!ByteBuffer} Cloned instance\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.clone = function(copy) {\r\n        var bb = new ByteBuffer(0, this.littleEndian, this.noAssert);\r\n        if (copy) {\r\n            bb.buffer = new ArrayBuffer(this.buffer.byteLength);\r\n            bb.view = new Uint8Array(bb.buffer);\r\n        } else {\r\n            bb.buffer = this.buffer;\r\n            bb.view = this.view;\r\n        }\r\n        bb.offset = this.offset;\r\n        bb.markedOffset = this.markedOffset;\r\n        bb.limit = this.limit;\r\n        return bb;\r\n    };\r\n\r\n    /**\r\n     * Compacts this ByteBuffer to be backed by a {@link ByteBuffer#buffer} of its contents' length. Contents are the bytes\r\n     *  between {@link ByteBuffer#offset} and {@link ByteBuffer#limit}. Will set `offset = 0` and `limit = capacity` and\r\n     *  adapt {@link ByteBuffer#markedOffset} to the same relative position if set.\r\n     * @param {number=} begin Offset to start at, defaults to {@link ByteBuffer#offset}\r\n     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.compact = function(begin, end) {\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.byteLength)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.byteLength);\n        }\r\n        if (begin === 0 && end === this.buffer.byteLength)\r\n            return this; // Already compacted\r\n        var len = end - begin;\r\n        if (len === 0) {\r\n            this.buffer = EMPTY_BUFFER;\r\n            this.view = null;\r\n            if (this.markedOffset >= 0) this.markedOffset -= begin;\r\n            this.offset = 0;\r\n            this.limit = 0;\r\n            return this;\r\n        }\r\n        var buffer = new ArrayBuffer(len);\r\n        var view = new Uint8Array(buffer);\r\n        view.set(this.view.subarray(begin, end));\r\n        this.buffer = buffer;\r\n        this.view = view;\r\n        if (this.markedOffset >= 0) this.markedOffset -= begin;\r\n        this.offset = 0;\r\n        this.limit = len;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Creates a copy of this ByteBuffer's contents. Contents are the bytes between {@link ByteBuffer#offset} and\r\n     *  {@link ByteBuffer#limit}.\r\n     * @param {number=} begin Begin offset, defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.\r\n     * @returns {!ByteBuffer} Copy\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.copy = function(begin, end) {\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.byteLength)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.byteLength);\n        }\r\n        if (begin === end)\r\n            return new ByteBuffer(0, this.littleEndian, this.noAssert);\r\n        var capacity = end - begin,\r\n            bb = new ByteBuffer(capacity, this.littleEndian, this.noAssert);\r\n        bb.offset = 0;\r\n        bb.limit = capacity;\r\n        if (bb.markedOffset >= 0) bb.markedOffset -= begin;\r\n        this.copyTo(bb, 0, begin, end);\r\n        return bb;\r\n    };\r\n\r\n    /**\r\n     * Copies this ByteBuffer's contents to another ByteBuffer. Contents are the bytes between {@link ByteBuffer#offset} and\r\n     *  {@link ByteBuffer#limit}.\r\n     * @param {!ByteBuffer} target Target ByteBuffer\r\n     * @param {number=} targetOffset Offset to copy to. Will use and increase the target's {@link ByteBuffer#offset}\r\n     *  by the number of bytes copied if omitted.\r\n     * @param {number=} sourceOffset Offset to start copying from. Will use and increase {@link ByteBuffer#offset} by the\r\n     *  number of bytes copied if omitted.\r\n     * @param {number=} sourceLimit Offset to end copying from, defaults to {@link ByteBuffer#limit}\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.copyTo = function(target, targetOffset, sourceOffset, sourceLimit) {\r\n        var relative,\r\n            targetRelative;\r\n        if (!this.noAssert) {\r\n            if (!ByteBuffer.isByteBuffer(target))\r\n                throw TypeError(\"Illegal target: Not a ByteBuffer\");\r\n        }\r\n        targetOffset = (targetRelative = typeof targetOffset === 'undefined') ? target.offset : targetOffset | 0;\r\n        sourceOffset = (relative = typeof sourceOffset === 'undefined') ? this.offset : sourceOffset | 0;\r\n        sourceLimit = typeof sourceLimit === 'undefined' ? this.limit : sourceLimit | 0;\r\n\r\n        if (targetOffset < 0 || targetOffset > target.buffer.byteLength)\r\n            throw RangeError(\"Illegal target range: 0 <= \"+targetOffset+\" <= \"+target.buffer.byteLength);\r\n        if (sourceOffset < 0 || sourceLimit > this.buffer.byteLength)\r\n            throw RangeError(\"Illegal source range: 0 <= \"+sourceOffset+\" <= \"+this.buffer.byteLength);\r\n\r\n        var len = sourceLimit - sourceOffset;\r\n        if (len === 0)\r\n            return target; // Nothing to copy\r\n\r\n        target.ensureCapacity(targetOffset + len);\r\n\r\n        target.view.set(this.view.subarray(sourceOffset, sourceLimit), targetOffset);\r\n\r\n        if (relative) this.offset += len;\r\n        if (targetRelative) target.offset += len;\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Makes sure that this ByteBuffer is backed by a {@link ByteBuffer#buffer} of at least the specified capacity. If the\r\n     *  current capacity is exceeded, it will be doubled. If double the current capacity is less than the required capacity,\r\n     *  the required capacity will be used instead.\r\n     * @param {number} capacity Required capacity\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.ensureCapacity = function(capacity) {\r\n        var current = this.buffer.byteLength;\r\n        if (current < capacity)\r\n            return this.resize((current *= 2) > capacity ? current : capacity);\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Overwrites this ByteBuffer's contents with the specified value. Contents are the bytes between\r\n     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}.\r\n     * @param {number|string} value Byte value to fill with. If given as a string, the first character is used.\r\n     * @param {number=} begin Begin offset. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted. defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @example `someByteBuffer.clear().fill(0)` fills the entire backing buffer with zeroes\r\n     */\r\n    ByteBufferPrototype.fill = function(value, begin, end) {\r\n        var relative = typeof begin === 'undefined';\n        if (relative) begin = this.offset;\n        if (typeof value === 'string' && value.length > 0)\r\n            value = value.charCodeAt(0);\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.byteLength)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.byteLength);\n        }\r\n        if (begin >= end)\r\n            return this; // Nothing to fill\r\n        while (begin < end) this.view[begin++] = value;\r\n        if (relative) this.offset = begin;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Makes this ByteBuffer ready for a new sequence of write or relative read operations. Sets `limit = offset` and\r\n     *  `offset = 0`. Make sure always to flip a ByteBuffer when all relative read or write operations are complete.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.flip = function() {\r\n        this.limit = this.offset;\r\n        this.offset = 0;\r\n        return this;\r\n    };\r\n    /**\r\n     * Marks an offset on this ByteBuffer to be used later.\r\n     * @param {number=} offset Offset to mark. Defaults to {@link ByteBuffer#offset}.\r\n     * @returns {!ByteBuffer} this\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @see ByteBuffer#reset\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.mark = function(offset) {\r\n        offset = typeof offset === 'undefined' ? this.offset : offset;\r\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        this.markedOffset = offset;\r\n        return this;\r\n    };\r\n    /**\r\n     * Sets the byte order.\r\n     * @param {boolean} littleEndian `true` for little endian byte order, `false` for big endian\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.order = function(littleEndian) {\r\n        if (!this.noAssert) {\r\n            if (typeof littleEndian !== 'boolean')\r\n                throw TypeError(\"Illegal littleEndian: Not a boolean\");\r\n        }\r\n        this.littleEndian = !!littleEndian;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Switches (to) little endian byte order.\r\n     * @param {boolean=} littleEndian Defaults to `true`, otherwise uses big endian\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.LE = function(littleEndian) {\r\n        this.littleEndian = typeof littleEndian !== 'undefined' ? !!littleEndian : true;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Switches (to) big endian byte order.\r\n     * @param {boolean=} bigEndian Defaults to `true`, otherwise uses little endian\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.BE = function(bigEndian) {\r\n        this.littleEndian = typeof bigEndian !== 'undefined' ? !bigEndian : false;\r\n        return this;\r\n    };\r\n    /**\r\n     * Prepends some data to this ByteBuffer. This will overwrite any contents before the specified offset up to the\r\n     *  prepended data's length. If there is not enough space available before the specified `offset`, the backing buffer\r\n     *  will be resized and its contents moved accordingly.\r\n     * @param {!ByteBuffer|string|!ArrayBuffer} source Data to prepend. If `source` is a ByteBuffer, its offset will be\r\n     *  modified according to the performed read operation.\r\n     * @param {(string|number)=} encoding Encoding if `data` is a string (\"base64\", \"hex\", \"binary\", defaults to \"utf8\")\r\n     * @param {number=} offset Offset to prepend at. Will use and decrease {@link ByteBuffer#offset} by the number of bytes\r\n     *  prepended if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @example A relative `00<01 02 03>.prepend(<04 05>)` results in `<04 05 01 02 03>, 04 05|`\r\n     * @example An absolute `00<01 02 03>.prepend(<04 05>, 2)` results in `04<05 02 03>, 04 05|`\r\n     */\r\n    ByteBufferPrototype.prepend = function(source, encoding, offset) {\r\n        if (typeof encoding === 'number' || typeof encoding !== 'string') {\r\n            offset = encoding;\r\n            encoding = undefined;\r\n        }\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        if (!(source instanceof ByteBuffer))\r\n            source = ByteBuffer.wrap(source, encoding);\r\n        var len = source.limit - source.offset;\r\n        if (len <= 0) return this; // Nothing to prepend\r\n        var diff = len - offset;\r\n        if (diff > 0) { // Not enough space before offset, so resize + move\r\n            var buffer = new ArrayBuffer(this.buffer.byteLength + diff);\r\n            var view = new Uint8Array(buffer);\r\n            view.set(this.view.subarray(offset, this.buffer.byteLength), len);\r\n            this.buffer = buffer;\r\n            this.view = view;\r\n            this.offset += diff;\r\n            if (this.markedOffset >= 0) this.markedOffset += diff;\r\n            this.limit += diff;\r\n            offset += diff;\r\n        } else {\r\n            var arrayView = new Uint8Array(this.buffer);\r\n        }\r\n        this.view.set(source.view.subarray(source.offset, source.limit), offset - len);\r\n\r\n        source.offset = source.limit;\r\n        if (relative)\r\n            this.offset -= len;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Prepends this ByteBuffer to another ByteBuffer. This will overwrite any contents before the specified offset up to the\r\n     *  prepended data's length. If there is not enough space available before the specified `offset`, the backing buffer\r\n     *  will be resized and its contents moved accordingly.\r\n     * @param {!ByteBuffer} target Target ByteBuffer\r\n     * @param {number=} offset Offset to prepend at. Will use and decrease {@link ByteBuffer#offset} by the number of bytes\r\n     *  prepended if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @see ByteBuffer#prepend\r\n     */\r\n    ByteBufferPrototype.prependTo = function(target, offset) {\r\n        target.prepend(this, offset);\r\n        return this;\r\n    };\r\n    /**\r\n     * Prints debug information about this ByteBuffer's contents.\r\n     * @param {function(string)=} out Output function to call, defaults to console.log\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.printDebug = function(out) {\r\n        if (typeof out !== 'function') out = console.log.bind(console);\r\n        out(\r\n            this.toString()+\"\\n\"+\r\n            \"-------------------------------------------------------------------\\n\"+\r\n            this.toDebug(/* columns */ true)\r\n        );\r\n    };\r\n\r\n    /**\r\n     * Gets the number of remaining readable bytes. Contents are the bytes between {@link ByteBuffer#offset} and\r\n     *  {@link ByteBuffer#limit}, so this returns `limit - offset`.\r\n     * @returns {number} Remaining readable bytes. May be negative if `offset > limit`.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.remaining = function() {\r\n        return this.limit - this.offset;\r\n    };\r\n    /**\r\n     * Resets this ByteBuffer's {@link ByteBuffer#offset}. If an offset has been marked through {@link ByteBuffer#mark}\r\n     *  before, `offset` will be set to {@link ByteBuffer#markedOffset}, which will then be discarded. If no offset has been\r\n     *  marked, sets `offset = 0`.\r\n     * @returns {!ByteBuffer} this\r\n     * @see ByteBuffer#mark\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.reset = function() {\r\n        if (this.markedOffset >= 0) {\r\n            this.offset = this.markedOffset;\r\n            this.markedOffset = -1;\r\n        } else {\r\n            this.offset = 0;\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Resizes this ByteBuffer to be backed by a buffer of at least the given capacity. Will do nothing if already that\r\n     *  large or larger.\r\n     * @param {number} capacity Capacity required\r\n     * @returns {!ByteBuffer} this\r\n     * @throws {TypeError} If `capacity` is not a number\r\n     * @throws {RangeError} If `capacity < 0`\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.resize = function(capacity) {\r\n        if (!this.noAssert) {\r\n            if (typeof capacity !== 'number' || capacity % 1 !== 0)\n                throw TypeError(\"Illegal capacity: \"+capacity+\" (not an integer)\");\n            capacity |= 0;\n            if (capacity < 0)\r\n                throw RangeError(\"Illegal capacity: 0 <= \"+capacity);\r\n        }\r\n        if (this.buffer.byteLength < capacity) {\r\n            var buffer = new ArrayBuffer(capacity);\r\n            var view = new Uint8Array(buffer);\r\n            view.set(this.view);\r\n            this.buffer = buffer;\r\n            this.view = view;\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Reverses this ByteBuffer's contents.\r\n     * @param {number=} begin Offset to start at, defaults to {@link ByteBuffer#offset}\r\n     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.reverse = function(begin, end) {\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.byteLength)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.byteLength);\n        }\r\n        if (begin === end)\r\n            return this; // Nothing to reverse\r\n        Array.prototype.reverse.call(this.view.subarray(begin, end));\r\n        return this;\r\n    };\r\n    /**\r\n     * Skips the next `length` bytes. This will just advance\r\n     * @param {number} length Number of bytes to skip. May also be negative to move the offset back.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.skip = function(length) {\r\n        if (!this.noAssert) {\r\n            if (typeof length !== 'number' || length % 1 !== 0)\n                throw TypeError(\"Illegal length: \"+length+\" (not an integer)\");\n            length |= 0;\n        }\r\n        var offset = this.offset + length;\r\n        if (!this.noAssert) {\r\n            if (offset < 0 || offset > this.buffer.byteLength)\r\n                throw RangeError(\"Illegal length: 0 <= \"+this.offset+\" + \"+length+\" <= \"+this.buffer.byteLength);\r\n        }\r\n        this.offset = offset;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Slices this ByteBuffer by creating a cloned instance with `offset = begin` and `limit = end`.\r\n     * @param {number=} begin Begin offset, defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.\r\n     * @returns {!ByteBuffer} Clone of this ByteBuffer with slicing applied, backed by the same {@link ByteBuffer#buffer}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.slice = function(begin, end) {\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.byteLength)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.byteLength);\n        }\r\n        var bb = this.clone();\r\n        bb.offset = begin;\r\n        bb.limit = end;\r\n        return bb;\r\n    };\r\n    /**\r\n     * Returns a copy of the backing buffer that contains this ByteBuffer's contents. Contents are the bytes between\r\n     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}.\r\n     * @param {boolean=} forceCopy If `true` returns a copy, otherwise returns a view referencing the same memory if\r\n     *  possible. Defaults to `false`\r\n     * @returns {!ArrayBuffer} Contents as an ArrayBuffer\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toBuffer = function(forceCopy) {\r\n        var offset = this.offset,\r\n            limit = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: Not an integer\");\n            offset >>>= 0;\n            if (typeof limit !== 'number' || limit % 1 !== 0)\n                throw TypeError(\"Illegal limit: Not an integer\");\n            limit >>>= 0;\n            if (offset < 0 || offset > limit || limit > this.buffer.byteLength)\n                throw RangeError(\"Illegal range: 0 <= \"+offset+\" <= \"+limit+\" <= \"+this.buffer.byteLength);\n        }\r\n        // NOTE: It's not possible to have another ArrayBuffer reference the same memory as the backing buffer. This is\r\n        // possible with Uint8Array#subarray only, but we have to return an ArrayBuffer by contract. So:\r\n        if (!forceCopy && offset === 0 && limit === this.buffer.byteLength)\r\n            return this.buffer;\r\n        if (offset === limit)\r\n            return EMPTY_BUFFER;\r\n        var buffer = new ArrayBuffer(limit - offset);\r\n        new Uint8Array(buffer).set(new Uint8Array(this.buffer).subarray(offset, limit), 0);\r\n        return buffer;\r\n    };\r\n\r\n    /**\r\n     * Returns a raw buffer compacted to contain this ByteBuffer's contents. Contents are the bytes between\r\n     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}. This is an alias of {@link ByteBuffer#toBuffer}.\r\n     * @function\r\n     * @param {boolean=} forceCopy If `true` returns a copy, otherwise returns a view referencing the same memory.\r\n     *  Defaults to `false`\r\n     * @returns {!ArrayBuffer} Contents as an ArrayBuffer\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toArrayBuffer = ByteBufferPrototype.toBuffer;\r\n\r\n    /**\r\n     * Converts the ByteBuffer's contents to a string.\r\n     * @param {string=} encoding Output encoding. Returns an informative string representation if omitted but also allows\r\n     *  direct conversion to \"utf8\", \"hex\", \"base64\" and \"binary\" encoding. \"debug\" returns a hex representation with\r\n     *  highlighted offsets.\r\n     * @param {number=} begin Offset to begin at, defaults to {@link ByteBuffer#offset}\r\n     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}\r\n     * @returns {string} String representation\r\n     * @throws {Error} If `encoding` is invalid\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toString = function(encoding, begin, end) {\r\n        if (typeof encoding === 'undefined')\r\n            return \"ByteBufferAB(offset=\"+this.offset+\",markedOffset=\"+this.markedOffset+\",limit=\"+this.limit+\",capacity=\"+this.capacity()+\")\";\r\n        if (typeof encoding === 'number')\r\n            encoding = \"utf8\",\r\n            begin = encoding,\r\n            end = begin;\r\n        switch (encoding) {\r\n            case \"utf8\":\r\n                return this.toUTF8(begin, end);\r\n            case \"base64\":\r\n                return this.toBase64(begin, end);\r\n            case \"hex\":\r\n                return this.toHex(begin, end);\r\n            case \"binary\":\r\n                return this.toBinary(begin, end);\r\n            case \"debug\":\r\n                return this.toDebug();\r\n            case \"columns\":\r\n                return this.toColumns();\r\n            default:\r\n                throw Error(\"Unsupported encoding: \"+encoding);\r\n        }\r\n    };\r\n\r\n    // lxiv-embeddable\r\n\r\n    /**\r\n     * lxiv-embeddable (c) 2014 Daniel Wirtz <dcode@dcode.io>\r\n     * Released under the Apache License, Version 2.0\r\n     * see: https://github.com/dcodeIO/lxiv for details\r\n     */\r\n    var lxiv = function() {\r\n        \"use strict\";\r\n\r\n        /**\r\n         * lxiv namespace.\r\n         * @type {!Object.<string,*>}\r\n         * @exports lxiv\r\n         */\r\n        var lxiv = {};\r\n\r\n        /**\r\n         * Character codes for output.\r\n         * @type {!Array.<number>}\r\n         * @inner\r\n         */\r\n        var aout = [\r\n            65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\r\n            81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102,\r\n            103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118,\r\n            119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 47\r\n        ];\r\n\r\n        /**\r\n         * Character codes for input.\r\n         * @type {!Array.<number>}\r\n         * @inner\r\n         */\r\n        var ain = [];\r\n        for (var i=0, k=aout.length; i<k; ++i)\r\n            ain[aout[i]] = i;\r\n\r\n        /**\r\n         * Encodes bytes to base64 char codes.\r\n         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if\r\n         *  there are no more bytes left.\r\n         * @param {!function(number)} dst Characters destination as a function successively called with each encoded char\r\n         *  code.\r\n         */\r\n        lxiv.encode = function(src, dst) {\r\n            var b, t;\r\n            while ((b = src()) !== null) {\r\n                dst(aout[(b>>2)&0x3f]);\r\n                t = (b&0x3)<<4;\r\n                if ((b = src()) !== null) {\r\n                    t |= (b>>4)&0xf;\r\n                    dst(aout[(t|((b>>4)&0xf))&0x3f]);\r\n                    t = (b&0xf)<<2;\r\n                    if ((b = src()) !== null)\r\n                        dst(aout[(t|((b>>6)&0x3))&0x3f]),\r\n                        dst(aout[b&0x3f]);\r\n                    else\r\n                        dst(aout[t&0x3f]),\r\n                        dst(61);\r\n                } else\r\n                    dst(aout[t&0x3f]),\r\n                    dst(61),\r\n                    dst(61);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Decodes base64 char codes to bytes.\r\n         * @param {!function():number|null} src Characters source as a function returning the next char code respectively\r\n         *  `null` if there are no more characters left.\r\n         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte.\r\n         * @throws {Error} If a character code is invalid\r\n         */\r\n        lxiv.decode = function(src, dst) {\r\n            var c, t1, t2;\r\n            function fail(c) {\r\n                throw Error(\"Illegal character code: \"+c);\r\n            }\r\n            while ((c = src()) !== null) {\r\n                t1 = ain[c];\r\n                if (typeof t1 === 'undefined') fail(c);\r\n                if ((c = src()) !== null) {\r\n                    t2 = ain[c];\r\n                    if (typeof t2 === 'undefined') fail(c);\r\n                    dst((t1<<2)>>>0|(t2&0x30)>>4);\r\n                    if ((c = src()) !== null) {\r\n                        t1 = ain[c];\r\n                        if (typeof t1 === 'undefined')\r\n                            if (c === 61) break; else fail(c);\r\n                        dst(((t2&0xf)<<4)>>>0|(t1&0x3c)>>2);\r\n                        if ((c = src()) !== null) {\r\n                            t2 = ain[c];\r\n                            if (typeof t2 === 'undefined')\r\n                                if (c === 61) break; else fail(c);\r\n                            dst(((t1&0x3)<<6)>>>0|t2);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Tests if a string is valid base64.\r\n         * @param {string} str String to test\r\n         * @returns {boolean} `true` if valid, otherwise `false`\r\n         */\r\n        lxiv.test = function(str) {\r\n            return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(str);\r\n        };\r\n\r\n        return lxiv;\r\n    }();\r\n\r\n    // encodings/base64\r\n\r\n    /**\r\n     * Encodes this ByteBuffer's contents to a base64 encoded string.\r\n     * @param {number=} begin Offset to begin at, defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}.\r\n     * @returns {string} Base64 encoded string\r\n     * @throws {RangeError} If `begin` or `end` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toBase64 = function(begin, end) {\r\n        if (typeof begin === 'undefined')\r\n            begin = this.offset;\r\n        if (typeof end === 'undefined')\r\n            end = this.limit;\r\n        begin = begin | 0; end = end | 0;\r\n        if (begin < 0 || end > this.capacity || begin > end)\r\n            throw RangeError(\"begin, end\");\r\n        var sd; lxiv.encode(function() {\r\n            return begin < end ? this.view[begin++] : null;\r\n        }.bind(this), sd = stringDestination());\r\n        return sd();\r\n    };\r\n\r\n    /**\r\n     * Decodes a base64 encoded string to a ByteBuffer.\r\n     * @param {string} str String to decode\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     */\r\n    ByteBuffer.fromBase64 = function(str, littleEndian) {\r\n        if (typeof str !== 'string')\r\n            throw TypeError(\"str\");\r\n        var bb = new ByteBuffer(str.length/4*3, littleEndian),\r\n            i = 0;\r\n        lxiv.decode(stringSource(str), function(b) {\r\n            bb.view[i++] = b;\r\n        });\r\n        bb.limit = i;\r\n        return bb;\r\n    };\r\n\r\n    /**\r\n     * Encodes a binary string to base64 like `window.btoa` does.\r\n     * @param {string} str Binary string\r\n     * @returns {string} Base64 encoded string\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window.btoa\r\n     * @expose\r\n     */\r\n    ByteBuffer.btoa = function(str) {\r\n        return ByteBuffer.fromBinary(str).toBase64();\r\n    };\r\n\r\n    /**\r\n     * Decodes a base64 encoded string to binary like `window.atob` does.\r\n     * @param {string} b64 Base64 encoded string\r\n     * @returns {string} Binary string\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window.atob\r\n     * @expose\r\n     */\r\n    ByteBuffer.atob = function(b64) {\r\n        return ByteBuffer.fromBase64(b64).toBinary();\r\n    };\r\n\r\n    // encodings/binary\r\n\r\n    /**\r\n     * Encodes this ByteBuffer to a binary encoded string, that is using only characters 0x00-0xFF as bytes.\r\n     * @param {number=} begin Offset to begin at. Defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end Offset to end at. Defaults to {@link ByteBuffer#limit}.\r\n     * @returns {string} Binary encoded string\r\n     * @throws {RangeError} If `offset > limit`\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toBinary = function(begin, end) {\r\n        if (typeof begin === 'undefined')\r\n            begin = this.offset;\r\n        if (typeof end === 'undefined')\r\n            end = this.limit;\r\n        begin |= 0; end |= 0;\r\n        if (begin < 0 || end > this.capacity() || begin > end)\r\n            throw RangeError(\"begin, end\");\r\n        if (begin === end)\r\n            return \"\";\r\n        var chars = [],\r\n            parts = [];\r\n        while (begin < end) {\r\n            chars.push(this.view[begin++]);\r\n            if (chars.length >= 1024)\r\n                parts.push(String.fromCharCode.apply(String, chars)),\r\n                chars = [];\r\n        }\r\n        return parts.join('') + String.fromCharCode.apply(String, chars);\r\n    };\r\n\r\n    /**\r\n     * Decodes a binary encoded string, that is using only characters 0x00-0xFF as bytes, to a ByteBuffer.\r\n     * @param {string} str String to decode\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     */\r\n    ByteBuffer.fromBinary = function(str, littleEndian) {\r\n        if (typeof str !== 'string')\r\n            throw TypeError(\"str\");\r\n        var i = 0,\r\n            k = str.length,\r\n            charCode,\r\n            bb = new ByteBuffer(k, littleEndian);\r\n        while (i<k) {\r\n            charCode = str.charCodeAt(i);\r\n            if (charCode > 0xff)\r\n                throw RangeError(\"illegal char code: \"+charCode);\r\n            bb.view[i++] = charCode;\r\n        }\r\n        bb.limit = k;\r\n        return bb;\r\n    };\r\n\r\n    // encodings/debug\r\n\r\n    /**\r\n     * Encodes this ByteBuffer to a hex encoded string with marked offsets. Offset symbols are:\r\n     * * `<` : offset,\r\n     * * `'` : markedOffset,\r\n     * * `>` : limit,\r\n     * * `|` : offset and limit,\r\n     * * `[` : offset and markedOffset,\r\n     * * `]` : markedOffset and limit,\r\n     * * `!` : offset, markedOffset and limit\r\n     * @param {boolean=} columns If `true` returns two columns hex + ascii, defaults to `false`\r\n     * @returns {string|!Array.<string>} Debug string or array of lines if `asArray = true`\r\n     * @expose\r\n     * @example `>00'01 02<03` contains four bytes with `limit=0, markedOffset=1, offset=3`\r\n     * @example `00[01 02 03>` contains four bytes with `offset=markedOffset=1, limit=4`\r\n     * @example `00|01 02 03` contains four bytes with `offset=limit=1, markedOffset=-1`\r\n     * @example `|` contains zero bytes with `offset=limit=0, markedOffset=-1`\r\n     */\r\n    ByteBufferPrototype.toDebug = function(columns) {\r\n        var i = -1,\r\n            k = this.buffer.byteLength,\r\n            b,\r\n            hex = \"\",\r\n            asc = \"\",\r\n            out = \"\";\r\n        while (i<k) {\r\n            if (i !== -1) {\r\n                b = this.view[i];\r\n                if (b < 0x10) hex += \"0\"+b.toString(16).toUpperCase();\r\n                else hex += b.toString(16).toUpperCase();\r\n                if (columns)\r\n                    asc += b > 32 && b < 127 ? String.fromCharCode(b) : '.';\r\n            }\r\n            ++i;\r\n            if (columns) {\r\n                if (i > 0 && i % 16 === 0 && i !== k) {\r\n                    while (hex.length < 3*16+3) hex += \" \";\r\n                    out += hex+asc+\"\\n\";\r\n                    hex = asc = \"\";\r\n                }\r\n            }\r\n            if (i === this.offset && i === this.limit)\r\n                hex += i === this.markedOffset ? \"!\" : \"|\";\r\n            else if (i === this.offset)\r\n                hex += i === this.markedOffset ? \"[\" : \"<\";\r\n            else if (i === this.limit)\r\n                hex += i === this.markedOffset ? \"]\" : \">\";\r\n            else\r\n                hex += i === this.markedOffset ? \"'\" : (columns || (i !== 0 && i !== k) ? \" \" : \"\");\r\n        }\r\n        if (columns && hex !== \" \") {\r\n            while (hex.length < 3*16+3)\r\n                hex += \" \";\r\n            out += hex + asc + \"\\n\";\r\n        }\r\n        return columns ? out : hex;\r\n    };\r\n\r\n    /**\r\n     * Decodes a hex encoded string with marked offsets to a ByteBuffer.\r\n     * @param {string} str Debug string to decode (not be generated with `columns = true`)\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     * @see ByteBuffer#toDebug\r\n     */\r\n    ByteBuffer.fromDebug = function(str, littleEndian, noAssert) {\r\n        var k = str.length,\r\n            bb = new ByteBuffer(((k+1)/3)|0, littleEndian, noAssert);\r\n        var i = 0, j = 0, ch, b,\r\n            rs = false, // Require symbol next\r\n            ho = false, hm = false, hl = false, // Already has offset (ho), markedOffset (hm), limit (hl)?\r\n            fail = false;\r\n        while (i<k) {\r\n            switch (ch = str.charAt(i++)) {\r\n                case '!':\r\n                    if (!noAssert) {\r\n                        if (ho || hm || hl) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        ho = hm = hl = true;\r\n                    }\r\n                    bb.offset = bb.markedOffset = bb.limit = j;\r\n                    rs = false;\r\n                    break;\r\n                case '|':\r\n                    if (!noAssert) {\r\n                        if (ho || hl) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        ho = hl = true;\r\n                    }\r\n                    bb.offset = bb.limit = j;\r\n                    rs = false;\r\n                    break;\r\n                case '[':\r\n                    if (!noAssert) {\r\n                        if (ho || hm) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        ho = hm = true;\r\n                    }\r\n                    bb.offset = bb.markedOffset = j;\r\n                    rs = false;\r\n                    break;\r\n                case '<':\r\n                    if (!noAssert) {\r\n                        if (ho) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        ho = true;\r\n                    }\r\n                    bb.offset = j;\r\n                    rs = false;\r\n                    break;\r\n                case ']':\r\n                    if (!noAssert) {\r\n                        if (hl || hm) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        hl = hm = true;\r\n                    }\r\n                    bb.limit = bb.markedOffset = j;\r\n                    rs = false;\r\n                    break;\r\n                case '>':\r\n                    if (!noAssert) {\r\n                        if (hl) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        hl = true;\r\n                    }\r\n                    bb.limit = j;\r\n                    rs = false;\r\n                    break;\r\n                case \"'\":\r\n                    if (!noAssert) {\r\n                        if (hm) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        hm = true;\r\n                    }\r\n                    bb.markedOffset = j;\r\n                    rs = false;\r\n                    break;\r\n                case ' ':\r\n                    rs = false;\r\n                    break;\r\n                default:\r\n                    if (!noAssert) {\r\n                        if (rs) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    b = parseInt(ch+str.charAt(i++), 16);\r\n                    if (!noAssert) {\r\n                        if (isNaN(b) || b < 0 || b > 255)\r\n                            throw TypeError(\"Illegal str: Not a debug encoded string\");\r\n                    }\r\n                    bb.view[j++] = b;\r\n                    rs = true;\r\n            }\r\n            if (fail)\r\n                throw TypeError(\"Illegal str: Invalid symbol at \"+i);\r\n        }\r\n        if (!noAssert) {\r\n            if (!ho || !hl)\r\n                throw TypeError(\"Illegal str: Missing offset or limit\");\r\n            if (j<bb.buffer.byteLength)\r\n                throw TypeError(\"Illegal str: Not a debug encoded string (is it hex?) \"+j+\" < \"+k);\r\n        }\r\n        return bb;\r\n    };\r\n\r\n    // encodings/hex\r\n\r\n    /**\r\n     * Encodes this ByteBuffer's contents to a hex encoded string.\r\n     * @param {number=} begin Offset to begin at. Defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end Offset to end at. Defaults to {@link ByteBuffer#limit}.\r\n     * @returns {string} Hex encoded string\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toHex = function(begin, end) {\r\n        begin = typeof begin === 'undefined' ? this.offset : begin;\r\n        end = typeof end === 'undefined' ? this.limit : end;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.byteLength)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.byteLength);\n        }\r\n        var out = new Array(end - begin),\r\n            b;\r\n        while (begin < end) {\r\n            b = this.view[begin++];\r\n            if (b < 0x10)\r\n                out.push(\"0\", b.toString(16));\r\n            else out.push(b.toString(16));\r\n        }\r\n        return out.join('');\r\n    };\r\n\r\n    /**\r\n     * Decodes a hex encoded string to a ByteBuffer.\r\n     * @param {string} str String to decode\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     */\r\n    ByteBuffer.fromHex = function(str, littleEndian, noAssert) {\r\n        if (!noAssert) {\r\n            if (typeof str !== 'string')\r\n                throw TypeError(\"Illegal str: Not a string\");\r\n            if (str.length % 2 !== 0)\r\n                throw TypeError(\"Illegal str: Length not a multiple of 2\");\r\n        }\r\n        var k = str.length,\r\n            bb = new ByteBuffer((k / 2) | 0, littleEndian),\r\n            b;\r\n        for (var i=0, j=0; i<k; i+=2) {\r\n            b = parseInt(str.substring(i, i+2), 16);\r\n            if (!noAssert)\r\n                if (!isFinite(b) || b < 0 || b > 255)\r\n                    throw TypeError(\"Illegal str: Contains non-hex characters\");\r\n            bb.view[j++] = b;\r\n        }\r\n        bb.limit = j;\r\n        return bb;\r\n    };\r\n\r\n    // utfx-embeddable\r\n\r\n    /**\r\n     * utfx-embeddable (c) 2014 Daniel Wirtz <dcode@dcode.io>\r\n     * Released under the Apache License, Version 2.0\r\n     * see: https://github.com/dcodeIO/utfx for details\r\n     */\r\n    var utfx = function() {\r\n        \"use strict\";\r\n\r\n        /**\r\n         * utfx namespace.\r\n         * @inner\r\n         * @type {!Object.<string,*>}\r\n         */\r\n        var utfx = {};\r\n\r\n        /**\r\n         * Maximum valid code point.\r\n         * @type {number}\r\n         * @const\r\n         */\r\n        utfx.MAX_CODEPOINT = 0x10FFFF;\r\n\r\n        /**\r\n         * Encodes UTF8 code points to UTF8 bytes.\r\n         * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point\r\n         *  respectively `null` if there are no more code points left or a single numeric code point.\r\n         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte\r\n         */\r\n        utfx.encodeUTF8 = function(src, dst) {\r\n            var cp = null;\r\n            if (typeof src === 'number')\r\n                cp = src,\r\n                src = function() { return null; };\r\n            while (cp !== null || (cp = src()) !== null) {\r\n                if (cp < 0x80)\r\n                    dst(cp&0x7F);\r\n                else if (cp < 0x800)\r\n                    dst(((cp>>6)&0x1F)|0xC0),\r\n                    dst((cp&0x3F)|0x80);\r\n                else if (cp < 0x10000)\r\n                    dst(((cp>>12)&0x0F)|0xE0),\r\n                    dst(((cp>>6)&0x3F)|0x80),\r\n                    dst((cp&0x3F)|0x80);\r\n                else\r\n                    dst(((cp>>18)&0x07)|0xF0),\r\n                    dst(((cp>>12)&0x3F)|0x80),\r\n                    dst(((cp>>6)&0x3F)|0x80),\r\n                    dst((cp&0x3F)|0x80);\r\n                cp = null;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Decodes UTF8 bytes to UTF8 code points.\r\n         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if there\r\n         *  are no more bytes left.\r\n         * @param {!function(number)} dst Code points destination as a function successively called with each decoded code point.\r\n         * @throws {RangeError} If a starting byte is invalid in UTF8\r\n         * @throws {Error} If the last sequence is truncated. Has an array property `bytes` holding the\r\n         *  remaining bytes.\r\n         */\r\n        utfx.decodeUTF8 = function(src, dst) {\r\n            var a, b, c, d, fail = function(b) {\r\n                b = b.slice(0, b.indexOf(null));\r\n                var err = Error(b.toString());\r\n                err.name = \"TruncatedError\";\r\n                err['bytes'] = b;\r\n                throw err;\r\n            };\r\n            while ((a = src()) !== null) {\r\n                if ((a&0x80) === 0)\r\n                    dst(a);\r\n                else if ((a&0xE0) === 0xC0)\r\n                    ((b = src()) === null) && fail([a, b]),\r\n                    dst(((a&0x1F)<<6) | (b&0x3F));\r\n                else if ((a&0xF0) === 0xE0)\r\n                    ((b=src()) === null || (c=src()) === null) && fail([a, b, c]),\r\n                    dst(((a&0x0F)<<12) | ((b&0x3F)<<6) | (c&0x3F));\r\n                else if ((a&0xF8) === 0xF0)\r\n                    ((b=src()) === null || (c=src()) === null || (d=src()) === null) && fail([a, b, c ,d]),\r\n                    dst(((a&0x07)<<18) | ((b&0x3F)<<12) | ((c&0x3F)<<6) | (d&0x3F));\r\n                else throw RangeError(\"Illegal starting byte: \"+a);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Converts UTF16 characters to UTF8 code points.\r\n         * @param {!function():number|null} src Characters source as a function returning the next char code respectively\r\n         *  `null` if there are no more characters left.\r\n         * @param {!function(number)} dst Code points destination as a function successively called with each converted code\r\n         *  point.\r\n         */\r\n        utfx.UTF16toUTF8 = function(src, dst) {\r\n            var c1, c2 = null;\r\n            while (true) {\r\n                if ((c1 = c2 !== null ? c2 : src()) === null)\r\n                    break;\r\n                if (c1 >= 0xD800 && c1 <= 0xDFFF) {\r\n                    if ((c2 = src()) !== null) {\r\n                        if (c2 >= 0xDC00 && c2 <= 0xDFFF) {\r\n                            dst((c1-0xD800)*0x400+c2-0xDC00+0x10000);\r\n                            c2 = null; continue;\r\n                        }\r\n                    }\r\n                }\r\n                dst(c1);\r\n            }\r\n            if (c2 !== null) dst(c2);\r\n        };\r\n\r\n        /**\r\n         * Converts UTF8 code points to UTF16 characters.\r\n         * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point\r\n         *  respectively `null` if there are no more code points left or a single numeric code point.\r\n         * @param {!function(number)} dst Characters destination as a function successively called with each converted char code.\r\n         * @throws {RangeError} If a code point is out of range\r\n         */\r\n        utfx.UTF8toUTF16 = function(src, dst) {\r\n            var cp = null;\r\n            if (typeof src === 'number')\r\n                cp = src, src = function() { return null; };\r\n            while (cp !== null || (cp = src()) !== null) {\r\n                if (cp <= 0xFFFF)\r\n                    dst(cp);\r\n                else\r\n                    cp -= 0x10000,\r\n                    dst((cp>>10)+0xD800),\r\n                    dst((cp%0x400)+0xDC00);\r\n                cp = null;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Converts and encodes UTF16 characters to UTF8 bytes.\r\n         * @param {!function():number|null} src Characters source as a function returning the next char code respectively `null`\r\n         *  if there are no more characters left.\r\n         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte.\r\n         */\r\n        utfx.encodeUTF16toUTF8 = function(src, dst) {\r\n            utfx.UTF16toUTF8(src, function(cp) {\r\n                utfx.encodeUTF8(cp, dst);\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Decodes and converts UTF8 bytes to UTF16 characters.\r\n         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if there\r\n         *  are no more bytes left.\r\n         * @param {!function(number)} dst Characters destination as a function successively called with each converted char code.\r\n         * @throws {RangeError} If a starting byte is invalid in UTF8\r\n         * @throws {Error} If the last sequence is truncated. Has an array property `bytes` holding the remaining bytes.\r\n         */\r\n        utfx.decodeUTF8toUTF16 = function(src, dst) {\r\n            utfx.decodeUTF8(src, function(cp) {\r\n                utfx.UTF8toUTF16(cp, dst);\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Calculates the byte length of an UTF8 code point.\r\n         * @param {number} cp UTF8 code point\r\n         * @returns {number} Byte length\r\n         */\r\n        utfx.calculateCodePoint = function(cp) {\r\n            return (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4;\r\n        };\r\n\r\n        /**\r\n         * Calculates the number of UTF8 bytes required to store UTF8 code points.\r\n         * @param {(!function():number|null)} src Code points source as a function returning the next code point respectively\r\n         *  `null` if there are no more code points left.\r\n         * @returns {number} The number of UTF8 bytes required\r\n         */\r\n        utfx.calculateUTF8 = function(src) {\r\n            var cp, l=0;\r\n            while ((cp = src()) !== null)\r\n                l += (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4;\r\n            return l;\r\n        };\r\n\r\n        /**\r\n         * Calculates the number of UTF8 code points respectively UTF8 bytes required to store UTF16 char codes.\r\n         * @param {(!function():number|null)} src Characters source as a function returning the next char code respectively\r\n         *  `null` if there are no more characters left.\r\n         * @returns {!Array.<number>} The number of UTF8 code points at index 0 and the number of UTF8 bytes required at index 1.\r\n         */\r\n        utfx.calculateUTF16asUTF8 = function(src) {\r\n            var n=0, l=0;\r\n            utfx.UTF16toUTF8(src, function(cp) {\r\n                ++n; l += (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4;\r\n            });\r\n            return [n,l];\r\n        };\r\n\r\n        return utfx;\r\n    }();\r\n\r\n    // encodings/utf8\r\n\r\n    /**\r\n     * Encodes this ByteBuffer's contents between {@link ByteBuffer#offset} and {@link ByteBuffer#limit} to an UTF8 encoded\r\n     *  string.\r\n     * @returns {string} Hex encoded string\r\n     * @throws {RangeError} If `offset > limit`\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toUTF8 = function(begin, end) {\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.byteLength)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.byteLength);\n        }\r\n        var sd; try {\r\n            utfx.decodeUTF8toUTF16(function() {\r\n                return begin < end ? this.view[begin++] : null;\r\n            }.bind(this), sd = stringDestination());\r\n        } catch (e) {\r\n            if (begin !== end)\r\n                throw RangeError(\"Illegal range: Truncated data, \"+begin+\" != \"+end);\r\n        }\r\n        return sd();\r\n    };\r\n\r\n    /**\r\n     * Decodes an UTF8 encoded string to a ByteBuffer.\r\n     * @param {string} str String to decode\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     */\r\n    ByteBuffer.fromUTF8 = function(str, littleEndian, noAssert) {\r\n        if (!noAssert)\r\n            if (typeof str !== 'string')\r\n                throw TypeError(\"Illegal str: Not a string\");\r\n        var bb = new ByteBuffer(utfx.calculateUTF16asUTF8(stringSource(str), true)[1], littleEndian, noAssert),\r\n            i = 0;\r\n        utfx.encodeUTF16toUTF8(stringSource(str), function(b) {\r\n            bb.view[i++] = b;\r\n        });\r\n        bb.limit = i;\r\n        return bb;\r\n    };\r\n\r\n    return ByteBuffer;\r\n});\r\n","/*\r\n Copyright 2013 Daniel Wirtz <dcode@dcode.io>\r\n Copyright 2009 The Closure Library Authors. All Rights Reserved.\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS-IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n */\r\n\r\n/**\r\n * @license long.js (c) 2013 Daniel Wirtz <dcode@dcode.io>\r\n * Released under the Apache License, Version 2.0\r\n * see: https://github.com/dcodeIO/long.js for details\r\n */\r\n(function(global, factory) {\r\n\r\n    /* AMD */ if (typeof define === 'function' && define[\"amd\"])\r\n        define([], factory);\r\n    /* CommonJS */ else if (typeof require === 'function' && typeof module === \"object\" && module && module[\"exports\"])\r\n        module[\"exports\"] = factory();\r\n    /* Global */ else\r\n        (global[\"dcodeIO\"] = global[\"dcodeIO\"] || {})[\"Long\"] = factory();\r\n\r\n})(this, function() {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n     *  See the from* functions below for more convenient ways of constructing Longs.\r\n     * @exports Long\r\n     * @class A Long class for representing a 64 bit two's-complement integer value.\r\n     * @param {number} low The low (signed) 32 bits of the long\r\n     * @param {number} high The high (signed) 32 bits of the long\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @constructor\r\n     */\r\n    function Long(low, high, unsigned) {\r\n\r\n        /**\r\n         * The low 32 bits as a signed value.\r\n         * @type {number}\r\n         */\r\n        this.low = low | 0;\r\n\r\n        /**\r\n         * The high 32 bits as a signed value.\r\n         * @type {number}\r\n         */\r\n        this.high = high | 0;\r\n\r\n        /**\r\n         * Whether unsigned or not.\r\n         * @type {boolean}\r\n         */\r\n        this.unsigned = !!unsigned;\r\n    }\r\n\r\n    // The internal representation of a long is the two given signed, 32-bit values.\r\n    // We use 32-bit pieces because these are the size of integers on which\r\n    // Javascript performs bit-operations.  For operations like addition and\r\n    // multiplication, we split each number into 16 bit pieces, which can easily be\r\n    // multiplied within Javascript's floating-point representation without overflow\r\n    // or change in sign.\r\n    //\r\n    // In the algorithms below, we frequently reduce the negative case to the\r\n    // positive case by negating the input(s) and then post-processing the result.\r\n    // Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n    // (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n    // a positive number, it overflows back into a negative).  Not handling this\r\n    // case would often result in infinite recursion.\r\n    //\r\n    // Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n    // methods on which they depend.\r\n\r\n    /**\r\n     * An indicator used to reliably determine if an object is a Long or not.\r\n     * @type {boolean}\r\n     * @const\r\n     * @private\r\n     */\r\n    Long.prototype.__isLong__;\r\n\r\n    Object.defineProperty(Long.prototype, \"__isLong__\", {\r\n        value: true,\r\n        enumerable: false,\r\n        configurable: false\r\n    });\r\n\r\n    /**\r\n     * @function\r\n     * @param {*} obj Object\r\n     * @returns {boolean}\r\n     * @inner\r\n     */\r\n    function isLong(obj) {\r\n        return (obj && obj[\"__isLong__\"]) === true;\r\n    }\r\n\r\n    /**\r\n     * Tests if the specified object is a Long.\r\n     * @function\r\n     * @param {*} obj Object\r\n     * @returns {boolean}\r\n     */\r\n    Long.isLong = isLong;\r\n\r\n    /**\r\n     * A cache of the Long representations of small integer values.\r\n     * @type {!Object}\r\n     * @inner\r\n     */\r\n    var INT_CACHE = {};\r\n\r\n    /**\r\n     * A cache of the Long representations of small unsigned integer values.\r\n     * @type {!Object}\r\n     * @inner\r\n     */\r\n    var UINT_CACHE = {};\r\n\r\n    /**\r\n     * @param {number} value\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromInt(value, unsigned) {\r\n        var obj, cachedObj, cache;\r\n        if (unsigned) {\r\n            value >>>= 0;\r\n            if (cache = (0 <= value && value < 256)) {\r\n                cachedObj = UINT_CACHE[value];\r\n                if (cachedObj)\r\n                    return cachedObj;\r\n            }\r\n            obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n            if (cache)\r\n                UINT_CACHE[value] = obj;\r\n            return obj;\r\n        } else {\r\n            value |= 0;\r\n            if (cache = (-128 <= value && value < 128)) {\r\n                cachedObj = INT_CACHE[value];\r\n                if (cachedObj)\r\n                    return cachedObj;\r\n            }\r\n            obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n            if (cache)\r\n                INT_CACHE[value] = obj;\r\n            return obj;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representing the given 32 bit integer value.\r\n     * @function\r\n     * @param {number} value The 32 bit integer in question\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromInt = fromInt;\r\n\r\n    /**\r\n     * @param {number} value\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromNumber(value, unsigned) {\r\n        if (isNaN(value) || !isFinite(value))\r\n            return unsigned ? UZERO : ZERO;\r\n        if (unsigned) {\r\n            if (value < 0)\r\n                return UZERO;\r\n            if (value >= TWO_PWR_64_DBL)\r\n                return MAX_UNSIGNED_VALUE;\r\n        } else {\r\n            if (value <= -TWO_PWR_63_DBL)\r\n                return MIN_VALUE;\r\n            if (value + 1 >= TWO_PWR_63_DBL)\r\n                return MAX_VALUE;\r\n        }\r\n        if (value < 0)\r\n            return fromNumber(-value, unsigned).neg();\r\n        return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n     * @function\r\n     * @param {number} value The number in question\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromNumber = fromNumber;\r\n\r\n    /**\r\n     * @param {number} lowBits\r\n     * @param {number} highBits\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromBits(lowBits, highBits, unsigned) {\r\n        return new Long(lowBits, highBits, unsigned);\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n     *  assumed to use 32 bits.\r\n     * @function\r\n     * @param {number} lowBits The low 32 bits\r\n     * @param {number} highBits The high 32 bits\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromBits = fromBits;\r\n\r\n    /**\r\n     * @function\r\n     * @param {number} base\r\n     * @param {number} exponent\r\n     * @returns {number}\r\n     * @inner\r\n     */\r\n    var pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n    /**\r\n     * @param {string} str\r\n     * @param {(boolean|number)=} unsigned\r\n     * @param {number=} radix\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromString(str, unsigned, radix) {\r\n        if (str.length === 0)\r\n            throw Error('empty string');\r\n        if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n            return ZERO;\r\n        if (typeof unsigned === 'number') {\r\n            // For goog.math.long compatibility\r\n            radix = unsigned,\r\n            unsigned = false;\r\n        } else {\r\n            unsigned = !! unsigned;\r\n        }\r\n        radix = radix || 10;\r\n        if (radix < 2 || 36 < radix)\r\n            throw RangeError('radix');\r\n\r\n        var p;\r\n        if ((p = str.indexOf('-')) > 0)\r\n            throw Error('interior hyphen');\r\n        else if (p === 0) {\r\n            return fromString(str.substring(1), unsigned, radix).neg();\r\n        }\r\n\r\n        // Do several (8) digits each time through the loop, so as to\r\n        // minimize the calls to the very expensive emulated div.\r\n        var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n        var result = ZERO;\r\n        for (var i = 0; i < str.length; i += 8) {\r\n            var size = Math.min(8, str.length - i),\r\n                value = parseInt(str.substring(i, i + size), radix);\r\n            if (size < 8) {\r\n                var power = fromNumber(pow_dbl(radix, size));\r\n                result = result.mul(power).add(fromNumber(value));\r\n            } else {\r\n                result = result.mul(radixToPower);\r\n                result = result.add(fromNumber(value));\r\n            }\r\n        }\r\n        result.unsigned = unsigned;\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representation of the given string, written using the specified radix.\r\n     * @function\r\n     * @param {string} str The textual representation of the Long\r\n     * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromString = fromString;\r\n\r\n    /**\r\n     * @function\r\n     * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromValue(val) {\r\n        if (val /* is compatible */ instanceof Long)\r\n            return val;\r\n        if (typeof val === 'number')\r\n            return fromNumber(val);\r\n        if (typeof val === 'string')\r\n            return fromString(val);\r\n        // Throws for non-objects, converts non-instanceof Long:\r\n        return fromBits(val.low, val.high, val.unsigned);\r\n    }\r\n\r\n    /**\r\n     * Converts the specified value to a Long.\r\n     * @function\r\n     * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n     * @returns {!Long}\r\n     */\r\n    Long.fromValue = fromValue;\r\n\r\n    // NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n    // no runtime penalty for these.\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_16_DBL = 1 << 16;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_24_DBL = 1 << 24;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var ZERO = fromInt(0);\r\n\r\n    /**\r\n     * Signed zero.\r\n     * @type {!Long}\r\n     */\r\n    Long.ZERO = ZERO;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var UZERO = fromInt(0, true);\r\n\r\n    /**\r\n     * Unsigned zero.\r\n     * @type {!Long}\r\n     */\r\n    Long.UZERO = UZERO;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var ONE = fromInt(1);\r\n\r\n    /**\r\n     * Signed one.\r\n     * @type {!Long}\r\n     */\r\n    Long.ONE = ONE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var UONE = fromInt(1, true);\r\n\r\n    /**\r\n     * Unsigned one.\r\n     * @type {!Long}\r\n     */\r\n    Long.UONE = UONE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var NEG_ONE = fromInt(-1);\r\n\r\n    /**\r\n     * Signed negative one.\r\n     * @type {!Long}\r\n     */\r\n    Long.NEG_ONE = NEG_ONE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n    /**\r\n     * Maximum signed value.\r\n     * @type {!Long}\r\n     */\r\n    Long.MAX_VALUE = MAX_VALUE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n    /**\r\n     * Maximum unsigned value.\r\n     * @type {!Long}\r\n     */\r\n    Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n    /**\r\n     * Minimum signed value.\r\n     * @type {!Long}\r\n     */\r\n    Long.MIN_VALUE = MIN_VALUE;\r\n\r\n    /**\r\n     * @alias Long.prototype\r\n     * @inner\r\n     */\r\n    var LongPrototype = Long.prototype;\r\n\r\n    /**\r\n     * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n     * @returns {number}\r\n     */\r\n    LongPrototype.toInt = function toInt() {\r\n        return this.unsigned ? this.low >>> 0 : this.low;\r\n    };\r\n\r\n    /**\r\n     * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n     * @returns {number}\r\n     */\r\n    LongPrototype.toNumber = function toNumber() {\r\n        if (this.unsigned)\r\n            return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n        return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n    };\r\n\r\n    /**\r\n     * Converts the Long to a string written in the specified radix.\r\n     * @param {number=} radix Radix (2-36), defaults to 10\r\n     * @returns {string}\r\n     * @override\r\n     * @throws {RangeError} If `radix` is out of range\r\n     */\r\n    LongPrototype.toString = function toString(radix) {\r\n        radix = radix || 10;\r\n        if (radix < 2 || 36 < radix)\r\n            throw RangeError('radix');\r\n        if (this.isZero())\r\n            return '0';\r\n        if (this.isNegative()) { // Unsigned Longs are never negative\r\n            if (this.eq(MIN_VALUE)) {\r\n                // We need to change the Long value before it can be negated, so we remove\r\n                // the bottom-most digit in this base and then recurse to do the rest.\r\n                var radixLong = fromNumber(radix),\r\n                    div = this.div(radixLong),\r\n                    rem1 = div.mul(radixLong).sub(this);\r\n                return div.toString(radix) + rem1.toInt().toString(radix);\r\n            } else\r\n                return '-' + this.neg().toString(radix);\r\n        }\r\n\r\n        // Do several (6) digits each time through the loop, so as to\r\n        // minimize the calls to the very expensive emulated div.\r\n        var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n            rem = this;\r\n        var result = '';\r\n        while (true) {\r\n            var remDiv = rem.div(radixToPower),\r\n                intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n                digits = intval.toString(radix);\r\n            rem = remDiv;\r\n            if (rem.isZero())\r\n                return digits + result;\r\n            else {\r\n                while (digits.length < 6)\r\n                    digits = '0' + digits;\r\n                result = '' + digits + result;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Gets the high 32 bits as a signed integer.\r\n     * @returns {number} Signed high bits\r\n     */\r\n    LongPrototype.getHighBits = function getHighBits() {\r\n        return this.high;\r\n    };\r\n\r\n    /**\r\n     * Gets the high 32 bits as an unsigned integer.\r\n     * @returns {number} Unsigned high bits\r\n     */\r\n    LongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n        return this.high >>> 0;\r\n    };\r\n\r\n    /**\r\n     * Gets the low 32 bits as a signed integer.\r\n     * @returns {number} Signed low bits\r\n     */\r\n    LongPrototype.getLowBits = function getLowBits() {\r\n        return this.low;\r\n    };\r\n\r\n    /**\r\n     * Gets the low 32 bits as an unsigned integer.\r\n     * @returns {number} Unsigned low bits\r\n     */\r\n    LongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n        return this.low >>> 0;\r\n    };\r\n\r\n    /**\r\n     * Gets the number of bits needed to represent the absolute value of this Long.\r\n     * @returns {number}\r\n     */\r\n    LongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n        if (this.isNegative()) // Unsigned Longs are never negative\r\n            return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n        var val = this.high != 0 ? this.high : this.low;\r\n        for (var bit = 31; bit > 0; bit--)\r\n            if ((val & (1 << bit)) != 0)\r\n                break;\r\n        return this.high != 0 ? bit + 33 : bit + 1;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals zero.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isZero = function isZero() {\r\n        return this.high === 0 && this.low === 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is negative.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isNegative = function isNegative() {\r\n        return !this.unsigned && this.high < 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is positive.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isPositive = function isPositive() {\r\n        return this.unsigned || this.high >= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is odd.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isOdd = function isOdd() {\r\n        return (this.low & 1) === 1;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is even.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isEven = function isEven() {\r\n        return (this.low & 1) === 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.equals = function equals(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n            return false;\r\n        return this.high === other.high && this.low === other.low;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.eq = LongPrototype.equals;\r\n\r\n    /**\r\n     * Tests if this Long's value differs from the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.notEquals = function notEquals(other) {\r\n        return !this.eq(/* validates */ other);\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.neq = LongPrototype.notEquals;\r\n\r\n    /**\r\n     * Tests if this Long's value is less than the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lessThan = function lessThan(other) {\r\n        return this.comp(/* validates */ other) < 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lt = LongPrototype.lessThan;\r\n\r\n    /**\r\n     * Tests if this Long's value is less than or equal the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n        return this.comp(/* validates */ other) <= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.greaterThan = function greaterThan(other) {\r\n        return this.comp(/* validates */ other) > 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than or equal the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n        return this.comp(/* validates */ other) >= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n    /**\r\n     * Compares this Long's value with the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n     *  if the given one is greater\r\n     */\r\n    LongPrototype.compare = function compare(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        if (this.eq(other))\r\n            return 0;\r\n        var thisNeg = this.isNegative(),\r\n            otherNeg = other.isNegative();\r\n        if (thisNeg && !otherNeg)\r\n            return -1;\r\n        if (!thisNeg && otherNeg)\r\n            return 1;\r\n        // At this point the sign bits are the same\r\n        if (!this.unsigned)\r\n            return this.sub(other).isNegative() ? -1 : 1;\r\n        // Both are positive if at least one is unsigned\r\n        return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n    };\r\n\r\n    /**\r\n     * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n     *  if the given one is greater\r\n     */\r\n    LongPrototype.comp = LongPrototype.compare;\r\n\r\n    /**\r\n     * Negates this Long's value.\r\n     * @returns {!Long} Negated Long\r\n     */\r\n    LongPrototype.negate = function negate() {\r\n        if (!this.unsigned && this.eq(MIN_VALUE))\r\n            return MIN_VALUE;\r\n        return this.not().add(ONE);\r\n    };\r\n\r\n    /**\r\n     * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n     * @function\r\n     * @returns {!Long} Negated Long\r\n     */\r\n    LongPrototype.neg = LongPrototype.negate;\r\n\r\n    /**\r\n     * Returns the sum of this and the specified Long.\r\n     * @param {!Long|number|string} addend Addend\r\n     * @returns {!Long} Sum\r\n     */\r\n    LongPrototype.add = function add(addend) {\r\n        if (!isLong(addend))\r\n            addend = fromValue(addend);\r\n\r\n        // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n        var a48 = this.high >>> 16;\r\n        var a32 = this.high & 0xFFFF;\r\n        var a16 = this.low >>> 16;\r\n        var a00 = this.low & 0xFFFF;\r\n\r\n        var b48 = addend.high >>> 16;\r\n        var b32 = addend.high & 0xFFFF;\r\n        var b16 = addend.low >>> 16;\r\n        var b00 = addend.low & 0xFFFF;\r\n\r\n        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n        c00 += a00 + b00;\r\n        c16 += c00 >>> 16;\r\n        c00 &= 0xFFFF;\r\n        c16 += a16 + b16;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c32 += a32 + b32;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c48 += a48 + b48;\r\n        c48 &= 0xFFFF;\r\n        return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the difference of this and the specified Long.\r\n     * @param {!Long|number|string} subtrahend Subtrahend\r\n     * @returns {!Long} Difference\r\n     */\r\n    LongPrototype.subtract = function subtract(subtrahend) {\r\n        if (!isLong(subtrahend))\r\n            subtrahend = fromValue(subtrahend);\r\n        return this.add(subtrahend.neg());\r\n    };\r\n\r\n    /**\r\n     * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n     * @function\r\n     * @param {!Long|number|string} subtrahend Subtrahend\r\n     * @returns {!Long} Difference\r\n     */\r\n    LongPrototype.sub = LongPrototype.subtract;\r\n\r\n    /**\r\n     * Returns the product of this and the specified Long.\r\n     * @param {!Long|number|string} multiplier Multiplier\r\n     * @returns {!Long} Product\r\n     */\r\n    LongPrototype.multiply = function multiply(multiplier) {\r\n        if (this.isZero())\r\n            return ZERO;\r\n        if (!isLong(multiplier))\r\n            multiplier = fromValue(multiplier);\r\n        if (multiplier.isZero())\r\n            return ZERO;\r\n        if (this.eq(MIN_VALUE))\r\n            return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n        if (multiplier.eq(MIN_VALUE))\r\n            return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n        if (this.isNegative()) {\r\n            if (multiplier.isNegative())\r\n                return this.neg().mul(multiplier.neg());\r\n            else\r\n                return this.neg().mul(multiplier).neg();\r\n        } else if (multiplier.isNegative())\r\n            return this.mul(multiplier.neg()).neg();\r\n\r\n        // If both longs are small, use float multiplication\r\n        if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n            return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n        // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n        // We can skip products that would overflow.\r\n\r\n        var a48 = this.high >>> 16;\r\n        var a32 = this.high & 0xFFFF;\r\n        var a16 = this.low >>> 16;\r\n        var a00 = this.low & 0xFFFF;\r\n\r\n        var b48 = multiplier.high >>> 16;\r\n        var b32 = multiplier.high & 0xFFFF;\r\n        var b16 = multiplier.low >>> 16;\r\n        var b00 = multiplier.low & 0xFFFF;\r\n\r\n        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n        c00 += a00 * b00;\r\n        c16 += c00 >>> 16;\r\n        c00 &= 0xFFFF;\r\n        c16 += a16 * b00;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c16 += a00 * b16;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c32 += a32 * b00;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c32 += a16 * b16;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c32 += a00 * b32;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n        c48 &= 0xFFFF;\r\n        return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n     * @function\r\n     * @param {!Long|number|string} multiplier Multiplier\r\n     * @returns {!Long} Product\r\n     */\r\n    LongPrototype.mul = LongPrototype.multiply;\r\n\r\n    /**\r\n     * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n     *  unsigned if this Long is unsigned.\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Quotient\r\n     */\r\n    LongPrototype.divide = function divide(divisor) {\r\n        if (!isLong(divisor))\r\n            divisor = fromValue(divisor);\r\n        if (divisor.isZero())\r\n            throw Error('division by zero');\r\n        if (this.isZero())\r\n            return this.unsigned ? UZERO : ZERO;\r\n        var approx, rem, res;\r\n        if (!this.unsigned) {\r\n            // This section is only relevant for signed longs and is derived from the\r\n            // closure library as a whole.\r\n            if (this.eq(MIN_VALUE)) {\r\n                if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                    return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n                else if (divisor.eq(MIN_VALUE))\r\n                    return ONE;\r\n                else {\r\n                    // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                    var halfThis = this.shr(1);\r\n                    approx = halfThis.div(divisor).shl(1);\r\n                    if (approx.eq(ZERO)) {\r\n                        return divisor.isNegative() ? ONE : NEG_ONE;\r\n                    } else {\r\n                        rem = this.sub(divisor.mul(approx));\r\n                        res = approx.add(rem.div(divisor));\r\n                        return res;\r\n                    }\r\n                }\r\n            } else if (divisor.eq(MIN_VALUE))\r\n                return this.unsigned ? UZERO : ZERO;\r\n            if (this.isNegative()) {\r\n                if (divisor.isNegative())\r\n                    return this.neg().div(divisor.neg());\r\n                return this.neg().div(divisor).neg();\r\n            } else if (divisor.isNegative())\r\n                return this.div(divisor.neg()).neg();\r\n            res = ZERO;\r\n        } else {\r\n            // The algorithm below has not been made for unsigned longs. It's therefore\r\n            // required to take special care of the MSB prior to running it.\r\n            if (!divisor.unsigned)\r\n                divisor = divisor.toUnsigned();\r\n            if (divisor.gt(this))\r\n                return UZERO;\r\n            if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n                return UONE;\r\n            res = UZERO;\r\n        }\r\n\r\n        // Repeat the following until the remainder is less than other:  find a\r\n        // floating-point that approximates remainder / other *from below*, add this\r\n        // into the result, and subtract it from the remainder.  It is critical that\r\n        // the approximate value is less than or equal to the real value so that the\r\n        // remainder never becomes negative.\r\n        rem = this;\r\n        while (rem.gte(divisor)) {\r\n            // Approximate the result of division. This may be a little greater or\r\n            // smaller than the actual value.\r\n            approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n            // We will tweak the approximate result by changing it in the 48-th digit or\r\n            // the smallest non-fractional digit, whichever is larger.\r\n            var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n                delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n            // Decrease the approximation until it is smaller than the remainder.  Note\r\n            // that if it is too large, the product overflows and is negative.\r\n                approxRes = fromNumber(approx),\r\n                approxRem = approxRes.mul(divisor);\r\n            while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n                approx -= delta;\r\n                approxRes = fromNumber(approx, this.unsigned);\r\n                approxRem = approxRes.mul(divisor);\r\n            }\r\n\r\n            // We know the answer can't be zero... and actually, zero would cause\r\n            // infinite recursion since we would make no progress.\r\n            if (approxRes.isZero())\r\n                approxRes = ONE;\r\n\r\n            res = res.add(approxRes);\r\n            rem = rem.sub(approxRem);\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n     * @function\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Quotient\r\n     */\r\n    LongPrototype.div = LongPrototype.divide;\r\n\r\n    /**\r\n     * Returns this Long modulo the specified.\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Remainder\r\n     */\r\n    LongPrototype.modulo = function modulo(divisor) {\r\n        if (!isLong(divisor))\r\n            divisor = fromValue(divisor);\r\n        return this.sub(this.div(divisor).mul(divisor));\r\n    };\r\n\r\n    /**\r\n     * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n     * @function\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Remainder\r\n     */\r\n    LongPrototype.mod = LongPrototype.modulo;\r\n\r\n    /**\r\n     * Returns the bitwise NOT of this Long.\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.not = function not() {\r\n        return fromBits(~this.low, ~this.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise AND of this Long and the specified.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.and = function and(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise OR of this Long and the specified.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.or = function or(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise XOR of this Long and the given one.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.xor = function xor(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits shifted to the left by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        if ((numBits &= 63) === 0)\r\n            return this;\r\n        else if (numBits < 32)\r\n            return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n        else\r\n            return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n    /**\r\n     * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shiftRight = function shiftRight(numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        if ((numBits &= 63) === 0)\r\n            return this;\r\n        else if (numBits < 32)\r\n            return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n        else\r\n            return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n    /**\r\n     * Returns this Long with bits logically shifted to the right by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        numBits &= 63;\r\n        if (numBits === 0)\r\n            return this;\r\n        else {\r\n            var high = this.high;\r\n            if (numBits < 32) {\r\n                var low = this.low;\r\n                return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n            } else if (numBits === 32)\r\n                return fromBits(high, 0, this.unsigned);\r\n            else\r\n                return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n    /**\r\n     * Converts this Long to signed.\r\n     * @returns {!Long} Signed long\r\n     */\r\n    LongPrototype.toSigned = function toSigned() {\r\n        if (!this.unsigned)\r\n            return this;\r\n        return fromBits(this.low, this.high, false);\r\n    };\r\n\r\n    /**\r\n     * Converts this Long to unsigned.\r\n     * @returns {!Long} Unsigned long\r\n     */\r\n    LongPrototype.toUnsigned = function toUnsigned() {\r\n        if (this.unsigned)\r\n            return this;\r\n        return fromBits(this.low, this.high, true);\r\n    };\r\n\r\n    /**\r\n     * Converts this Long to its byte representation.\r\n     * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n     * @returns {!Array.<number>} Byte representation\r\n     */\r\n    LongPrototype.toBytes = function(le) {\r\n        return le ? this.toBytesLE() : this.toBytesBE();\r\n    }\r\n\r\n    /**\r\n     * Converts this Long to its little endian byte representation.\r\n     * @returns {!Array.<number>} Little endian byte representation\r\n     */\r\n    LongPrototype.toBytesLE = function() {\r\n        var hi = this.high,\r\n            lo = this.low;\r\n        return [\r\n             lo         & 0xff,\r\n            (lo >>>  8) & 0xff,\r\n            (lo >>> 16) & 0xff,\r\n            (lo >>> 24) & 0xff,\r\n             hi         & 0xff,\r\n            (hi >>>  8) & 0xff,\r\n            (hi >>> 16) & 0xff,\r\n            (hi >>> 24) & 0xff\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Converts this Long to its big endian byte representation.\r\n     * @returns {!Array.<number>} Big endian byte representation\r\n     */\r\n    LongPrototype.toBytesBE = function() {\r\n        var hi = this.high,\r\n            lo = this.low;\r\n        return [\r\n            (hi >>> 24) & 0xff,\r\n            (hi >>> 16) & 0xff,\r\n            (hi >>>  8) & 0xff,\r\n             hi         & 0xff,\r\n            (lo >>> 24) & 0xff,\r\n            (lo >>> 16) & 0xff,\r\n            (lo >>>  8) & 0xff,\r\n             lo         & 0xff\r\n        ];\r\n    }\r\n\r\n    return Long;\r\n});\r\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*\r\n Copyright 2013 Daniel Wirtz <dcode@dcode.io>\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n */\r\n\r\n/**\r\n * @license protobuf.js (c) 2013 Daniel Wirtz <dcode@dcode.io>\r\n * Released under the Apache License, Version 2.0\r\n * see: https://github.com/dcodeIO/protobuf.js for details\r\n */\r\n(function(global, factory) {\r\n\r\n    /* AMD */ if (typeof define === 'function' && define[\"amd\"])\r\n        define([\"bytebuffer\"], factory);\r\n    /* CommonJS */ else if (typeof require === \"function\" && typeof module === \"object\" && module && module[\"exports\"])\r\n        module[\"exports\"] = factory(require(\"bytebuffer\"), true);\r\n    /* Global */ else\r\n        (global[\"dcodeIO\"] = global[\"dcodeIO\"] || {})[\"ProtoBuf\"] = factory(global[\"dcodeIO\"][\"ByteBuffer\"]);\r\n\r\n})(this, function(ByteBuffer, isCommonJS) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * The ProtoBuf namespace.\r\n     * @exports ProtoBuf\r\n     * @namespace\r\n     * @expose\r\n     */\r\n    var ProtoBuf = {};\r\n\r\n    /**\r\n     * @type {!function(new: ByteBuffer, ...[*])}\r\n     * @expose\r\n     */\r\n    ProtoBuf.ByteBuffer = ByteBuffer;\r\n\r\n    /**\r\n     * @type {?function(new: Long, ...[*])}\r\n     * @expose\r\n     */\r\n    ProtoBuf.Long = ByteBuffer.Long || null;\r\n\r\n    /**\r\n     * ProtoBuf.js version.\r\n     * @type {string}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ProtoBuf.VERSION = \"5.0.3\";\r\n\r\n    /**\r\n     * Wire types.\r\n     * @type {Object.<string,number>}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ProtoBuf.WIRE_TYPES = {};\r\n\r\n    /**\r\n     * Varint wire type.\r\n     * @type {number}\r\n     * @expose\r\n     */\r\n    ProtoBuf.WIRE_TYPES.VARINT = 0;\r\n\r\n    /**\r\n     * Fixed 64 bits wire type.\r\n     * @type {number}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ProtoBuf.WIRE_TYPES.BITS64 = 1;\r\n\r\n    /**\r\n     * Length delimited wire type.\r\n     * @type {number}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ProtoBuf.WIRE_TYPES.LDELIM = 2;\r\n\r\n    /**\r\n     * Start group wire type.\r\n     * @type {number}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ProtoBuf.WIRE_TYPES.STARTGROUP = 3;\r\n\r\n    /**\r\n     * End group wire type.\r\n     * @type {number}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ProtoBuf.WIRE_TYPES.ENDGROUP = 4;\r\n\r\n    /**\r\n     * Fixed 32 bits wire type.\r\n     * @type {number}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ProtoBuf.WIRE_TYPES.BITS32 = 5;\r\n\r\n    /**\r\n     * Packable wire types.\r\n     * @type {!Array.<number>}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ProtoBuf.PACKABLE_WIRE_TYPES = [\r\n        ProtoBuf.WIRE_TYPES.VARINT,\r\n        ProtoBuf.WIRE_TYPES.BITS64,\r\n        ProtoBuf.WIRE_TYPES.BITS32\r\n    ];\r\n\r\n    /**\r\n     * Types.\r\n     * @dict\r\n     * @type {!Object.<string,{name: string, wireType: number, defaultValue: *}>}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ProtoBuf.TYPES = {\r\n        // According to the protobuf spec.\r\n        \"int32\": {\r\n            name: \"int32\",\r\n            wireType: ProtoBuf.WIRE_TYPES.VARINT,\r\n            defaultValue: 0\r\n        },\r\n        \"uint32\": {\r\n            name: \"uint32\",\r\n            wireType: ProtoBuf.WIRE_TYPES.VARINT,\r\n            defaultValue: 0\r\n        },\r\n        \"sint32\": {\r\n            name: \"sint32\",\r\n            wireType: ProtoBuf.WIRE_TYPES.VARINT,\r\n            defaultValue: 0\r\n        },\r\n        \"int64\": {\r\n            name: \"int64\",\r\n            wireType: ProtoBuf.WIRE_TYPES.VARINT,\r\n            defaultValue: ProtoBuf.Long ? ProtoBuf.Long.ZERO : undefined\r\n        },\r\n        \"uint64\": {\r\n            name: \"uint64\",\r\n            wireType: ProtoBuf.WIRE_TYPES.VARINT,\r\n            defaultValue: ProtoBuf.Long ? ProtoBuf.Long.UZERO : undefined\r\n        },\r\n        \"sint64\": {\r\n            name: \"sint64\",\r\n            wireType: ProtoBuf.WIRE_TYPES.VARINT,\r\n            defaultValue: ProtoBuf.Long ? ProtoBuf.Long.ZERO : undefined\r\n        },\r\n        \"bool\": {\r\n            name: \"bool\",\r\n            wireType: ProtoBuf.WIRE_TYPES.VARINT,\r\n            defaultValue: false\r\n        },\r\n        \"double\": {\r\n            name: \"double\",\r\n            wireType: ProtoBuf.WIRE_TYPES.BITS64,\r\n            defaultValue: 0\r\n        },\r\n        \"string\": {\r\n            name: \"string\",\r\n            wireType: ProtoBuf.WIRE_TYPES.LDELIM,\r\n            defaultValue: \"\"\r\n        },\r\n        \"bytes\": {\r\n            name: \"bytes\",\r\n            wireType: ProtoBuf.WIRE_TYPES.LDELIM,\r\n            defaultValue: null // overridden in the code, must be a unique instance\r\n        },\r\n        \"fixed32\": {\r\n            name: \"fixed32\",\r\n            wireType: ProtoBuf.WIRE_TYPES.BITS32,\r\n            defaultValue: 0\r\n        },\r\n        \"sfixed32\": {\r\n            name: \"sfixed32\",\r\n            wireType: ProtoBuf.WIRE_TYPES.BITS32,\r\n            defaultValue: 0\r\n        },\r\n        \"fixed64\": {\r\n            name: \"fixed64\",\r\n            wireType: ProtoBuf.WIRE_TYPES.BITS64,\r\n            defaultValue:  ProtoBuf.Long ? ProtoBuf.Long.UZERO : undefined\r\n        },\r\n        \"sfixed64\": {\r\n            name: \"sfixed64\",\r\n            wireType: ProtoBuf.WIRE_TYPES.BITS64,\r\n            defaultValue: ProtoBuf.Long ? ProtoBuf.Long.ZERO : undefined\r\n        },\r\n        \"float\": {\r\n            name: \"float\",\r\n            wireType: ProtoBuf.WIRE_TYPES.BITS32,\r\n            defaultValue: 0\r\n        },\r\n        \"enum\": {\r\n            name: \"enum\",\r\n            wireType: ProtoBuf.WIRE_TYPES.VARINT,\r\n            defaultValue: 0\r\n        },\r\n        \"message\": {\r\n            name: \"message\",\r\n            wireType: ProtoBuf.WIRE_TYPES.LDELIM,\r\n            defaultValue: null\r\n        },\r\n        \"group\": {\r\n            name: \"group\",\r\n            wireType: ProtoBuf.WIRE_TYPES.STARTGROUP,\r\n            defaultValue: null\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Valid map key types.\r\n     * @type {!Array.<!Object.<string,{name: string, wireType: number, defaultValue: *}>>}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ProtoBuf.MAP_KEY_TYPES = [\r\n        ProtoBuf.TYPES[\"int32\"],\r\n        ProtoBuf.TYPES[\"sint32\"],\r\n        ProtoBuf.TYPES[\"sfixed32\"],\r\n        ProtoBuf.TYPES[\"uint32\"],\r\n        ProtoBuf.TYPES[\"fixed32\"],\r\n        ProtoBuf.TYPES[\"int64\"],\r\n        ProtoBuf.TYPES[\"sint64\"],\r\n        ProtoBuf.TYPES[\"sfixed64\"],\r\n        ProtoBuf.TYPES[\"uint64\"],\r\n        ProtoBuf.TYPES[\"fixed64\"],\r\n        ProtoBuf.TYPES[\"bool\"],\r\n        ProtoBuf.TYPES[\"string\"],\r\n        ProtoBuf.TYPES[\"bytes\"]\r\n    ];\r\n\r\n    /**\r\n     * Minimum field id.\r\n     * @type {number}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ProtoBuf.ID_MIN = 1;\r\n\r\n    /**\r\n     * Maximum field id.\r\n     * @type {number}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ProtoBuf.ID_MAX = 0x1FFFFFFF;\r\n\r\n    /**\r\n     * If set to `true`, field names will be converted from underscore notation to camel case. Defaults to `false`.\r\n     *  Must be set prior to parsing.\r\n     * @type {boolean}\r\n     * @expose\r\n     */\r\n    ProtoBuf.convertFieldsToCamelCase = false;\r\n\r\n    /**\r\n     * By default, messages are populated with (setX, set_x) accessors for each field. This can be disabled by\r\n     *  setting this to `false` prior to building messages.\r\n     * @type {boolean}\r\n     * @expose\r\n     */\r\n    ProtoBuf.populateAccessors = true;\r\n\r\n    /**\r\n     * By default, messages are populated with default values if a field is not present on the wire. To disable\r\n     *  this behavior, set this setting to `false`.\r\n     * @type {boolean}\r\n     * @expose\r\n     */\r\n    ProtoBuf.populateDefaults = true;\r\n\r\n    /**\r\n     * @alias ProtoBuf.Util\r\n     * @expose\r\n     */\r\n    ProtoBuf.Util = (function() {\r\n        \"use strict\";\r\n\r\n        /**\r\n         * ProtoBuf utilities.\r\n         * @exports ProtoBuf.Util\r\n         * @namespace\r\n         */\r\n        var Util = {};\r\n\r\n        /**\r\n         * Flag if running in node or not.\r\n         * @type {boolean}\r\n         * @const\r\n         * @expose\r\n         */\r\n        Util.IS_NODE = !!(\r\n            typeof process === 'object' && process+'' === '[object process]' && !process['browser']\r\n        );\r\n\r\n        /**\r\n         * Constructs a XMLHttpRequest object.\r\n         * @return {XMLHttpRequest}\r\n         * @throws {Error} If XMLHttpRequest is not supported\r\n         * @expose\r\n         */\r\n        Util.XHR = function() {\r\n            // No dependencies please, ref: http://www.quirksmode.org/js/xmlhttp.html\r\n            var XMLHttpFactories = [\r\n                function () {return new XMLHttpRequest()},\r\n                function () {return new ActiveXObject(\"Msxml2.XMLHTTP\")},\r\n                function () {return new ActiveXObject(\"Msxml3.XMLHTTP\")},\r\n                function () {return new ActiveXObject(\"Microsoft.XMLHTTP\")}\r\n            ];\r\n            /** @type {?XMLHttpRequest} */\r\n            var xhr = null;\r\n            for (var i=0;i<XMLHttpFactories.length;i++) {\r\n                try { xhr = XMLHttpFactories[i](); }\r\n                catch (e) { continue; }\r\n                break;\r\n            }\r\n            if (!xhr)\r\n                throw Error(\"XMLHttpRequest is not supported\");\r\n            return xhr;\r\n        };\r\n\r\n        /**\r\n         * Fetches a resource.\r\n         * @param {string} path Resource path\r\n         * @param {function(?string)=} callback Callback receiving the resource's contents. If omitted the resource will\r\n         *   be fetched synchronously. If the request failed, contents will be null.\r\n         * @return {?string|undefined} Resource contents if callback is omitted (null if the request failed), else undefined.\r\n         * @expose\r\n         */\r\n        Util.fetch = function(path, callback) {\r\n            if (callback && typeof callback != 'function')\r\n                callback = null;\r\n            if (Util.IS_NODE) {\r\n                var fs = require(\"fs\");\r\n                if (callback) {\r\n                    fs.readFile(path, function(err, data) {\r\n                        if (err)\r\n                            callback(null);\r\n                        else\r\n                            callback(\"\"+data);\r\n                    });\r\n                } else\r\n                    try {\r\n                        return fs.readFileSync(path);\r\n                    } catch (e) {\r\n                        return null;\r\n                    }\r\n            } else {\r\n                var xhr = Util.XHR();\r\n                xhr.open('GET', path, callback ? true : false);\r\n                // xhr.setRequestHeader('User-Agent', 'XMLHTTP/1.0');\r\n                xhr.setRequestHeader('Accept', 'text/plain');\r\n                if (typeof xhr.overrideMimeType === 'function') xhr.overrideMimeType('text/plain');\r\n                if (callback) {\r\n                    xhr.onreadystatechange = function() {\r\n                        if (xhr.readyState != 4) return;\r\n                        if (/* remote */ xhr.status == 200 || /* local */ (xhr.status == 0 && typeof xhr.responseText === 'string'))\r\n                            callback(xhr.responseText);\r\n                        else\r\n                            callback(null);\r\n                    };\r\n                    if (xhr.readyState == 4)\r\n                        return;\r\n                    xhr.send(null);\r\n                } else {\r\n                    xhr.send(null);\r\n                    if (/* remote */ xhr.status == 200 || /* local */ (xhr.status == 0 && typeof xhr.responseText === 'string'))\r\n                        return xhr.responseText;\r\n                    return null;\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Converts a string to camel case.\r\n         * @param {string} str\r\n         * @returns {string}\r\n         * @expose\r\n         */\r\n        Util.toCamelCase = function(str) {\r\n            return str.replace(/_([a-zA-Z])/g, function ($0, $1) {\r\n                return $1.toUpperCase();\r\n            });\r\n        };\r\n\r\n        return Util;\r\n    })();\r\n\r\n    /**\r\n     * Language expressions.\r\n     * @type {!Object.<string,!RegExp>}\r\n     * @expose\r\n     */\r\n    ProtoBuf.Lang = {\r\n\r\n        // Characters always ending a statement\r\n        DELIM: /[\\s\\{\\}=;:\\[\\],'\"\\(\\)<>]/g,\r\n\r\n        // Field rules\r\n        RULE: /^(?:required|optional|repeated|map)$/,\r\n\r\n        // Field types\r\n        TYPE: /^(?:double|float|int32|uint32|sint32|int64|uint64|sint64|fixed32|sfixed32|fixed64|sfixed64|bool|string|bytes)$/,\r\n\r\n        // Names\r\n        NAME: /^[a-zA-Z_][a-zA-Z_0-9]*$/,\r\n\r\n        // Type definitions\r\n        TYPEDEF: /^[a-zA-Z][a-zA-Z_0-9]*$/,\r\n\r\n        // Type references\r\n        TYPEREF: /^(?:\\.?[a-zA-Z_][a-zA-Z_0-9]*)(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)*$/,\r\n\r\n        // Fully qualified type references\r\n        FQTYPEREF: /^(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)+$/,\r\n\r\n        // All numbers\r\n        NUMBER: /^-?(?:[1-9][0-9]*|0|0[xX][0-9a-fA-F]+|0[0-7]+|([0-9]*(\\.[0-9]*)?([Ee][+-]?[0-9]+)?)|inf|nan)$/,\r\n\r\n        // Decimal numbers\r\n        NUMBER_DEC: /^(?:[1-9][0-9]*|0)$/,\r\n\r\n        // Hexadecimal numbers\r\n        NUMBER_HEX: /^0[xX][0-9a-fA-F]+$/,\r\n\r\n        // Octal numbers\r\n        NUMBER_OCT: /^0[0-7]+$/,\r\n\r\n        // Floating point numbers\r\n        NUMBER_FLT: /^([0-9]*(\\.[0-9]*)?([Ee][+-]?[0-9]+)?|inf|nan)$/,\r\n\r\n        // Booleans\r\n        BOOL: /^(?:true|false)$/i,\r\n\r\n        // Id numbers\r\n        ID: /^(?:[1-9][0-9]*|0|0[xX][0-9a-fA-F]+|0[0-7]+)$/,\r\n\r\n        // Negative id numbers (enum values)\r\n        NEGID: /^\\-?(?:[1-9][0-9]*|0|0[xX][0-9a-fA-F]+|0[0-7]+)$/,\r\n\r\n        // Whitespaces\r\n        WHITESPACE: /\\s/,\r\n\r\n        // All strings\r\n        STRING: /(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")|(?:'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')/g,\r\n\r\n        // Double quoted strings\r\n        STRING_DQ: /(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")/g,\r\n\r\n        // Single quoted strings\r\n        STRING_SQ: /(?:'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')/g\r\n    };\r\n\r\n    /**\r\n     * @alias ProtoBuf.DotProto\r\n     * @expose\r\n     */\r\n    ProtoBuf.DotProto = (function(ProtoBuf, Lang) {\r\n        \"use strict\";\r\n\r\n        /**\r\n         * Utilities to parse .proto files.\r\n         * @exports ProtoBuf.DotProto\r\n         * @namespace\r\n         */\r\n        var DotProto = {};\r\n\r\n        /**\r\n         * Constructs a new Tokenizer.\r\n         * @exports ProtoBuf.DotProto.Tokenizer\r\n         * @class prototype tokenizer\r\n         * @param {string} proto Proto to tokenize\r\n         * @constructor\r\n         */\r\n        var Tokenizer = function(proto) {\r\n\r\n            /**\r\n             * Source to parse.\r\n             * @type {string}\r\n             * @expose\r\n             */\r\n            this.source = proto+\"\";\r\n\r\n            /**\r\n             * Current index.\r\n             * @type {number}\r\n             * @expose\r\n             */\r\n            this.index = 0;\r\n\r\n            /**\r\n             * Current line.\r\n             * @type {number}\r\n             * @expose\r\n             */\r\n            this.line = 1;\r\n\r\n            /**\r\n             * Token stack.\r\n             * @type {!Array.<string>}\r\n             * @expose\r\n             */\r\n            this.stack = [];\r\n\r\n            /**\r\n             * Opening character of the current string read, if any.\r\n             * @type {?string}\r\n             * @private\r\n             */\r\n            this._stringOpen = null;\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.DotProto.Tokenizer.prototype\r\n         * @inner\r\n         */\r\n        var TokenizerPrototype = Tokenizer.prototype;\r\n\r\n        /**\r\n         * Reads a string beginning at the current index.\r\n         * @return {string}\r\n         * @private\r\n         */\r\n        TokenizerPrototype._readString = function() {\r\n            var re = this._stringOpen === '\"'\r\n                ? Lang.STRING_DQ\r\n                : Lang.STRING_SQ;\r\n            re.lastIndex = this.index - 1; // Include the open quote\r\n            var match = re.exec(this.source);\r\n            if (!match)\r\n                throw Error(\"unterminated string\");\r\n            this.index = re.lastIndex;\r\n            this.stack.push(this._stringOpen);\r\n            this._stringOpen = null;\r\n            return match[1];\r\n        };\r\n\r\n        /**\r\n         * Gets the next token and advances by one.\r\n         * @return {?string} Token or `null` on EOF\r\n         * @expose\r\n         */\r\n        TokenizerPrototype.next = function() {\r\n            if (this.stack.length > 0)\r\n                return this.stack.shift();\r\n            if (this.index >= this.source.length)\r\n                return null;\r\n            if (this._stringOpen !== null)\r\n                return this._readString();\r\n\r\n            var repeat,\r\n                prev,\r\n                next;\r\n            do {\r\n                repeat = false;\r\n\r\n                // Strip white spaces\r\n                while (Lang.WHITESPACE.test(next = this.source.charAt(this.index))) {\r\n                    if (next === '\\n')\r\n                        ++this.line;\r\n                    if (++this.index === this.source.length)\r\n                        return null;\r\n                }\r\n\r\n                // Strip comments\r\n                if (this.source.charAt(this.index) === '/') {\r\n                    ++this.index;\r\n                    if (this.source.charAt(this.index) === '/') { // Line\r\n                        while (this.source.charAt(++this.index) !== '\\n')\r\n                            if (this.index == this.source.length)\r\n                                return null;\r\n                        ++this.index;\r\n                        ++this.line;\r\n                        repeat = true;\r\n                    } else if ((next = this.source.charAt(this.index)) === '*') { /* Block */\r\n                        do {\r\n                            if (next === '\\n')\r\n                                ++this.line;\r\n                            if (++this.index === this.source.length)\r\n                                return null;\r\n                            prev = next;\r\n                            next = this.source.charAt(this.index);\r\n                        } while (prev !== '*' || next !== '/');\r\n                        ++this.index;\r\n                        repeat = true;\r\n                    } else\r\n                        return '/';\r\n                }\r\n            } while (repeat);\r\n\r\n            if (this.index === this.source.length)\r\n                return null;\r\n\r\n            // Read the next token\r\n            var end = this.index;\r\n            Lang.DELIM.lastIndex = 0;\r\n            var delim = Lang.DELIM.test(this.source.charAt(end++));\r\n            if (!delim)\r\n                while(end < this.source.length && !Lang.DELIM.test(this.source.charAt(end)))\r\n                    ++end;\r\n            var token = this.source.substring(this.index, this.index = end);\r\n            if (token === '\"' || token === \"'\")\r\n                this._stringOpen = token;\r\n            return token;\r\n        };\r\n\r\n        /**\r\n         * Peeks for the next token.\r\n         * @return {?string} Token or `null` on EOF\r\n         * @expose\r\n         */\r\n        TokenizerPrototype.peek = function() {\r\n            if (this.stack.length === 0) {\r\n                var token = this.next();\r\n                if (token === null)\r\n                    return null;\r\n                this.stack.push(token);\r\n            }\r\n            return this.stack[0];\r\n        };\r\n\r\n        /**\r\n         * Skips a specific token and throws if it differs.\r\n         * @param {string} expected Expected token\r\n         * @throws {Error} If the actual token differs\r\n         */\r\n        TokenizerPrototype.skip = function(expected) {\r\n            var actual = this.next();\r\n            if (actual !== expected)\r\n                throw Error(\"illegal '\"+actual+\"', '\"+expected+\"' expected\");\r\n        };\r\n\r\n        /**\r\n         * Omits an optional token.\r\n         * @param {string} expected Expected optional token\r\n         * @returns {boolean} `true` if the token exists\r\n         */\r\n        TokenizerPrototype.omit = function(expected) {\r\n            if (this.peek() === expected) {\r\n                this.next();\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n\r\n        /**\r\n         * Returns a string representation of this object.\r\n         * @return {string} String representation as of \"Tokenizer(index/length)\"\r\n         * @expose\r\n         */\r\n        TokenizerPrototype.toString = function() {\r\n            return \"Tokenizer (\"+this.index+\"/\"+this.source.length+\" at line \"+this.line+\")\";\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.DotProto.Tokenizer\r\n         * @expose\r\n         */\r\n        DotProto.Tokenizer = Tokenizer;\r\n\r\n        /**\r\n         * Constructs a new Parser.\r\n         * @exports ProtoBuf.DotProto.Parser\r\n         * @class prototype parser\r\n         * @param {string} source Source\r\n         * @constructor\r\n         */\r\n        var Parser = function(source) {\r\n\r\n            /**\r\n             * Tokenizer.\r\n             * @type {!ProtoBuf.DotProto.Tokenizer}\r\n             * @expose\r\n             */\r\n            this.tn = new Tokenizer(source);\r\n\r\n            /**\r\n             * Whether parsing proto3 or not.\r\n             * @type {boolean}\r\n             */\r\n            this.proto3 = false;\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.DotProto.Parser.prototype\r\n         * @inner\r\n         */\r\n        var ParserPrototype = Parser.prototype;\r\n\r\n        /**\r\n         * Parses the source.\r\n         * @returns {!Object}\r\n         * @throws {Error} If the source cannot be parsed\r\n         * @expose\r\n         */\r\n        ParserPrototype.parse = function() {\r\n            var topLevel = {\r\n                \"name\": \"[ROOT]\", // temporary\r\n                \"package\": null,\r\n                \"messages\": [],\r\n                \"enums\": [],\r\n                \"imports\": [],\r\n                \"options\": {},\r\n                \"services\": []\r\n                // \"syntax\": undefined\r\n            };\r\n            var token,\r\n                head = true,\r\n                weak;\r\n            try {\r\n                while (token = this.tn.next()) {\r\n                    switch (token) {\r\n                        case 'package':\r\n                            if (!head || topLevel[\"package\"] !== null)\r\n                                throw Error(\"unexpected 'package'\");\r\n                            token = this.tn.next();\r\n                            if (!Lang.TYPEREF.test(token))\r\n                                throw Error(\"illegal package name: \" + token);\r\n                            this.tn.skip(\";\");\r\n                            topLevel[\"package\"] = token;\r\n                            break;\r\n                        case 'import':\r\n                            if (!head)\r\n                                throw Error(\"unexpected 'import'\");\r\n                            token = this.tn.peek();\r\n                            if (token === \"public\" || (weak = token === \"weak\")) // token ignored\r\n                                this.tn.next();\r\n                            token = this._readString();\r\n                            this.tn.skip(\";\");\r\n                            if (!weak) // import ignored\r\n                                topLevel[\"imports\"].push(token);\r\n                            break;\r\n                        case 'syntax':\r\n                            if (!head)\r\n                                throw Error(\"unexpected 'syntax'\");\r\n                            this.tn.skip(\"=\");\r\n                            if ((topLevel[\"syntax\"] = this._readString()) === \"proto3\")\r\n                                this.proto3 = true;\r\n                            this.tn.skip(\";\");\r\n                            break;\r\n                        case 'message':\r\n                            this._parseMessage(topLevel, null);\r\n                            head = false;\r\n                            break;\r\n                        case 'enum':\r\n                            this._parseEnum(topLevel);\r\n                            head = false;\r\n                            break;\r\n                        case 'option':\r\n                            this._parseOption(topLevel);\r\n                            break;\r\n                        case 'service':\r\n                            this._parseService(topLevel);\r\n                            break;\r\n                        case 'extend':\r\n                            this._parseExtend(topLevel);\r\n                            break;\r\n                        default:\r\n                            throw Error(\"unexpected '\" + token + \"'\");\r\n                    }\r\n                }\r\n            } catch (e) {\r\n                e.message = \"Parse error at line \"+this.tn.line+\": \" + e.message;\r\n                throw e;\r\n            }\r\n            delete topLevel[\"name\"];\r\n            return topLevel;\r\n        };\r\n\r\n        /**\r\n         * Parses the specified source.\r\n         * @returns {!Object}\r\n         * @throws {Error} If the source cannot be parsed\r\n         * @expose\r\n         */\r\n        Parser.parse = function(source) {\r\n            return new Parser(source).parse();\r\n        };\r\n\r\n        // ----- Conversion ------\r\n\r\n        /**\r\n         * Converts a numerical string to an id.\r\n         * @param {string} value\r\n         * @param {boolean=} mayBeNegative\r\n         * @returns {number}\r\n         * @inner\r\n         */\r\n        function mkId(value, mayBeNegative) {\r\n            var id = -1,\r\n                sign = 1;\r\n            if (value.charAt(0) == '-') {\r\n                sign = -1;\r\n                value = value.substring(1);\r\n            }\r\n            if (Lang.NUMBER_DEC.test(value))\r\n                id = parseInt(value);\r\n            else if (Lang.NUMBER_HEX.test(value))\r\n                id = parseInt(value.substring(2), 16);\r\n            else if (Lang.NUMBER_OCT.test(value))\r\n                id = parseInt(value.substring(1), 8);\r\n            else\r\n                throw Error(\"illegal id value: \" + (sign < 0 ? '-' : '') + value);\r\n            id = (sign*id)|0; // Force to 32bit\r\n            if (!mayBeNegative && id < 0)\r\n                throw Error(\"illegal id value: \" + (sign < 0 ? '-' : '') + value);\r\n            return id;\r\n        }\r\n\r\n        /**\r\n         * Converts a numerical string to a number.\r\n         * @param {string} val\r\n         * @returns {number}\r\n         * @inner\r\n         */\r\n        function mkNumber(val) {\r\n            var sign = 1;\r\n            if (val.charAt(0) == '-') {\r\n                sign = -1;\r\n                val = val.substring(1);\r\n            }\r\n            if (Lang.NUMBER_DEC.test(val))\r\n                return sign * parseInt(val, 10);\r\n            else if (Lang.NUMBER_HEX.test(val))\r\n                return sign * parseInt(val.substring(2), 16);\r\n            else if (Lang.NUMBER_OCT.test(val))\r\n                return sign * parseInt(val.substring(1), 8);\r\n            else if (val === 'inf')\r\n                return sign * Infinity;\r\n            else if (val === 'nan')\r\n                return NaN;\r\n            else if (Lang.NUMBER_FLT.test(val))\r\n                return sign * parseFloat(val);\r\n            throw Error(\"illegal number value: \" + (sign < 0 ? '-' : '') + val);\r\n        }\r\n\r\n        // ----- Reading ------\r\n\r\n        /**\r\n         * Reads a string.\r\n         * @returns {string}\r\n         * @private\r\n         */\r\n        ParserPrototype._readString = function() {\r\n            var value = \"\",\r\n                token,\r\n                delim;\r\n            do {\r\n                delim = this.tn.next();\r\n                if (delim !== \"'\" && delim !== '\"')\r\n                    throw Error(\"illegal string delimiter: \"+delim);\r\n                value += this.tn.next();\r\n                this.tn.skip(delim);\r\n                token = this.tn.peek();\r\n            } while (token === '\"' || token === '\"'); // multi line?\r\n            return value;\r\n        };\r\n\r\n        /**\r\n         * Reads a value.\r\n         * @param {boolean=} mayBeTypeRef\r\n         * @returns {number|boolean|string}\r\n         * @private\r\n         */\r\n        ParserPrototype._readValue = function(mayBeTypeRef) {\r\n            var token = this.tn.peek(),\r\n                value;\r\n            if (token === '\"' || token === \"'\")\r\n                return this._readString();\r\n            this.tn.next();\r\n            if (Lang.NUMBER.test(token))\r\n                return mkNumber(token);\r\n            if (Lang.BOOL.test(token))\r\n                return (token.toLowerCase() === 'true');\r\n            if (mayBeTypeRef && Lang.TYPEREF.test(token))\r\n                return token;\r\n            throw Error(\"illegal value: \"+token);\r\n\r\n        };\r\n\r\n        // ----- Parsing constructs -----\r\n\r\n        /**\r\n         * Parses a namespace option.\r\n         * @param {!Object} parent Parent definition\r\n         * @param {boolean=} isList\r\n         * @private\r\n         */\r\n        ParserPrototype._parseOption = function(parent, isList) {\r\n            var token = this.tn.next(),\r\n                custom = false;\r\n            if (token === '(') {\r\n                custom = true;\r\n                token = this.tn.next();\r\n            }\r\n            if (!Lang.TYPEREF.test(token))\r\n                // we can allow options of the form google.protobuf.* since they will just get ignored anyways\r\n                // if (!/google\\.protobuf\\./.test(token)) // FIXME: Why should that not be a valid typeref?\r\n                    throw Error(\"illegal option name: \"+token);\r\n            var name = token;\r\n            if (custom) { // (my_method_option).foo, (my_method_option), some_method_option, (foo.my_option).bar\r\n                this.tn.skip(')');\r\n                name = '('+name+')';\r\n                token = this.tn.peek();\r\n                if (Lang.FQTYPEREF.test(token)) {\r\n                    name += token;\r\n                    this.tn.next();\r\n                }\r\n            }\r\n            this.tn.skip('=');\r\n            this._parseOptionValue(parent, name);\r\n            if (!isList)\r\n                this.tn.skip(\";\");\r\n        };\r\n\r\n        /**\r\n         * Sets an option on the specified options object.\r\n         * @param {!Object.<string,*>} options\r\n         * @param {string} name\r\n         * @param {string|number|boolean} value\r\n         * @inner\r\n         */\r\n        function setOption(options, name, value) {\r\n            if (typeof options[name] === 'undefined')\r\n                options[name] = value;\r\n            else {\r\n                if (!Array.isArray(options[name]))\r\n                    options[name] = [ options[name] ];\r\n                options[name].push(value);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Parses an option value.\r\n         * @param {!Object} parent\r\n         * @param {string} name\r\n         * @private\r\n         */\r\n        ParserPrototype._parseOptionValue = function(parent, name) {\r\n            var token = this.tn.peek();\r\n            if (token !== '{') { // Plain value\r\n                setOption(parent[\"options\"], name, this._readValue(true));\r\n            } else { // Aggregate options\r\n                this.tn.skip(\"{\");\r\n                while ((token = this.tn.next()) !== '}') {\r\n                    if (!Lang.NAME.test(token))\r\n                        throw Error(\"illegal option name: \" + name + \".\" + token);\r\n                    if (this.tn.omit(\":\"))\r\n                        setOption(parent[\"options\"], name + \".\" + token, this._readValue(true));\r\n                    else\r\n                        this._parseOptionValue(parent, name + \".\" + token);\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Parses a service definition.\r\n         * @param {!Object} parent Parent definition\r\n         * @private\r\n         */\r\n        ParserPrototype._parseService = function(parent) {\r\n            var token = this.tn.next();\r\n            if (!Lang.NAME.test(token))\r\n                throw Error(\"illegal service name at line \"+this.tn.line+\": \"+token);\r\n            var name = token;\r\n            var svc = {\r\n                \"name\": name,\r\n                \"rpc\": {},\r\n                \"options\": {}\r\n            };\r\n            this.tn.skip(\"{\");\r\n            while ((token = this.tn.next()) !== '}') {\r\n                if (token === \"option\")\r\n                    this._parseOption(svc);\r\n                else if (token === 'rpc')\r\n                    this._parseServiceRPC(svc);\r\n                else\r\n                    throw Error(\"illegal service token: \"+token);\r\n            }\r\n            this.tn.omit(\";\");\r\n            parent[\"services\"].push(svc);\r\n        };\r\n\r\n        /**\r\n         * Parses a RPC service definition of the form ['rpc', name, (request), 'returns', (response)].\r\n         * @param {!Object} svc Service definition\r\n         * @private\r\n         */\r\n        ParserPrototype._parseServiceRPC = function(svc) {\r\n            var type = \"rpc\",\r\n                token = this.tn.next();\r\n            if (!Lang.NAME.test(token))\r\n                throw Error(\"illegal rpc service method name: \"+token);\r\n            var name = token;\r\n            var method = {\r\n                \"request\": null,\r\n                \"response\": null,\r\n                \"request_stream\": false,\r\n                \"response_stream\": false,\r\n                \"options\": {}\r\n            };\r\n            this.tn.skip(\"(\");\r\n            token = this.tn.next();\r\n            if (token.toLowerCase() === \"stream\") {\r\n              method[\"request_stream\"] = true;\r\n              token = this.tn.next();\r\n            }\r\n            if (!Lang.TYPEREF.test(token))\r\n                throw Error(\"illegal rpc service request type: \"+token);\r\n            method[\"request\"] = token;\r\n            this.tn.skip(\")\");\r\n            token = this.tn.next();\r\n            if (token.toLowerCase() !== \"returns\")\r\n                throw Error(\"illegal rpc service request type delimiter: \"+token);\r\n            this.tn.skip(\"(\");\r\n            token = this.tn.next();\r\n            if (token.toLowerCase() === \"stream\") {\r\n              method[\"response_stream\"] = true;\r\n              token = this.tn.next();\r\n            }\r\n            method[\"response\"] = token;\r\n            this.tn.skip(\")\");\r\n            token = this.tn.peek();\r\n            if (token === '{') {\r\n                this.tn.next();\r\n                while ((token = this.tn.next()) !== '}') {\r\n                    if (token === 'option')\r\n                        this._parseOption(method);\r\n                    else\r\n                        throw Error(\"illegal rpc service token: \" + token);\r\n                }\r\n                this.tn.omit(\";\");\r\n            } else\r\n                this.tn.skip(\";\");\r\n            if (typeof svc[type] === 'undefined')\r\n                svc[type] = {};\r\n            svc[type][name] = method;\r\n        };\r\n\r\n        /**\r\n         * Parses a message definition.\r\n         * @param {!Object} parent Parent definition\r\n         * @param {!Object=} fld Field definition if this is a group\r\n         * @returns {!Object}\r\n         * @private\r\n         */\r\n        ParserPrototype._parseMessage = function(parent, fld) {\r\n            var isGroup = !!fld,\r\n                token = this.tn.next();\r\n            var msg = {\r\n                \"name\": \"\",\r\n                \"fields\": [],\r\n                \"enums\": [],\r\n                \"messages\": [],\r\n                \"options\": {},\r\n                \"services\": [],\r\n                \"oneofs\": {}\r\n                // \"extensions\": undefined\r\n            };\r\n            if (!Lang.NAME.test(token))\r\n                throw Error(\"illegal \"+(isGroup ? \"group\" : \"message\")+\" name: \"+token);\r\n            msg[\"name\"] = token;\r\n            if (isGroup) {\r\n                this.tn.skip(\"=\");\r\n                fld[\"id\"] = mkId(this.tn.next());\r\n                msg[\"isGroup\"] = true;\r\n            }\r\n            token = this.tn.peek();\r\n            if (token === '[' && fld)\r\n                this._parseFieldOptions(fld);\r\n            this.tn.skip(\"{\");\r\n            while ((token = this.tn.next()) !== '}') {\r\n                if (Lang.RULE.test(token))\r\n                    this._parseMessageField(msg, token);\r\n                else if (token === \"oneof\")\r\n                    this._parseMessageOneOf(msg);\r\n                else if (token === \"enum\")\r\n                    this._parseEnum(msg);\r\n                else if (token === \"message\")\r\n                    this._parseMessage(msg);\r\n                else if (token === \"option\")\r\n                    this._parseOption(msg);\r\n                else if (token === \"service\")\r\n                    this._parseService(msg);\r\n                else if (token === \"extensions\")\r\n                    if (msg.hasOwnProperty(\"extensions\")) {\r\n                        msg[\"extensions\"] = msg[\"extensions\"].concat(this._parseExtensionRanges())\r\n                    } else {\r\n                        msg[\"extensions\"] = this._parseExtensionRanges();\r\n                    }\r\n                else if (token === \"reserved\")\r\n                    this._parseIgnored(); // TODO\r\n                else if (token === \"extend\")\r\n                    this._parseExtend(msg);\r\n                else if (Lang.TYPEREF.test(token)) {\r\n                    if (!this.proto3)\r\n                        throw Error(\"illegal field rule: \"+token);\r\n                    this._parseMessageField(msg, \"optional\", token);\r\n                } else\r\n                    throw Error(\"illegal message token: \"+token);\r\n            }\r\n            this.tn.omit(\";\");\r\n            parent[\"messages\"].push(msg);\r\n            return msg;\r\n        };\r\n\r\n        /**\r\n         * Parses an ignored statement.\r\n         * @private\r\n         */\r\n        ParserPrototype._parseIgnored = function() {\r\n            while (this.tn.peek() !== ';')\r\n                this.tn.next();\r\n            this.tn.skip(\";\");\r\n        };\r\n\r\n        /**\r\n         * Parses a message field.\r\n         * @param {!Object} msg Message definition\r\n         * @param {string} rule Field rule\r\n         * @param {string=} type Field type if already known (never known for maps)\r\n         * @returns {!Object} Field descriptor\r\n         * @private\r\n         */\r\n        ParserPrototype._parseMessageField = function(msg, rule, type) {\r\n            if (!Lang.RULE.test(rule))\r\n                throw Error(\"illegal message field rule: \"+rule);\r\n            var fld = {\r\n                \"rule\": rule,\r\n                \"type\": \"\",\r\n                \"name\": \"\",\r\n                \"options\": {},\r\n                \"id\": 0\r\n            };\r\n            var token;\r\n            if (rule === \"map\") {\r\n\r\n                if (type)\r\n                    throw Error(\"illegal type: \" + type);\r\n                this.tn.skip('<');\r\n                token = this.tn.next();\r\n                if (!Lang.TYPE.test(token) && !Lang.TYPEREF.test(token))\r\n                    throw Error(\"illegal message field type: \" + token);\r\n                fld[\"keytype\"] = token;\r\n                this.tn.skip(',');\r\n                token = this.tn.next();\r\n                if (!Lang.TYPE.test(token) && !Lang.TYPEREF.test(token))\r\n                    throw Error(\"illegal message field: \" + token);\r\n                fld[\"type\"] = token;\r\n                this.tn.skip('>');\r\n                token = this.tn.next();\r\n                if (!Lang.NAME.test(token))\r\n                    throw Error(\"illegal message field name: \" + token);\r\n                fld[\"name\"] = token;\r\n                this.tn.skip(\"=\");\r\n                fld[\"id\"] = mkId(this.tn.next());\r\n                token = this.tn.peek();\r\n                if (token === '[')\r\n                    this._parseFieldOptions(fld);\r\n                this.tn.skip(\";\");\r\n\r\n            } else {\r\n\r\n                type = typeof type !== 'undefined' ? type : this.tn.next();\r\n\r\n                if (type === \"group\") {\r\n\r\n                    // \"A [legacy] group simply combines a nested message type and a field into a single declaration. In your\r\n                    // code, you can treat this message just as if it had a Result type field called result (the latter name is\r\n                    // converted to lower-case so that it does not conflict with the former).\"\r\n                    var grp = this._parseMessage(msg, fld);\r\n                    if (!/^[A-Z]/.test(grp[\"name\"]))\r\n                        throw Error('illegal group name: '+grp[\"name\"]);\r\n                    fld[\"type\"] = grp[\"name\"];\r\n                    fld[\"name\"] = grp[\"name\"].toLowerCase();\r\n                    this.tn.omit(\";\");\r\n\r\n                } else {\r\n\r\n                    if (!Lang.TYPE.test(type) && !Lang.TYPEREF.test(type))\r\n                        throw Error(\"illegal message field type: \" + type);\r\n                    fld[\"type\"] = type;\r\n                    token = this.tn.next();\r\n                    if (!Lang.NAME.test(token))\r\n                        throw Error(\"illegal message field name: \" + token);\r\n                    fld[\"name\"] = token;\r\n                    this.tn.skip(\"=\");\r\n                    fld[\"id\"] = mkId(this.tn.next());\r\n                    token = this.tn.peek();\r\n                    if (token === \"[\")\r\n                        this._parseFieldOptions(fld);\r\n                    this.tn.skip(\";\");\r\n\r\n                }\r\n            }\r\n            msg[\"fields\"].push(fld);\r\n            return fld;\r\n        };\r\n\r\n        /**\r\n         * Parses a message oneof.\r\n         * @param {!Object} msg Message definition\r\n         * @private\r\n         */\r\n        ParserPrototype._parseMessageOneOf = function(msg) {\r\n            var token = this.tn.next();\r\n            if (!Lang.NAME.test(token))\r\n                throw Error(\"illegal oneof name: \"+token);\r\n            var name = token,\r\n                fld;\r\n            var fields = [];\r\n            this.tn.skip(\"{\");\r\n            while ((token = this.tn.next()) !== \"}\") {\r\n                fld = this._parseMessageField(msg, \"optional\", token);\r\n                fld[\"oneof\"] = name;\r\n                fields.push(fld[\"id\"]);\r\n            }\r\n            this.tn.omit(\";\");\r\n            msg[\"oneofs\"][name] = fields;\r\n        };\r\n\r\n        /**\r\n         * Parses a set of field option definitions.\r\n         * @param {!Object} fld Field definition\r\n         * @private\r\n         */\r\n        ParserPrototype._parseFieldOptions = function(fld) {\r\n            this.tn.skip(\"[\");\r\n            var token,\r\n                first = true;\r\n            while ((token = this.tn.peek()) !== ']') {\r\n                if (!first)\r\n                    this.tn.skip(\",\");\r\n                this._parseOption(fld, true);\r\n                first = false;\r\n            }\r\n            this.tn.next();\r\n        };\r\n\r\n        /**\r\n         * Parses an enum.\r\n         * @param {!Object} msg Message definition\r\n         * @private\r\n         */\r\n        ParserPrototype._parseEnum = function(msg) {\r\n            var enm = {\r\n                \"name\": \"\",\r\n                \"values\": [],\r\n                \"options\": {}\r\n            };\r\n            var token = this.tn.next();\r\n            if (!Lang.NAME.test(token))\r\n                throw Error(\"illegal name: \"+token);\r\n            enm[\"name\"] = token;\r\n            this.tn.skip(\"{\");\r\n            while ((token = this.tn.next()) !== '}') {\r\n                if (token === \"option\")\r\n                    this._parseOption(enm);\r\n                else {\r\n                    if (!Lang.NAME.test(token))\r\n                        throw Error(\"illegal name: \"+token);\r\n                    this.tn.skip(\"=\");\r\n                    var val = {\r\n                        \"name\": token,\r\n                        \"id\": mkId(this.tn.next(), true)\r\n                    };\r\n                    token = this.tn.peek();\r\n                    if (token === \"[\")\r\n                        this._parseFieldOptions({ \"options\": {} });\r\n                    this.tn.skip(\";\");\r\n                    enm[\"values\"].push(val);\r\n                }\r\n            }\r\n            this.tn.omit(\";\");\r\n            msg[\"enums\"].push(enm);\r\n        };\r\n\r\n        /**\r\n         * Parses extension / reserved ranges.\r\n         * @returns {!Array.<!Array.<number>>}\r\n         * @private\r\n         */\r\n        ParserPrototype._parseExtensionRanges = function() {\r\n            var ranges = [];\r\n            var token,\r\n                range,\r\n                value;\r\n            do {\r\n                range = [];\r\n                while (true) {\r\n                    token = this.tn.next();\r\n                    switch (token) {\r\n                        case \"min\":\r\n                            value = ProtoBuf.ID_MIN;\r\n                            break;\r\n                        case \"max\":\r\n                            value = ProtoBuf.ID_MAX;\r\n                            break;\r\n                        default:\r\n                            value = mkNumber(token);\r\n                            break;\r\n                    }\r\n                    range.push(value);\r\n                    if (range.length === 2)\r\n                        break;\r\n                    if (this.tn.peek() !== \"to\") {\r\n                        range.push(value);\r\n                        break;\r\n                    }\r\n                    this.tn.next();\r\n                }\r\n                ranges.push(range);\r\n            } while (this.tn.omit(\",\"));\r\n            this.tn.skip(\";\");\r\n            return ranges;\r\n        };\r\n\r\n        /**\r\n         * Parses an extend block.\r\n         * @param {!Object} parent Parent object\r\n         * @private\r\n         */\r\n        ParserPrototype._parseExtend = function(parent) {\r\n            var token = this.tn.next();\r\n            if (!Lang.TYPEREF.test(token))\r\n                throw Error(\"illegal extend reference: \"+token);\r\n            var ext = {\r\n                \"ref\": token,\r\n                \"fields\": []\r\n            };\r\n            this.tn.skip(\"{\");\r\n            while ((token = this.tn.next()) !== '}') {\r\n                if (Lang.RULE.test(token))\r\n                    this._parseMessageField(ext, token);\r\n                else if (Lang.TYPEREF.test(token)) {\r\n                    if (!this.proto3)\r\n                        throw Error(\"illegal field rule: \"+token);\r\n                    this._parseMessageField(ext, \"optional\", token);\r\n                } else\r\n                    throw Error(\"illegal extend token: \"+token);\r\n            }\r\n            this.tn.omit(\";\");\r\n            parent[\"messages\"].push(ext);\r\n            return ext;\r\n        };\r\n\r\n        // ----- General -----\r\n\r\n        /**\r\n         * Returns a string representation of this parser.\r\n         * @returns {string}\r\n         */\r\n        ParserPrototype.toString = function() {\r\n            return \"Parser at line \"+this.tn.line;\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.DotProto.Parser\r\n         * @expose\r\n         */\r\n        DotProto.Parser = Parser;\r\n\r\n        return DotProto;\r\n\r\n    })(ProtoBuf, ProtoBuf.Lang);\r\n\r\n    /**\r\n     * @alias ProtoBuf.Reflect\r\n     * @expose\r\n     */\r\n    ProtoBuf.Reflect = (function(ProtoBuf) {\r\n        \"use strict\";\r\n\r\n        /**\r\n         * Reflection types.\r\n         * @exports ProtoBuf.Reflect\r\n         * @namespace\r\n         */\r\n        var Reflect = {};\r\n\r\n        /**\r\n         * Constructs a Reflect base class.\r\n         * @exports ProtoBuf.Reflect.T\r\n         * @constructor\r\n         * @abstract\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {?ProtoBuf.Reflect.T} parent Parent object\r\n         * @param {string} name Object name\r\n         */\r\n        var T = function(builder, parent, name) {\r\n\r\n            /**\r\n             * Builder reference.\r\n             * @type {!ProtoBuf.Builder}\r\n             * @expose\r\n             */\r\n            this.builder = builder;\r\n\r\n            /**\r\n             * Parent object.\r\n             * @type {?ProtoBuf.Reflect.T}\r\n             * @expose\r\n             */\r\n            this.parent = parent;\r\n\r\n            /**\r\n             * Object name in namespace.\r\n             * @type {string}\r\n             * @expose\r\n             */\r\n            this.name = name;\r\n\r\n            /**\r\n             * Fully qualified class name\r\n             * @type {string}\r\n             * @expose\r\n             */\r\n            this.className;\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.T.prototype\r\n         * @inner\r\n         */\r\n        var TPrototype = T.prototype;\r\n\r\n        /**\r\n         * Returns the fully qualified name of this object.\r\n         * @returns {string} Fully qualified name as of \".PATH.TO.THIS\"\r\n         * @expose\r\n         */\r\n        TPrototype.fqn = function() {\r\n            var name = this.name,\r\n                ptr = this;\r\n            do {\r\n                ptr = ptr.parent;\r\n                if (ptr == null)\r\n                    break;\r\n                name = ptr.name+\".\"+name;\r\n            } while (true);\r\n            return name;\r\n        };\r\n\r\n        /**\r\n         * Returns a string representation of this Reflect object (its fully qualified name).\r\n         * @param {boolean=} includeClass Set to true to include the class name. Defaults to false.\r\n         * @return String representation\r\n         * @expose\r\n         */\r\n        TPrototype.toString = function(includeClass) {\r\n            return (includeClass ? this.className + \" \" : \"\") + this.fqn();\r\n        };\r\n\r\n        /**\r\n         * Builds this type.\r\n         * @throws {Error} If this type cannot be built directly\r\n         * @expose\r\n         */\r\n        TPrototype.build = function() {\r\n            throw Error(this.toString(true)+\" cannot be built directly\");\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.T\r\n         * @expose\r\n         */\r\n        Reflect.T = T;\r\n\r\n        /**\r\n         * Constructs a new Namespace.\r\n         * @exports ProtoBuf.Reflect.Namespace\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {?ProtoBuf.Reflect.Namespace} parent Namespace parent\r\n         * @param {string} name Namespace name\r\n         * @param {Object.<string,*>=} options Namespace options\r\n         * @param {string?} syntax The syntax level of this definition (e.g., proto3)\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.T\r\n         */\r\n        var Namespace = function(builder, parent, name, options, syntax) {\r\n            T.call(this, builder, parent, name);\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            this.className = \"Namespace\";\r\n\r\n            /**\r\n             * Children inside the namespace.\r\n             * @type {!Array.<ProtoBuf.Reflect.T>}\r\n             */\r\n            this.children = [];\r\n\r\n            /**\r\n             * Options.\r\n             * @type {!Object.<string, *>}\r\n             */\r\n            this.options = options || {};\r\n\r\n            /**\r\n             * Syntax level (e.g., proto2 or proto3).\r\n             * @type {!string}\r\n             */\r\n            this.syntax = syntax || \"proto2\";\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Namespace.prototype\r\n         * @inner\r\n         */\r\n        var NamespacePrototype = Namespace.prototype = Object.create(T.prototype);\r\n\r\n        /**\r\n         * Returns an array of the namespace's children.\r\n         * @param {ProtoBuf.Reflect.T=} type Filter type (returns instances of this type only). Defaults to null (all children).\r\n         * @return {Array.<ProtoBuf.Reflect.T>}\r\n         * @expose\r\n         */\r\n        NamespacePrototype.getChildren = function(type) {\r\n            type = type || null;\r\n            if (type == null)\r\n                return this.children.slice();\r\n            var children = [];\r\n            for (var i=0, k=this.children.length; i<k; ++i)\r\n                if (this.children[i] instanceof type)\r\n                    children.push(this.children[i]);\r\n            return children;\r\n        };\r\n\r\n        /**\r\n         * Adds a child to the namespace.\r\n         * @param {ProtoBuf.Reflect.T} child Child\r\n         * @throws {Error} If the child cannot be added (duplicate)\r\n         * @expose\r\n         */\r\n        NamespacePrototype.addChild = function(child) {\r\n            var other;\r\n            if (other = this.getChild(child.name)) {\r\n                // Try to revert camelcase transformation on collision\r\n                if (other instanceof Message.Field && other.name !== other.originalName && this.getChild(other.originalName) === null)\r\n                    other.name = other.originalName; // Revert previous first (effectively keeps both originals)\r\n                else if (child instanceof Message.Field && child.name !== child.originalName && this.getChild(child.originalName) === null)\r\n                    child.name = child.originalName;\r\n                else\r\n                    throw Error(\"Duplicate name in namespace \"+this.toString(true)+\": \"+child.name);\r\n            }\r\n            this.children.push(child);\r\n        };\r\n\r\n        /**\r\n         * Gets a child by its name or id.\r\n         * @param {string|number} nameOrId Child name or id\r\n         * @return {?ProtoBuf.Reflect.T} The child or null if not found\r\n         * @expose\r\n         */\r\n        NamespacePrototype.getChild = function(nameOrId) {\r\n            var key = typeof nameOrId === 'number' ? 'id' : 'name';\r\n            for (var i=0, k=this.children.length; i<k; ++i)\r\n                if (this.children[i][key] === nameOrId)\r\n                    return this.children[i];\r\n            return null;\r\n        };\r\n\r\n        /**\r\n         * Resolves a reflect object inside of this namespace.\r\n         * @param {string|!Array.<string>} qn Qualified name to resolve\r\n         * @param {boolean=} excludeNonNamespace Excludes non-namespace types, defaults to `false`\r\n         * @return {?ProtoBuf.Reflect.Namespace} The resolved type or null if not found\r\n         * @expose\r\n         */\r\n        NamespacePrototype.resolve = function(qn, excludeNonNamespace) {\r\n            var part = typeof qn === 'string' ? qn.split(\".\") : qn,\r\n                ptr = this,\r\n                i = 0;\r\n            if (part[i] === \"\") { // Fully qualified name, e.g. \".My.Message'\r\n                while (ptr.parent !== null)\r\n                    ptr = ptr.parent;\r\n                i++;\r\n            }\r\n            var child;\r\n            do {\r\n                do {\r\n                    if (!(ptr instanceof Reflect.Namespace)) {\r\n                        ptr = null;\r\n                        break;\r\n                    }\r\n                    child = ptr.getChild(part[i]);\r\n                    if (!child || !(child instanceof Reflect.T) || (excludeNonNamespace && !(child instanceof Reflect.Namespace))) {\r\n                        ptr = null;\r\n                        break;\r\n                    }\r\n                    ptr = child; i++;\r\n                } while (i < part.length);\r\n                if (ptr != null)\r\n                    break; // Found\r\n                // Else search the parent\r\n                if (this.parent !== null)\r\n                    return this.parent.resolve(qn, excludeNonNamespace);\r\n            } while (ptr != null);\r\n            return ptr;\r\n        };\r\n\r\n        /**\r\n         * Determines the shortest qualified name of the specified type, if any, relative to this namespace.\r\n         * @param {!ProtoBuf.Reflect.T} t Reflection type\r\n         * @returns {string} The shortest qualified name or, if there is none, the fqn\r\n         * @expose\r\n         */\r\n        NamespacePrototype.qn = function(t) {\r\n            var part = [], ptr = t;\r\n            do {\r\n                part.unshift(ptr.name);\r\n                ptr = ptr.parent;\r\n            } while (ptr !== null);\r\n            for (var len=1; len <= part.length; len++) {\r\n                var qn = part.slice(part.length-len);\r\n                if (t === this.resolve(qn, t instanceof Reflect.Namespace))\r\n                    return qn.join(\".\");\r\n            }\r\n            return t.fqn();\r\n        };\r\n\r\n        /**\r\n         * Builds the namespace and returns the runtime counterpart.\r\n         * @return {Object.<string,Function|Object>} Runtime namespace\r\n         * @expose\r\n         */\r\n        NamespacePrototype.build = function() {\r\n            /** @dict */\r\n            var ns = {};\r\n            var children = this.children;\r\n            for (var i=0, k=children.length, child; i<k; ++i) {\r\n                child = children[i];\r\n                if (child instanceof Namespace)\r\n                    ns[child.name] = child.build();\r\n            }\r\n            if (Object.defineProperty)\r\n                Object.defineProperty(ns, \"$options\", { \"value\": this.buildOpt() });\r\n            return ns;\r\n        };\r\n\r\n        /**\r\n         * Builds the namespace's '$options' property.\r\n         * @return {Object.<string,*>}\r\n         */\r\n        NamespacePrototype.buildOpt = function() {\r\n            var opt = {},\r\n                keys = Object.keys(this.options);\r\n            for (var i=0, k=keys.length; i<k; ++i) {\r\n                var key = keys[i],\r\n                    val = this.options[keys[i]];\r\n                // TODO: Options are not resolved, yet.\r\n                // if (val instanceof Namespace) {\r\n                //     opt[key] = val.build();\r\n                // } else {\r\n                opt[key] = val;\r\n                // }\r\n            }\r\n            return opt;\r\n        };\r\n\r\n        /**\r\n         * Gets the value assigned to the option with the specified name.\r\n         * @param {string=} name Returns the option value if specified, otherwise all options are returned.\r\n         * @return {*|Object.<string,*>}null} Option value or NULL if there is no such option\r\n         */\r\n        NamespacePrototype.getOption = function(name) {\r\n            if (typeof name === 'undefined')\r\n                return this.options;\r\n            return typeof this.options[name] !== 'undefined' ? this.options[name] : null;\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Namespace\r\n         * @expose\r\n         */\r\n        Reflect.Namespace = Namespace;\r\n\r\n        /**\r\n         * Constructs a new Element implementation that checks and converts values for a\r\n         * particular field type, as appropriate.\r\n         *\r\n         * An Element represents a single value: either the value of a singular field,\r\n         * or a value contained in one entry of a repeated field or map field. This\r\n         * class does not implement these higher-level concepts; it only encapsulates\r\n         * the low-level typechecking and conversion.\r\n         *\r\n         * @exports ProtoBuf.Reflect.Element\r\n         * @param {{name: string, wireType: number}} type Resolved data type\r\n         * @param {ProtoBuf.Reflect.T|null} resolvedType Resolved type, if relevant\r\n         * (e.g. submessage field).\r\n         * @param {boolean} isMapKey Is this element a Map key? The value will be\r\n         * converted to string form if so.\r\n         * @param {string} syntax Syntax level of defining message type, e.g.,\r\n         * proto2 or proto3.\r\n         * @param {string} name Name of the field containing this element (for error\r\n         * messages)\r\n         * @constructor\r\n         */\r\n        var Element = function(type, resolvedType, isMapKey, syntax, name) {\r\n\r\n            /**\r\n             * Element type, as a string (e.g., int32).\r\n             * @type {{name: string, wireType: number}}\r\n             */\r\n            this.type = type;\r\n\r\n            /**\r\n             * Element type reference to submessage or enum definition, if needed.\r\n             * @type {ProtoBuf.Reflect.T|null}\r\n             */\r\n            this.resolvedType = resolvedType;\r\n\r\n            /**\r\n             * Element is a map key.\r\n             * @type {boolean}\r\n             */\r\n            this.isMapKey = isMapKey;\r\n\r\n            /**\r\n             * Syntax level of defining message type, e.g., proto2 or proto3.\r\n             * @type {string}\r\n             */\r\n            this.syntax = syntax;\r\n\r\n            /**\r\n             * Name of the field containing this element (for error messages)\r\n             * @type {string}\r\n             */\r\n            this.name = name;\r\n\r\n            if (isMapKey && ProtoBuf.MAP_KEY_TYPES.indexOf(type) < 0)\r\n                throw Error(\"Invalid map key type: \" + type.name);\r\n        };\r\n\r\n        var ElementPrototype = Element.prototype;\r\n\r\n        /**\r\n         * Obtains a (new) default value for the specified type.\r\n         * @param type {string|{name: string, wireType: number}} Field type\r\n         * @returns {*} Default value\r\n         * @inner\r\n         */\r\n        function mkDefault(type) {\r\n            if (typeof type === 'string')\r\n                type = ProtoBuf.TYPES[type];\r\n            if (typeof type.defaultValue === 'undefined')\r\n                throw Error(\"default value for type \"+type.name+\" is not supported\");\r\n            if (type == ProtoBuf.TYPES[\"bytes\"])\r\n                return new ByteBuffer(0);\r\n            return type.defaultValue;\r\n        }\r\n\r\n        /**\r\n         * Returns the default value for this field in proto3.\r\n         * @function\r\n         * @param type {string|{name: string, wireType: number}} the field type\r\n         * @returns {*} Default value\r\n         */\r\n        Element.defaultFieldValue = mkDefault;\r\n\r\n        /**\r\n         * Makes a Long from a value.\r\n         * @param {{low: number, high: number, unsigned: boolean}|string|number} value Value\r\n         * @param {boolean=} unsigned Whether unsigned or not, defaults to reuse it from Long-like objects or to signed for\r\n         *  strings and numbers\r\n         * @returns {!Long}\r\n         * @throws {Error} If the value cannot be converted to a Long\r\n         * @inner\r\n         */\r\n        function mkLong(value, unsigned) {\r\n            if (value && typeof value.low === 'number' && typeof value.high === 'number' && typeof value.unsigned === 'boolean'\r\n                && value.low === value.low && value.high === value.high)\r\n                return new ProtoBuf.Long(value.low, value.high, typeof unsigned === 'undefined' ? value.unsigned : unsigned);\r\n            if (typeof value === 'string')\r\n                return ProtoBuf.Long.fromString(value, unsigned || false, 10);\r\n            if (typeof value === 'number')\r\n                return ProtoBuf.Long.fromNumber(value, unsigned || false);\r\n            throw Error(\"not convertible to Long\");\r\n        }\r\n\r\n        ElementPrototype.toString = function() {\r\n            return (this.name || '') + (this.isMapKey ? 'map' : 'value') + ' element';\r\n        }\r\n\r\n        /**\r\n         * Checks if the given value can be set for an element of this type (singular\r\n         * field or one element of a repeated field or map).\r\n         * @param {*} value Value to check\r\n         * @return {*} Verified, maybe adjusted, value\r\n         * @throws {Error} If the value cannot be verified for this element slot\r\n         * @expose\r\n         */\r\n        ElementPrototype.verifyValue = function(value) {\r\n            var self = this;\r\n            function fail(val, msg) {\r\n                throw Error(\"Illegal value for \"+self.toString(true)+\" of type \"+self.type.name+\": \"+val+\" (\"+msg+\")\");\r\n            }\r\n            switch (this.type) {\r\n                // Signed 32bit\r\n                case ProtoBuf.TYPES[\"int32\"]:\r\n                case ProtoBuf.TYPES[\"sint32\"]:\r\n                case ProtoBuf.TYPES[\"sfixed32\"]:\r\n                    // Account for !NaN: value === value\r\n                    if (typeof value !== 'number' || (value === value && value % 1 !== 0))\r\n                        fail(typeof value, \"not an integer\");\r\n                    return value > 4294967295 ? value | 0 : value;\r\n\r\n                // Unsigned 32bit\r\n                case ProtoBuf.TYPES[\"uint32\"]:\r\n                case ProtoBuf.TYPES[\"fixed32\"]:\r\n                    if (typeof value !== 'number' || (value === value && value % 1 !== 0))\r\n                        fail(typeof value, \"not an integer\");\r\n                    return value < 0 ? value >>> 0 : value;\r\n\r\n                // Signed 64bit\r\n                case ProtoBuf.TYPES[\"int64\"]:\r\n                case ProtoBuf.TYPES[\"sint64\"]:\r\n                case ProtoBuf.TYPES[\"sfixed64\"]: {\r\n                    if (ProtoBuf.Long)\r\n                        try {\r\n                            return mkLong(value, false);\r\n                        } catch (e) {\r\n                            fail(typeof value, e.message);\r\n                        }\r\n                    else\r\n                        fail(typeof value, \"requires Long.js\");\r\n                }\r\n\r\n                // Unsigned 64bit\r\n                case ProtoBuf.TYPES[\"uint64\"]:\r\n                case ProtoBuf.TYPES[\"fixed64\"]: {\r\n                    if (ProtoBuf.Long)\r\n                        try {\r\n                            return mkLong(value, true);\r\n                        } catch (e) {\r\n                            fail(typeof value, e.message);\r\n                        }\r\n                    else\r\n                        fail(typeof value, \"requires Long.js\");\r\n                }\r\n\r\n                // Bool\r\n                case ProtoBuf.TYPES[\"bool\"]:\r\n                    if (typeof value !== 'boolean')\r\n                        fail(typeof value, \"not a boolean\");\r\n                    return value;\r\n\r\n                // Float\r\n                case ProtoBuf.TYPES[\"float\"]:\r\n                case ProtoBuf.TYPES[\"double\"]:\r\n                    if (typeof value !== 'number')\r\n                        fail(typeof value, \"not a number\");\r\n                    return value;\r\n\r\n                // Length-delimited string\r\n                case ProtoBuf.TYPES[\"string\"]:\r\n                    if (typeof value !== 'string' && !(value && value instanceof String))\r\n                        fail(typeof value, \"not a string\");\r\n                    return \"\"+value; // Convert String object to string\r\n\r\n                // Length-delimited bytes\r\n                case ProtoBuf.TYPES[\"bytes\"]:\r\n                    if (ByteBuffer.isByteBuffer(value))\r\n                        return value;\r\n                    return ByteBuffer.wrap(value, \"base64\");\r\n\r\n                // Constant enum value\r\n                case ProtoBuf.TYPES[\"enum\"]: {\r\n                    var values = this.resolvedType.getChildren(ProtoBuf.Reflect.Enum.Value);\r\n                    for (i=0; i<values.length; i++)\r\n                        if (values[i].name == value)\r\n                            return values[i].id;\r\n                        else if (values[i].id == value)\r\n                            return values[i].id;\r\n\r\n                    if (this.syntax === 'proto3') {\r\n                        // proto3: just make sure it's an integer.\r\n                        if (typeof value !== 'number' || (value === value && value % 1 !== 0))\r\n                            fail(typeof value, \"not an integer\");\r\n                        if (value > 4294967295 || value < 0)\r\n                            fail(typeof value, \"not in range for uint32\")\r\n                        return value;\r\n                    } else {\r\n                        // proto2 requires enum values to be valid.\r\n                        fail(value, \"not a valid enum value\");\r\n                    }\r\n                }\r\n                // Embedded message\r\n                case ProtoBuf.TYPES[\"group\"]:\r\n                case ProtoBuf.TYPES[\"message\"]: {\r\n                    if (!value || typeof value !== 'object')\r\n                        fail(typeof value, \"object expected\");\r\n                    if (value instanceof this.resolvedType.clazz)\r\n                        return value;\r\n                    if (value instanceof ProtoBuf.Builder.Message) {\r\n                        // Mismatched type: Convert to object (see: https://github.com/dcodeIO/ProtoBuf.js/issues/180)\r\n                        var obj = {};\r\n                        for (var i in value)\r\n                            if (value.hasOwnProperty(i))\r\n                                obj[i] = value[i];\r\n                        value = obj;\r\n                    }\r\n                    // Else let's try to construct one from a key-value object\r\n                    return new (this.resolvedType.clazz)(value); // May throw for a hundred of reasons\r\n                }\r\n            }\r\n\r\n            // We should never end here\r\n            throw Error(\"[INTERNAL] Illegal value for \"+this.toString(true)+\": \"+value+\" (undefined type \"+this.type+\")\");\r\n        };\r\n\r\n        /**\r\n         * Calculates the byte length of an element on the wire.\r\n         * @param {number} id Field number\r\n         * @param {*} value Field value\r\n         * @returns {number} Byte length\r\n         * @throws {Error} If the value cannot be calculated\r\n         * @expose\r\n         */\r\n        ElementPrototype.calculateLength = function(id, value) {\r\n            if (value === null) return 0; // Nothing to encode\r\n            // Tag has already been written\r\n            var n;\r\n            switch (this.type) {\r\n                case ProtoBuf.TYPES[\"int32\"]:\r\n                    return value < 0 ? ByteBuffer.calculateVarint64(value) : ByteBuffer.calculateVarint32(value);\r\n                case ProtoBuf.TYPES[\"uint32\"]:\r\n                    return ByteBuffer.calculateVarint32(value);\r\n                case ProtoBuf.TYPES[\"sint32\"]:\r\n                    return ByteBuffer.calculateVarint32(ByteBuffer.zigZagEncode32(value));\r\n                case ProtoBuf.TYPES[\"fixed32\"]:\r\n                case ProtoBuf.TYPES[\"sfixed32\"]:\r\n                case ProtoBuf.TYPES[\"float\"]:\r\n                    return 4;\r\n                case ProtoBuf.TYPES[\"int64\"]:\r\n                case ProtoBuf.TYPES[\"uint64\"]:\r\n                    return ByteBuffer.calculateVarint64(value);\r\n                case ProtoBuf.TYPES[\"sint64\"]:\r\n                    return ByteBuffer.calculateVarint64(ByteBuffer.zigZagEncode64(value));\r\n                case ProtoBuf.TYPES[\"fixed64\"]:\r\n                case ProtoBuf.TYPES[\"sfixed64\"]:\r\n                    return 8;\r\n                case ProtoBuf.TYPES[\"bool\"]:\r\n                    return 1;\r\n                case ProtoBuf.TYPES[\"enum\"]:\r\n                    return ByteBuffer.calculateVarint32(value);\r\n                case ProtoBuf.TYPES[\"double\"]:\r\n                    return 8;\r\n                case ProtoBuf.TYPES[\"string\"]:\r\n                    n = ByteBuffer.calculateUTF8Bytes(value);\r\n                    return ByteBuffer.calculateVarint32(n) + n;\r\n                case ProtoBuf.TYPES[\"bytes\"]:\r\n                    if (value.remaining() < 0)\r\n                        throw Error(\"Illegal value for \"+this.toString(true)+\": \"+value.remaining()+\" bytes remaining\");\r\n                    return ByteBuffer.calculateVarint32(value.remaining()) + value.remaining();\r\n                case ProtoBuf.TYPES[\"message\"]:\r\n                    n = this.resolvedType.calculate(value);\r\n                    return ByteBuffer.calculateVarint32(n) + n;\r\n                case ProtoBuf.TYPES[\"group\"]:\r\n                    n = this.resolvedType.calculate(value);\r\n                    return n + ByteBuffer.calculateVarint32((id << 3) | ProtoBuf.WIRE_TYPES.ENDGROUP);\r\n            }\r\n            // We should never end here\r\n            throw Error(\"[INTERNAL] Illegal value to encode in \"+this.toString(true)+\": \"+value+\" (unknown type)\");\r\n        };\r\n\r\n        /**\r\n         * Encodes a value to the specified buffer. Does not encode the key.\r\n         * @param {number} id Field number\r\n         * @param {*} value Field value\r\n         * @param {ByteBuffer} buffer ByteBuffer to encode to\r\n         * @return {ByteBuffer} The ByteBuffer for chaining\r\n         * @throws {Error} If the value cannot be encoded\r\n         * @expose\r\n         */\r\n        ElementPrototype.encodeValue = function(id, value, buffer) {\r\n            if (value === null) return buffer; // Nothing to encode\r\n            // Tag has already been written\r\n\r\n            switch (this.type) {\r\n                // 32bit signed varint\r\n                case ProtoBuf.TYPES[\"int32\"]:\r\n                    // \"If you use int32 or int64 as the type for a negative number, the resulting varint is always ten bytes\r\n                    // long – it is, effectively, treated like a very large unsigned integer.\" (see #122)\r\n                    if (value < 0)\r\n                        buffer.writeVarint64(value);\r\n                    else\r\n                        buffer.writeVarint32(value);\r\n                    break;\r\n\r\n                // 32bit unsigned varint\r\n                case ProtoBuf.TYPES[\"uint32\"]:\r\n                    buffer.writeVarint32(value);\r\n                    break;\r\n\r\n                // 32bit varint zig-zag\r\n                case ProtoBuf.TYPES[\"sint32\"]:\r\n                    buffer.writeVarint32ZigZag(value);\r\n                    break;\r\n\r\n                // Fixed unsigned 32bit\r\n                case ProtoBuf.TYPES[\"fixed32\"]:\r\n                    buffer.writeUint32(value);\r\n                    break;\r\n\r\n                // Fixed signed 32bit\r\n                case ProtoBuf.TYPES[\"sfixed32\"]:\r\n                    buffer.writeInt32(value);\r\n                    break;\r\n\r\n                // 64bit varint as-is\r\n                case ProtoBuf.TYPES[\"int64\"]:\r\n                case ProtoBuf.TYPES[\"uint64\"]:\r\n                    buffer.writeVarint64(value); // throws\r\n                    break;\r\n\r\n                // 64bit varint zig-zag\r\n                case ProtoBuf.TYPES[\"sint64\"]:\r\n                    buffer.writeVarint64ZigZag(value); // throws\r\n                    break;\r\n\r\n                // Fixed unsigned 64bit\r\n                case ProtoBuf.TYPES[\"fixed64\"]:\r\n                    buffer.writeUint64(value); // throws\r\n                    break;\r\n\r\n                // Fixed signed 64bit\r\n                case ProtoBuf.TYPES[\"sfixed64\"]:\r\n                    buffer.writeInt64(value); // throws\r\n                    break;\r\n\r\n                // Bool\r\n                case ProtoBuf.TYPES[\"bool\"]:\r\n                    if (typeof value === 'string')\r\n                        buffer.writeVarint32(value.toLowerCase() === 'false' ? 0 : !!value);\r\n                    else\r\n                        buffer.writeVarint32(value ? 1 : 0);\r\n                    break;\r\n\r\n                // Constant enum value\r\n                case ProtoBuf.TYPES[\"enum\"]:\r\n                    buffer.writeVarint32(value);\r\n                    break;\r\n\r\n                // 32bit float\r\n                case ProtoBuf.TYPES[\"float\"]:\r\n                    buffer.writeFloat32(value);\r\n                    break;\r\n\r\n                // 64bit float\r\n                case ProtoBuf.TYPES[\"double\"]:\r\n                    buffer.writeFloat64(value);\r\n                    break;\r\n\r\n                // Length-delimited string\r\n                case ProtoBuf.TYPES[\"string\"]:\r\n                    buffer.writeVString(value);\r\n                    break;\r\n\r\n                // Length-delimited bytes\r\n                case ProtoBuf.TYPES[\"bytes\"]:\r\n                    if (value.remaining() < 0)\r\n                        throw Error(\"Illegal value for \"+this.toString(true)+\": \"+value.remaining()+\" bytes remaining\");\r\n                    var prevOffset = value.offset;\r\n                    buffer.writeVarint32(value.remaining());\r\n                    buffer.append(value);\r\n                    value.offset = prevOffset;\r\n                    break;\r\n\r\n                // Embedded message\r\n                case ProtoBuf.TYPES[\"message\"]:\r\n                    var bb = new ByteBuffer().LE();\r\n                    this.resolvedType.encode(value, bb);\r\n                    buffer.writeVarint32(bb.offset);\r\n                    buffer.append(bb.flip());\r\n                    break;\r\n\r\n                // Legacy group\r\n                case ProtoBuf.TYPES[\"group\"]:\r\n                    this.resolvedType.encode(value, buffer);\r\n                    buffer.writeVarint32((id << 3) | ProtoBuf.WIRE_TYPES.ENDGROUP);\r\n                    break;\r\n\r\n                default:\r\n                    // We should never end here\r\n                    throw Error(\"[INTERNAL] Illegal value to encode in \"+this.toString(true)+\": \"+value+\" (unknown type)\");\r\n            }\r\n            return buffer;\r\n        };\r\n\r\n        /**\r\n         * Decode one element value from the specified buffer.\r\n         * @param {ByteBuffer} buffer ByteBuffer to decode from\r\n         * @param {number} wireType The field wire type\r\n         * @param {number} id The field number\r\n         * @return {*} Decoded value\r\n         * @throws {Error} If the field cannot be decoded\r\n         * @expose\r\n         */\r\n        ElementPrototype.decode = function(buffer, wireType, id) {\r\n            if (wireType != this.type.wireType)\r\n                throw Error(\"Unexpected wire type for element\");\r\n\r\n            var value, nBytes;\r\n            switch (this.type) {\r\n                // 32bit signed varint\r\n                case ProtoBuf.TYPES[\"int32\"]:\r\n                    return buffer.readVarint32() | 0;\r\n\r\n                // 32bit unsigned varint\r\n                case ProtoBuf.TYPES[\"uint32\"]:\r\n                    return buffer.readVarint32() >>> 0;\r\n\r\n                // 32bit signed varint zig-zag\r\n                case ProtoBuf.TYPES[\"sint32\"]:\r\n                    return buffer.readVarint32ZigZag() | 0;\r\n\r\n                // Fixed 32bit unsigned\r\n                case ProtoBuf.TYPES[\"fixed32\"]:\r\n                    return buffer.readUint32() >>> 0;\r\n\r\n                case ProtoBuf.TYPES[\"sfixed32\"]:\r\n                    return buffer.readInt32() | 0;\r\n\r\n                // 64bit signed varint\r\n                case ProtoBuf.TYPES[\"int64\"]:\r\n                    return buffer.readVarint64();\r\n\r\n                // 64bit unsigned varint\r\n                case ProtoBuf.TYPES[\"uint64\"]:\r\n                    return buffer.readVarint64().toUnsigned();\r\n\r\n                // 64bit signed varint zig-zag\r\n                case ProtoBuf.TYPES[\"sint64\"]:\r\n                    return buffer.readVarint64ZigZag();\r\n\r\n                // Fixed 64bit unsigned\r\n                case ProtoBuf.TYPES[\"fixed64\"]:\r\n                    return buffer.readUint64();\r\n\r\n                // Fixed 64bit signed\r\n                case ProtoBuf.TYPES[\"sfixed64\"]:\r\n                    return buffer.readInt64();\r\n\r\n                // Bool varint\r\n                case ProtoBuf.TYPES[\"bool\"]:\r\n                    return !!buffer.readVarint32();\r\n\r\n                // Constant enum value (varint)\r\n                case ProtoBuf.TYPES[\"enum\"]:\r\n                    // The following Builder.Message#set will already throw\r\n                    return buffer.readVarint32();\r\n\r\n                // 32bit float\r\n                case ProtoBuf.TYPES[\"float\"]:\r\n                    return buffer.readFloat();\r\n\r\n                // 64bit float\r\n                case ProtoBuf.TYPES[\"double\"]:\r\n                    return buffer.readDouble();\r\n\r\n                // Length-delimited string\r\n                case ProtoBuf.TYPES[\"string\"]:\r\n                    return buffer.readVString();\r\n\r\n                // Length-delimited bytes\r\n                case ProtoBuf.TYPES[\"bytes\"]: {\r\n                    nBytes = buffer.readVarint32();\r\n                    if (buffer.remaining() < nBytes)\r\n                        throw Error(\"Illegal number of bytes for \"+this.toString(true)+\": \"+nBytes+\" required but got only \"+buffer.remaining());\r\n                    value = buffer.clone(); // Offset already set\r\n                    value.limit = value.offset+nBytes;\r\n                    buffer.offset += nBytes;\r\n                    return value;\r\n                }\r\n\r\n                // Length-delimited embedded message\r\n                case ProtoBuf.TYPES[\"message\"]: {\r\n                    nBytes = buffer.readVarint32();\r\n                    return this.resolvedType.decode(buffer, nBytes);\r\n                }\r\n\r\n                // Legacy group\r\n                case ProtoBuf.TYPES[\"group\"]:\r\n                    return this.resolvedType.decode(buffer, -1, id);\r\n            }\r\n\r\n            // We should never end here\r\n            throw Error(\"[INTERNAL] Illegal decode type\");\r\n        };\r\n\r\n        /**\r\n         * Converts a value from a string to the canonical element type.\r\n         *\r\n         * Legal only when isMapKey is true.\r\n         *\r\n         * @param {string} str The string value\r\n         * @returns {*} The value\r\n         */\r\n        ElementPrototype.valueFromString = function(str) {\r\n            if (!this.isMapKey) {\r\n                throw Error(\"valueFromString() called on non-map-key element\");\r\n            }\r\n\r\n            switch (this.type) {\r\n                case ProtoBuf.TYPES[\"int32\"]:\r\n                case ProtoBuf.TYPES[\"sint32\"]:\r\n                case ProtoBuf.TYPES[\"sfixed32\"]:\r\n                case ProtoBuf.TYPES[\"uint32\"]:\r\n                case ProtoBuf.TYPES[\"fixed32\"]:\r\n                    return this.verifyValue(parseInt(str));\r\n\r\n                case ProtoBuf.TYPES[\"int64\"]:\r\n                case ProtoBuf.TYPES[\"sint64\"]:\r\n                case ProtoBuf.TYPES[\"sfixed64\"]:\r\n                case ProtoBuf.TYPES[\"uint64\"]:\r\n                case ProtoBuf.TYPES[\"fixed64\"]:\r\n                      // Long-based fields support conversions from string already.\r\n                      return this.verifyValue(str);\r\n\r\n                case ProtoBuf.TYPES[\"bool\"]:\r\n                      return str === \"true\";\r\n\r\n                case ProtoBuf.TYPES[\"string\"]:\r\n                      return this.verifyValue(str);\r\n\r\n                case ProtoBuf.TYPES[\"bytes\"]:\r\n                      return ByteBuffer.fromBinary(str);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Converts a value from the canonical element type to a string.\r\n         *\r\n         * It should be the case that `valueFromString(valueToString(val))` returns\r\n         * a value equivalent to `verifyValue(val)` for every legal value of `val`\r\n         * according to this element type.\r\n         *\r\n         * This may be used when the element must be stored or used as a string,\r\n         * e.g., as a map key on an Object.\r\n         *\r\n         * Legal only when isMapKey is true.\r\n         *\r\n         * @param {*} val The value\r\n         * @returns {string} The string form of the value.\r\n         */\r\n        ElementPrototype.valueToString = function(value) {\r\n            if (!this.isMapKey) {\r\n                throw Error(\"valueToString() called on non-map-key element\");\r\n            }\r\n\r\n            if (this.type === ProtoBuf.TYPES[\"bytes\"]) {\r\n                return value.toString(\"binary\");\r\n            } else {\r\n                return value.toString();\r\n            }\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Element\r\n         * @expose\r\n         */\r\n        Reflect.Element = Element;\r\n\r\n        /**\r\n         * Constructs a new Message.\r\n         * @exports ProtoBuf.Reflect.Message\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.Namespace} parent Parent message or namespace\r\n         * @param {string} name Message name\r\n         * @param {Object.<string,*>=} options Message options\r\n         * @param {boolean=} isGroup `true` if this is a legacy group\r\n         * @param {string?} syntax The syntax level of this definition (e.g., proto3)\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.Namespace\r\n         */\r\n        var Message = function(builder, parent, name, options, isGroup, syntax) {\r\n            Namespace.call(this, builder, parent, name, options, syntax);\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            this.className = \"Message\";\r\n\r\n            /**\r\n             * Extensions range.\r\n             * @type {!Array.<number>|undefined}\r\n             * @expose\r\n             */\r\n            this.extensions = undefined;\r\n\r\n            /**\r\n             * Runtime message class.\r\n             * @type {?function(new:ProtoBuf.Builder.Message)}\r\n             * @expose\r\n             */\r\n            this.clazz = null;\r\n\r\n            /**\r\n             * Whether this is a legacy group or not.\r\n             * @type {boolean}\r\n             * @expose\r\n             */\r\n            this.isGroup = !!isGroup;\r\n\r\n            // The following cached collections are used to efficiently iterate over or look up fields when decoding.\r\n\r\n            /**\r\n             * Cached fields.\r\n             * @type {?Array.<!ProtoBuf.Reflect.Message.Field>}\r\n             * @private\r\n             */\r\n            this._fields = null;\r\n\r\n            /**\r\n             * Cached fields by id.\r\n             * @type {?Object.<number,!ProtoBuf.Reflect.Message.Field>}\r\n             * @private\r\n             */\r\n            this._fieldsById = null;\r\n\r\n            /**\r\n             * Cached fields by name.\r\n             * @type {?Object.<string,!ProtoBuf.Reflect.Message.Field>}\r\n             * @private\r\n             */\r\n            this._fieldsByName = null;\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Message.prototype\r\n         * @inner\r\n         */\r\n        var MessagePrototype = Message.prototype = Object.create(Namespace.prototype);\r\n\r\n        /**\r\n         * Builds the message and returns the runtime counterpart, which is a fully functional class.\r\n         * @see ProtoBuf.Builder.Message\r\n         * @param {boolean=} rebuild Whether to rebuild or not, defaults to false\r\n         * @return {ProtoBuf.Reflect.Message} Message class\r\n         * @throws {Error} If the message cannot be built\r\n         * @expose\r\n         */\r\n        MessagePrototype.build = function(rebuild) {\r\n            if (this.clazz && !rebuild)\r\n                return this.clazz;\r\n\r\n            // Create the runtime Message class in its own scope\r\n            var clazz = (function(ProtoBuf, T) {\r\n\r\n                var fields = T.getChildren(ProtoBuf.Reflect.Message.Field),\r\n                    oneofs = T.getChildren(ProtoBuf.Reflect.Message.OneOf);\r\n\r\n                /**\r\n                 * Constructs a new runtime Message.\r\n                 * @name ProtoBuf.Builder.Message\r\n                 * @class Barebone of all runtime messages.\r\n                 * @param {!Object.<string,*>|string} values Preset values\r\n                 * @param {...string} var_args\r\n                 * @constructor\r\n                 * @throws {Error} If the message cannot be created\r\n                 */\r\n                var Message = function(values, var_args) {\r\n                    ProtoBuf.Builder.Message.call(this);\r\n\r\n                    // Create virtual oneof properties\r\n                    for (var i=0, k=oneofs.length; i<k; ++i)\r\n                        this[oneofs[i].name] = null;\r\n                    // Create fields and set default values\r\n                    for (i=0, k=fields.length; i<k; ++i) {\r\n                        var field = fields[i];\r\n                        this[field.name] =\r\n                            field.repeated ? [] :\r\n                            (field.map ? new ProtoBuf.Map(field) : null);\r\n                        if ((field.required || T.syntax === 'proto3') &&\r\n                            field.defaultValue !== null)\r\n                            this[field.name] = field.defaultValue;\r\n                    }\r\n\r\n                    if (arguments.length > 0) {\r\n                        var value;\r\n                        // Set field values from a values object\r\n                        if (arguments.length === 1 && values !== null && typeof values === 'object' &&\r\n                            /* not _another_ Message */ (typeof values.encode !== 'function' || values instanceof Message) &&\r\n                            /* not a repeated field */ !Array.isArray(values) &&\r\n                            /* not a Map */ !(values instanceof ProtoBuf.Map) &&\r\n                            /* not a ByteBuffer */ !ByteBuffer.isByteBuffer(values) &&\r\n                            /* not an ArrayBuffer */ !(values instanceof ArrayBuffer) &&\r\n                            /* not a Long */ !(ProtoBuf.Long && values instanceof ProtoBuf.Long)) {\r\n                            this.$set(values);\r\n                        } else // Set field values from arguments, in declaration order\r\n                            for (i=0, k=arguments.length; i<k; ++i)\r\n                                if (typeof (value = arguments[i]) !== 'undefined')\r\n                                    this.$set(fields[i].name, value); // May throw\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * @alias ProtoBuf.Builder.Message.prototype\r\n                 * @inner\r\n                 */\r\n                var MessagePrototype = Message.prototype = Object.create(ProtoBuf.Builder.Message.prototype);\r\n\r\n                /**\r\n                 * Adds a value to a repeated field.\r\n                 * @name ProtoBuf.Builder.Message#add\r\n                 * @function\r\n                 * @param {string} key Field name\r\n                 * @param {*} value Value to add\r\n                 * @param {boolean=} noAssert Whether to assert the value or not (asserts by default)\r\n                 * @returns {!ProtoBuf.Builder.Message} this\r\n                 * @throws {Error} If the value cannot be added\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.add = function(key, value, noAssert) {\r\n                    var field = T._fieldsByName[key];\r\n                    if (!noAssert) {\r\n                        if (!field)\r\n                            throw Error(this+\"#\"+key+\" is undefined\");\r\n                        if (!(field instanceof ProtoBuf.Reflect.Message.Field))\r\n                            throw Error(this+\"#\"+key+\" is not a field: \"+field.toString(true)); // May throw if it's an enum or embedded message\r\n                        if (!field.repeated)\r\n                            throw Error(this+\"#\"+key+\" is not a repeated field\");\r\n                        value = field.verifyValue(value, true);\r\n                    }\r\n                    if (this[key] === null)\r\n                        this[key] = [];\r\n                    this[key].push(value);\r\n                    return this;\r\n                };\r\n\r\n                /**\r\n                 * Adds a value to a repeated field. This is an alias for {@link ProtoBuf.Builder.Message#add}.\r\n                 * @name ProtoBuf.Builder.Message#$add\r\n                 * @function\r\n                 * @param {string} key Field name\r\n                 * @param {*} value Value to add\r\n                 * @param {boolean=} noAssert Whether to assert the value or not (asserts by default)\r\n                 * @returns {!ProtoBuf.Builder.Message} this\r\n                 * @throws {Error} If the value cannot be added\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.$add = MessagePrototype.add;\r\n\r\n                /**\r\n                 * Sets a field's value.\r\n                 * @name ProtoBuf.Builder.Message#set\r\n                 * @function\r\n                 * @param {string|!Object.<string,*>} keyOrObj String key or plain object holding multiple values\r\n                 * @param {(*|boolean)=} value Value to set if key is a string, otherwise omitted\r\n                 * @param {boolean=} noAssert Whether to not assert for an actual field / proper value type, defaults to `false`\r\n                 * @returns {!ProtoBuf.Builder.Message} this\r\n                 * @throws {Error} If the value cannot be set\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.set = function(keyOrObj, value, noAssert) {\r\n                    if (keyOrObj && typeof keyOrObj === 'object') {\r\n                        noAssert = value;\r\n                        for (var ikey in keyOrObj) {\r\n                            // Check if virtual oneof field - don't set these\r\n                            if (keyOrObj.hasOwnProperty(ikey) && typeof (value = keyOrObj[ikey]) !== 'undefined' && T._oneofsByName[ikey] === undefined)\r\n                                this.$set(ikey, value, noAssert);\r\n                        }\r\n                        return this;\r\n                    }\r\n                    var field = T._fieldsByName[keyOrObj];\r\n                    if (!noAssert) {\r\n                        if (!field)\r\n                            throw Error(this+\"#\"+keyOrObj+\" is not a field: undefined\");\r\n                        if (!(field instanceof ProtoBuf.Reflect.Message.Field))\r\n                            throw Error(this+\"#\"+keyOrObj+\" is not a field: \"+field.toString(true));\r\n                        this[field.name] = (value = field.verifyValue(value)); // May throw\r\n                    } else\r\n                        this[keyOrObj] = value;\r\n                    if (field && field.oneof) { // Field is part of an OneOf (not a virtual OneOf field)\r\n                        var currentField = this[field.oneof.name]; // Virtual field references currently set field\r\n                        if (value !== null) {\r\n                            if (currentField !== null && currentField !== field.name)\r\n                                this[currentField] = null; // Clear currently set field\r\n                            this[field.oneof.name] = field.name; // Point virtual field at this field\r\n                        } else if (/* value === null && */currentField === keyOrObj)\r\n                            this[field.oneof.name] = null; // Clear virtual field (current field explicitly cleared)\r\n                    }\r\n                    return this;\r\n                };\r\n\r\n                /**\r\n                 * Sets a field's value. This is an alias for [@link ProtoBuf.Builder.Message#set}.\r\n                 * @name ProtoBuf.Builder.Message#$set\r\n                 * @function\r\n                 * @param {string|!Object.<string,*>} keyOrObj String key or plain object holding multiple values\r\n                 * @param {(*|boolean)=} value Value to set if key is a string, otherwise omitted\r\n                 * @param {boolean=} noAssert Whether to not assert the value, defaults to `false`\r\n                 * @throws {Error} If the value cannot be set\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.$set = MessagePrototype.set;\r\n\r\n                /**\r\n                 * Gets a field's value.\r\n                 * @name ProtoBuf.Builder.Message#get\r\n                 * @function\r\n                 * @param {string} key Key\r\n                 * @param {boolean=} noAssert Whether to not assert for an actual field, defaults to `false`\r\n                 * @return {*} Value\r\n                 * @throws {Error} If there is no such field\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.get = function(key, noAssert) {\r\n                    if (noAssert)\r\n                        return this[key];\r\n                    var field = T._fieldsByName[key];\r\n                    if (!field || !(field instanceof ProtoBuf.Reflect.Message.Field))\r\n                        throw Error(this+\"#\"+key+\" is not a field: undefined\");\r\n                    if (!(field instanceof ProtoBuf.Reflect.Message.Field))\r\n                        throw Error(this+\"#\"+key+\" is not a field: \"+field.toString(true));\r\n                    return this[field.name];\r\n                };\r\n\r\n                /**\r\n                 * Gets a field's value. This is an alias for {@link ProtoBuf.Builder.Message#$get}.\r\n                 * @name ProtoBuf.Builder.Message#$get\r\n                 * @function\r\n                 * @param {string} key Key\r\n                 * @return {*} Value\r\n                 * @throws {Error} If there is no such field\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.$get = MessagePrototype.get;\r\n\r\n                // Getters and setters\r\n\r\n                for (var i=0; i<fields.length; i++) {\r\n                    var field = fields[i];\r\n                    // no setters for extension fields as these are named by their fqn\r\n                    if (field instanceof ProtoBuf.Reflect.Message.ExtensionField)\r\n                        continue;\r\n\r\n                    if (T.builder.options['populateAccessors'])\r\n                        (function(field) {\r\n                            // set/get[SomeValue]\r\n                            var Name = field.originalName.replace(/(_[a-zA-Z])/g, function(match) {\r\n                                return match.toUpperCase().replace('_','');\r\n                            });\r\n                            Name = Name.substring(0,1).toUpperCase() + Name.substring(1);\r\n\r\n                            // set/get_[some_value] FIXME: Do we really need these?\r\n                            var name = field.originalName.replace(/([A-Z])/g, function(match) {\r\n                                return \"_\"+match;\r\n                            });\r\n\r\n                            /**\r\n                             * The current field's unbound setter function.\r\n                             * @function\r\n                             * @param {*} value\r\n                             * @param {boolean=} noAssert\r\n                             * @returns {!ProtoBuf.Builder.Message}\r\n                             * @inner\r\n                             */\r\n                            var setter = function(value, noAssert) {\r\n                                this[field.name] = noAssert ? value : field.verifyValue(value);\r\n                                return this;\r\n                            };\r\n\r\n                            /**\r\n                             * The current field's unbound getter function.\r\n                             * @function\r\n                             * @returns {*}\r\n                             * @inner\r\n                             */\r\n                            var getter = function() {\r\n                                return this[field.name];\r\n                            };\r\n\r\n                            if (T.getChild(\"set\"+Name) === null)\r\n                                /**\r\n                                 * Sets a value. This method is present for each field, but only if there is no name conflict with\r\n                                 *  another field.\r\n                                 * @name ProtoBuf.Builder.Message#set[SomeField]\r\n                                 * @function\r\n                                 * @param {*} value Value to set\r\n                                 * @param {boolean=} noAssert Whether to not assert the value, defaults to `false`\r\n                                 * @returns {!ProtoBuf.Builder.Message} this\r\n                                 * @abstract\r\n                                 * @throws {Error} If the value cannot be set\r\n                                 */\r\n                                MessagePrototype[\"set\"+Name] = setter;\r\n\r\n                            if (T.getChild(\"set_\"+name) === null)\r\n                                /**\r\n                                 * Sets a value. This method is present for each field, but only if there is no name conflict with\r\n                                 *  another field.\r\n                                 * @name ProtoBuf.Builder.Message#set_[some_field]\r\n                                 * @function\r\n                                 * @param {*} value Value to set\r\n                                 * @param {boolean=} noAssert Whether to not assert the value, defaults to `false`\r\n                                 * @returns {!ProtoBuf.Builder.Message} this\r\n                                 * @abstract\r\n                                 * @throws {Error} If the value cannot be set\r\n                                 */\r\n                                MessagePrototype[\"set_\"+name] = setter;\r\n\r\n                            if (T.getChild(\"get\"+Name) === null)\r\n                                /**\r\n                                 * Gets a value. This method is present for each field, but only if there is no name conflict with\r\n                                 *  another field.\r\n                                 * @name ProtoBuf.Builder.Message#get[SomeField]\r\n                                 * @function\r\n                                 * @abstract\r\n                                 * @return {*} The value\r\n                                 */\r\n                                MessagePrototype[\"get\"+Name] = getter;\r\n\r\n                            if (T.getChild(\"get_\"+name) === null)\r\n                                /**\r\n                                 * Gets a value. This method is present for each field, but only if there is no name conflict with\r\n                                 *  another field.\r\n                                 * @name ProtoBuf.Builder.Message#get_[some_field]\r\n                                 * @function\r\n                                 * @return {*} The value\r\n                                 * @abstract\r\n                                 */\r\n                                MessagePrototype[\"get_\"+name] = getter;\r\n\r\n                        })(field);\r\n                }\r\n\r\n                // En-/decoding\r\n\r\n                /**\r\n                 * Encodes the message.\r\n                 * @name ProtoBuf.Builder.Message#$encode\r\n                 * @function\r\n                 * @param {(!ByteBuffer|boolean)=} buffer ByteBuffer to encode to. Will create a new one and flip it if omitted.\r\n                 * @param {boolean=} noVerify Whether to not verify field values, defaults to `false`\r\n                 * @return {!ByteBuffer} Encoded message as a ByteBuffer\r\n                 * @throws {Error} If the message cannot be encoded or if required fields are missing. The later still\r\n                 *  returns the encoded ByteBuffer in the `encoded` property on the error.\r\n                 * @expose\r\n                 * @see ProtoBuf.Builder.Message#encode64\r\n                 * @see ProtoBuf.Builder.Message#encodeHex\r\n                 * @see ProtoBuf.Builder.Message#encodeAB\r\n                 */\r\n                MessagePrototype.encode = function(buffer, noVerify) {\r\n                    if (typeof buffer === 'boolean')\r\n                        noVerify = buffer,\r\n                        buffer = undefined;\r\n                    var isNew = false;\r\n                    if (!buffer)\r\n                        buffer = new ByteBuffer(),\r\n                        isNew = true;\r\n                    var le = buffer.littleEndian;\r\n                    try {\r\n                        T.encode(this, buffer.LE(), noVerify);\r\n                        return (isNew ? buffer.flip() : buffer).LE(le);\r\n                    } catch (e) {\r\n                        buffer.LE(le);\r\n                        throw(e);\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Encodes a message using the specified data payload.\r\n                 * @param {!Object.<string,*>} data Data payload\r\n                 * @param {(!ByteBuffer|boolean)=} buffer ByteBuffer to encode to. Will create a new one and flip it if omitted.\r\n                 * @param {boolean=} noVerify Whether to not verify field values, defaults to `false`\r\n                 * @return {!ByteBuffer} Encoded message as a ByteBuffer\r\n                 * @expose\r\n                 */\r\n                Message.encode = function(data, buffer, noVerify) {\r\n                    return new Message(data).encode(buffer, noVerify);\r\n                };\r\n\r\n                /**\r\n                 * Calculates the byte length of the message.\r\n                 * @name ProtoBuf.Builder.Message#calculate\r\n                 * @function\r\n                 * @returns {number} Byte length\r\n                 * @throws {Error} If the message cannot be calculated or if required fields are missing.\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.calculate = function() {\r\n                    return T.calculate(this);\r\n                };\r\n\r\n                /**\r\n                 * Encodes the varint32 length-delimited message.\r\n                 * @name ProtoBuf.Builder.Message#encodeDelimited\r\n                 * @function\r\n                 * @param {(!ByteBuffer|boolean)=} buffer ByteBuffer to encode to. Will create a new one and flip it if omitted.\r\n                 * @param {boolean=} noVerify Whether to not verify field values, defaults to `false`\r\n                 * @return {!ByteBuffer} Encoded message as a ByteBuffer\r\n                 * @throws {Error} If the message cannot be encoded or if required fields are missing. The later still\r\n                 *  returns the encoded ByteBuffer in the `encoded` property on the error.\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.encodeDelimited = function(buffer, noVerify) {\r\n                    var isNew = false;\r\n                    if (!buffer)\r\n                        buffer = new ByteBuffer(),\r\n                        isNew = true;\r\n                    var enc = new ByteBuffer().LE();\r\n                    T.encode(this, enc, noVerify).flip();\r\n                    buffer.writeVarint32(enc.remaining());\r\n                    buffer.append(enc);\r\n                    return isNew ? buffer.flip() : buffer;\r\n                };\r\n\r\n                /**\r\n                 * Directly encodes the message to an ArrayBuffer.\r\n                 * @name ProtoBuf.Builder.Message#encodeAB\r\n                 * @function\r\n                 * @return {ArrayBuffer} Encoded message as ArrayBuffer\r\n                 * @throws {Error} If the message cannot be encoded or if required fields are missing. The later still\r\n                 *  returns the encoded ArrayBuffer in the `encoded` property on the error.\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.encodeAB = function() {\r\n                    try {\r\n                        return this.encode().toArrayBuffer();\r\n                    } catch (e) {\r\n                        if (e[\"encoded\"]) e[\"encoded\"] = e[\"encoded\"].toArrayBuffer();\r\n                        throw(e);\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Returns the message as an ArrayBuffer. This is an alias for {@link ProtoBuf.Builder.Message#encodeAB}.\r\n                 * @name ProtoBuf.Builder.Message#toArrayBuffer\r\n                 * @function\r\n                 * @return {ArrayBuffer} Encoded message as ArrayBuffer\r\n                 * @throws {Error} If the message cannot be encoded or if required fields are missing. The later still\r\n                 *  returns the encoded ArrayBuffer in the `encoded` property on the error.\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.toArrayBuffer = MessagePrototype.encodeAB;\r\n\r\n                /**\r\n                 * Directly encodes the message to a node Buffer.\r\n                 * @name ProtoBuf.Builder.Message#encodeNB\r\n                 * @function\r\n                 * @return {!Buffer}\r\n                 * @throws {Error} If the message cannot be encoded, not running under node.js or if required fields are\r\n                 *  missing. The later still returns the encoded node Buffer in the `encoded` property on the error.\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.encodeNB = function() {\r\n                    try {\r\n                        return this.encode().toBuffer();\r\n                    } catch (e) {\r\n                        if (e[\"encoded\"]) e[\"encoded\"] = e[\"encoded\"].toBuffer();\r\n                        throw(e);\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Returns the message as a node Buffer. This is an alias for {@link ProtoBuf.Builder.Message#encodeNB}.\r\n                 * @name ProtoBuf.Builder.Message#toBuffer\r\n                 * @function\r\n                 * @return {!Buffer}\r\n                 * @throws {Error} If the message cannot be encoded or if required fields are missing. The later still\r\n                 *  returns the encoded node Buffer in the `encoded` property on the error.\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.toBuffer = MessagePrototype.encodeNB;\r\n\r\n                /**\r\n                 * Directly encodes the message to a base64 encoded string.\r\n                 * @name ProtoBuf.Builder.Message#encode64\r\n                 * @function\r\n                 * @return {string} Base64 encoded string\r\n                 * @throws {Error} If the underlying buffer cannot be encoded or if required fields are missing. The later\r\n                 *  still returns the encoded base64 string in the `encoded` property on the error.\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.encode64 = function() {\r\n                    try {\r\n                        return this.encode().toBase64();\r\n                    } catch (e) {\r\n                        if (e[\"encoded\"]) e[\"encoded\"] = e[\"encoded\"].toBase64();\r\n                        throw(e);\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Returns the message as a base64 encoded string. This is an alias for {@link ProtoBuf.Builder.Message#encode64}.\r\n                 * @name ProtoBuf.Builder.Message#toBase64\r\n                 * @function\r\n                 * @return {string} Base64 encoded string\r\n                 * @throws {Error} If the message cannot be encoded or if required fields are missing. The later still\r\n                 *  returns the encoded base64 string in the `encoded` property on the error.\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.toBase64 = MessagePrototype.encode64;\r\n\r\n                /**\r\n                 * Directly encodes the message to a hex encoded string.\r\n                 * @name ProtoBuf.Builder.Message#encodeHex\r\n                 * @function\r\n                 * @return {string} Hex encoded string\r\n                 * @throws {Error} If the underlying buffer cannot be encoded or if required fields are missing. The later\r\n                 *  still returns the encoded hex string in the `encoded` property on the error.\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.encodeHex = function() {\r\n                    try {\r\n                        return this.encode().toHex();\r\n                    } catch (e) {\r\n                        if (e[\"encoded\"]) e[\"encoded\"] = e[\"encoded\"].toHex();\r\n                        throw(e);\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Returns the message as a hex encoded string. This is an alias for {@link ProtoBuf.Builder.Message#encodeHex}.\r\n                 * @name ProtoBuf.Builder.Message#toHex\r\n                 * @function\r\n                 * @return {string} Hex encoded string\r\n                 * @throws {Error} If the message cannot be encoded or if required fields are missing. The later still\r\n                 *  returns the encoded hex string in the `encoded` property on the error.\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.toHex = MessagePrototype.encodeHex;\r\n\r\n                /**\r\n                 * Clones a message object or field value to a raw object.\r\n                 * @param {*} obj Object to clone\r\n                 * @param {boolean} binaryAsBase64 Whether to include binary data as base64 strings or as a buffer otherwise\r\n                 * @param {boolean} longsAsStrings Whether to encode longs as strings\r\n                 * @param {!ProtoBuf.Reflect.T=} resolvedType The resolved field type if a field\r\n                 * @returns {*} Cloned object\r\n                 * @inner\r\n                 */\r\n                function cloneRaw(obj, binaryAsBase64, longsAsStrings, resolvedType) {\r\n                    if (obj === null || typeof obj !== 'object') {\r\n                        // Convert enum values to their respective names\r\n                        if (resolvedType && resolvedType instanceof ProtoBuf.Reflect.Enum) {\r\n                            var name = ProtoBuf.Reflect.Enum.getName(resolvedType.object, obj);\r\n                            if (name !== null)\r\n                                return name;\r\n                        }\r\n                        // Pass-through string, number, boolean, null...\r\n                        return obj;\r\n                    }\r\n                    // Convert ByteBuffers to raw buffer or strings\r\n                    if (ByteBuffer.isByteBuffer(obj))\r\n                        return binaryAsBase64 ? obj.toBase64() : obj.toBuffer();\r\n                    // Convert Longs to proper objects or strings\r\n                    if (ProtoBuf.Long.isLong(obj))\r\n                        return longsAsStrings ? obj.toString() : ProtoBuf.Long.fromValue(obj);\r\n                    var clone;\r\n                    // Clone arrays\r\n                    if (Array.isArray(obj)) {\r\n                        clone = [];\r\n                        obj.forEach(function(v, k) {\r\n                            clone[k] = cloneRaw(v, binaryAsBase64, longsAsStrings, resolvedType);\r\n                        });\r\n                        return clone;\r\n                    }\r\n                    clone = {};\r\n                    // Convert maps to objects\r\n                    if (obj instanceof ProtoBuf.Map) {\r\n                        var it = obj.entries();\r\n                        for (var e = it.next(); !e.done; e = it.next())\r\n                            clone[obj.keyElem.valueToString(e.value[0])] = cloneRaw(e.value[1], binaryAsBase64, longsAsStrings, obj.valueElem.resolvedType);\r\n                        return clone;\r\n                    }\r\n                    // Everything else is a non-null object\r\n                    var type = obj.$type,\r\n                        field = undefined;\r\n                    for (var i in obj)\r\n                        if (obj.hasOwnProperty(i)) {\r\n                            if (type && (field = type.getChild(i)))\r\n                                clone[i] = cloneRaw(obj[i], binaryAsBase64, longsAsStrings, field.resolvedType);\r\n                            else\r\n                                clone[i] = cloneRaw(obj[i], binaryAsBase64, longsAsStrings);\r\n                        }\r\n                    return clone;\r\n                }\r\n\r\n                /**\r\n                 * Returns the message's raw payload.\r\n                 * @param {boolean=} binaryAsBase64 Whether to include binary data as base64 strings instead of Buffers, defaults to `false`\r\n                 * @param {boolean} longsAsStrings Whether to encode longs as strings\r\n                 * @returns {Object.<string,*>} Raw payload\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.toRaw = function(binaryAsBase64, longsAsStrings) {\r\n                    return cloneRaw(this, !!binaryAsBase64, !!longsAsStrings, this.$type);\r\n                };\r\n\r\n                /**\r\n                 * Encodes a message to JSON.\r\n                 * @returns {string} JSON string\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.encodeJSON = function() {\r\n                    return JSON.stringify(\r\n                        cloneRaw(this,\r\n                             /* binary-as-base64 */ true,\r\n                             /* longs-as-strings */ true,\r\n                             this.$type\r\n                        )\r\n                    );\r\n                };\r\n\r\n                /**\r\n                 * Decodes a message from the specified buffer or string.\r\n                 * @name ProtoBuf.Builder.Message.decode\r\n                 * @function\r\n                 * @param {!ByteBuffer|!ArrayBuffer|!Buffer|string} buffer Buffer to decode from\r\n                 * @param {(number|string)=} length Message length. Defaults to decode all the remainig data.\r\n                 * @param {string=} enc Encoding if buffer is a string: hex, utf8 (not recommended), defaults to base64\r\n                 * @return {!ProtoBuf.Builder.Message} Decoded message\r\n                 * @throws {Error} If the message cannot be decoded or if required fields are missing. The later still\r\n                 *  returns the decoded message with missing fields in the `decoded` property on the error.\r\n                 * @expose\r\n                 * @see ProtoBuf.Builder.Message.decode64\r\n                 * @see ProtoBuf.Builder.Message.decodeHex\r\n                 */\r\n                Message.decode = function(buffer, length, enc) {\r\n                    if (typeof length === 'string')\r\n                        enc = length,\r\n                        length = -1;\r\n                    if (typeof buffer === 'string')\r\n                        buffer = ByteBuffer.wrap(buffer, enc ? enc : \"base64\");\r\n                    else if (!ByteBuffer.isByteBuffer(buffer))\r\n                        buffer = ByteBuffer.wrap(buffer); // May throw\r\n                    var le = buffer.littleEndian;\r\n                    try {\r\n                        var msg = T.decode(buffer.LE(), length);\r\n                        buffer.LE(le);\r\n                        return msg;\r\n                    } catch (e) {\r\n                        buffer.LE(le);\r\n                        throw(e);\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Decodes a varint32 length-delimited message from the specified buffer or string.\r\n                 * @name ProtoBuf.Builder.Message.decodeDelimited\r\n                 * @function\r\n                 * @param {!ByteBuffer|!ArrayBuffer|!Buffer|string} buffer Buffer to decode from\r\n                 * @param {string=} enc Encoding if buffer is a string: hex, utf8 (not recommended), defaults to base64\r\n                 * @return {ProtoBuf.Builder.Message} Decoded message or `null` if not enough bytes are available yet\r\n                 * @throws {Error} If the message cannot be decoded or if required fields are missing. The later still\r\n                 *  returns the decoded message with missing fields in the `decoded` property on the error.\r\n                 * @expose\r\n                 */\r\n                Message.decodeDelimited = function(buffer, enc) {\r\n                    if (typeof buffer === 'string')\r\n                        buffer = ByteBuffer.wrap(buffer, enc ? enc : \"base64\");\r\n                    else if (!ByteBuffer.isByteBuffer(buffer))\r\n                        buffer = ByteBuffer.wrap(buffer); // May throw\r\n                    if (buffer.remaining() < 1)\r\n                        return null;\r\n                    var off = buffer.offset,\r\n                        len = buffer.readVarint32();\r\n                    if (buffer.remaining() < len) {\r\n                        buffer.offset = off;\r\n                        return null;\r\n                    }\r\n                    try {\r\n                        var msg = T.decode(buffer.slice(buffer.offset, buffer.offset + len).LE());\r\n                        buffer.offset += len;\r\n                        return msg;\r\n                    } catch (err) {\r\n                        buffer.offset += len;\r\n                        throw err;\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Decodes the message from the specified base64 encoded string.\r\n                 * @name ProtoBuf.Builder.Message.decode64\r\n                 * @function\r\n                 * @param {string} str String to decode from\r\n                 * @return {!ProtoBuf.Builder.Message} Decoded message\r\n                 * @throws {Error} If the message cannot be decoded or if required fields are missing. The later still\r\n                 *  returns the decoded message with missing fields in the `decoded` property on the error.\r\n                 * @expose\r\n                 */\r\n                Message.decode64 = function(str) {\r\n                    return Message.decode(str, \"base64\");\r\n                };\r\n\r\n                /**\r\n                 * Decodes the message from the specified hex encoded string.\r\n                 * @name ProtoBuf.Builder.Message.decodeHex\r\n                 * @function\r\n                 * @param {string} str String to decode from\r\n                 * @return {!ProtoBuf.Builder.Message} Decoded message\r\n                 * @throws {Error} If the message cannot be decoded or if required fields are missing. The later still\r\n                 *  returns the decoded message with missing fields in the `decoded` property on the error.\r\n                 * @expose\r\n                 */\r\n                Message.decodeHex = function(str) {\r\n                    return Message.decode(str, \"hex\");\r\n                };\r\n\r\n                /**\r\n                 * Decodes the message from a JSON string.\r\n                 * @name ProtoBuf.Builder.Message.decodeJSON\r\n                 * @function\r\n                 * @param {string} str String to decode from\r\n                 * @return {!ProtoBuf.Builder.Message} Decoded message\r\n                 * @throws {Error} If the message cannot be decoded or if required fields are\r\n                 * missing.\r\n                 * @expose\r\n                 */\r\n                Message.decodeJSON = function(str) {\r\n                    return new Message(JSON.parse(str));\r\n                };\r\n\r\n                // Utility\r\n\r\n                /**\r\n                 * Returns a string representation of this Message.\r\n                 * @name ProtoBuf.Builder.Message#toString\r\n                 * @function\r\n                 * @return {string} String representation as of \".Fully.Qualified.MessageName\"\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.toString = function() {\r\n                    return T.toString();\r\n                };\r\n\r\n                // Properties\r\n\r\n                /**\r\n                 * Message options.\r\n                 * @name ProtoBuf.Builder.Message.$options\r\n                 * @type {Object.<string,*>}\r\n                 * @expose\r\n                 */\r\n                var $optionsS; // cc needs this\r\n\r\n                /**\r\n                 * Message options.\r\n                 * @name ProtoBuf.Builder.Message#$options\r\n                 * @type {Object.<string,*>}\r\n                 * @expose\r\n                 */\r\n                var $options;\r\n\r\n                /**\r\n                 * Reflection type.\r\n                 * @name ProtoBuf.Builder.Message.$type\r\n                 * @type {!ProtoBuf.Reflect.Message}\r\n                 * @expose\r\n                 */\r\n                var $typeS;\r\n\r\n                /**\r\n                 * Reflection type.\r\n                 * @name ProtoBuf.Builder.Message#$type\r\n                 * @type {!ProtoBuf.Reflect.Message}\r\n                 * @expose\r\n                 */\r\n                var $type;\r\n\r\n                if (Object.defineProperty)\r\n                    Object.defineProperty(Message, '$options', { \"value\": T.buildOpt() }),\r\n                    Object.defineProperty(MessagePrototype, \"$options\", { \"value\": Message[\"$options\"] }),\r\n                    Object.defineProperty(Message, \"$type\", { \"value\": T }),\r\n                    Object.defineProperty(MessagePrototype, \"$type\", { \"value\": T });\r\n\r\n                return Message;\r\n\r\n            })(ProtoBuf, this);\r\n\r\n            // Static enums and prototyped sub-messages / cached collections\r\n            this._fields = [];\r\n            this._fieldsById = {};\r\n            this._fieldsByName = {};\r\n            this._oneofsByName = {};\r\n            for (var i=0, k=this.children.length, child; i<k; i++) {\r\n                child = this.children[i];\r\n                if (child instanceof Enum || child instanceof Message || child instanceof Service) {\r\n                    if (clazz.hasOwnProperty(child.name))\r\n                        throw Error(\"Illegal reflect child of \"+this.toString(true)+\": \"+child.toString(true)+\" cannot override static property '\"+child.name+\"'\");\r\n                    clazz[child.name] = child.build();\r\n                } else if (child instanceof Message.Field)\r\n                    child.build(),\r\n                    this._fields.push(child),\r\n                    this._fieldsById[child.id] = child,\r\n                    this._fieldsByName[child.name] = child;\r\n                else if (child instanceof Message.OneOf) {\r\n                    this._oneofsByName[child.name] = child;\r\n                }\r\n                else if (!(child instanceof Message.OneOf) && !(child instanceof Extension)) // Not built\r\n                    throw Error(\"Illegal reflect child of \"+this.toString(true)+\": \"+this.children[i].toString(true));\r\n            }\r\n\r\n            return this.clazz = clazz;\r\n        };\r\n\r\n        /**\r\n         * Encodes a runtime message's contents to the specified buffer.\r\n         * @param {!ProtoBuf.Builder.Message} message Runtime message to encode\r\n         * @param {ByteBuffer} buffer ByteBuffer to write to\r\n         * @param {boolean=} noVerify Whether to not verify field values, defaults to `false`\r\n         * @return {ByteBuffer} The ByteBuffer for chaining\r\n         * @throws {Error} If required fields are missing or the message cannot be encoded for another reason\r\n         * @expose\r\n         */\r\n        MessagePrototype.encode = function(message, buffer, noVerify) {\r\n            var fieldMissing = null,\r\n                field;\r\n            for (var i=0, k=this._fields.length, val; i<k; ++i) {\r\n                field = this._fields[i];\r\n                val = message[field.name];\r\n                if (field.required && val === null) {\r\n                    if (fieldMissing === null)\r\n                        fieldMissing = field;\r\n                } else\r\n                    field.encode(noVerify ? val : field.verifyValue(val), buffer, message);\r\n            }\r\n            if (fieldMissing !== null) {\r\n                var err = Error(\"Missing at least one required field for \"+this.toString(true)+\": \"+fieldMissing);\r\n                err[\"encoded\"] = buffer; // Still expose what we got\r\n                throw(err);\r\n            }\r\n            return buffer;\r\n        };\r\n\r\n        /**\r\n         * Calculates a runtime message's byte length.\r\n         * @param {!ProtoBuf.Builder.Message} message Runtime message to encode\r\n         * @returns {number} Byte length\r\n         * @throws {Error} If required fields are missing or the message cannot be calculated for another reason\r\n         * @expose\r\n         */\r\n        MessagePrototype.calculate = function(message) {\r\n            for (var n=0, i=0, k=this._fields.length, field, val; i<k; ++i) {\r\n                field = this._fields[i];\r\n                val = message[field.name];\r\n                if (field.required && val === null)\r\n                   throw Error(\"Missing at least one required field for \"+this.toString(true)+\": \"+field);\r\n                else\r\n                    n += field.calculate(val, message);\r\n            }\r\n            return n;\r\n        };\r\n\r\n        /**\r\n         * Skips all data until the end of the specified group has been reached.\r\n         * @param {number} expectedId Expected GROUPEND id\r\n         * @param {!ByteBuffer} buf ByteBuffer\r\n         * @returns {boolean} `true` if a value as been skipped, `false` if the end has been reached\r\n         * @throws {Error} If it wasn't possible to find the end of the group (buffer overrun or end tag mismatch)\r\n         * @inner\r\n         */\r\n        function skipTillGroupEnd(expectedId, buf) {\r\n            var tag = buf.readVarint32(), // Throws on OOB\r\n                wireType = tag & 0x07,\r\n                id = tag >>> 3;\r\n            switch (wireType) {\r\n                case ProtoBuf.WIRE_TYPES.VARINT:\r\n                    do tag = buf.readUint8();\r\n                    while ((tag & 0x80) === 0x80);\r\n                    break;\r\n                case ProtoBuf.WIRE_TYPES.BITS64:\r\n                    buf.offset += 8;\r\n                    break;\r\n                case ProtoBuf.WIRE_TYPES.LDELIM:\r\n                    tag = buf.readVarint32(); // reads the varint\r\n                    buf.offset += tag;        // skips n bytes\r\n                    break;\r\n                case ProtoBuf.WIRE_TYPES.STARTGROUP:\r\n                    skipTillGroupEnd(id, buf);\r\n                    break;\r\n                case ProtoBuf.WIRE_TYPES.ENDGROUP:\r\n                    if (id === expectedId)\r\n                        return false;\r\n                    else\r\n                        throw Error(\"Illegal GROUPEND after unknown group: \"+id+\" (\"+expectedId+\" expected)\");\r\n                case ProtoBuf.WIRE_TYPES.BITS32:\r\n                    buf.offset += 4;\r\n                    break;\r\n                default:\r\n                    throw Error(\"Illegal wire type in unknown group \"+expectedId+\": \"+wireType);\r\n            }\r\n            return true;\r\n        }\r\n\r\n        /**\r\n         * Decodes an encoded message and returns the decoded message.\r\n         * @param {ByteBuffer} buffer ByteBuffer to decode from\r\n         * @param {number=} length Message length. Defaults to decode all remaining data.\r\n         * @param {number=} expectedGroupEndId Expected GROUPEND id if this is a legacy group\r\n         * @return {ProtoBuf.Builder.Message} Decoded message\r\n         * @throws {Error} If the message cannot be decoded\r\n         * @expose\r\n         */\r\n        MessagePrototype.decode = function(buffer, length, expectedGroupEndId) {\r\n            if (typeof length !== 'number')\r\n                length = -1;\r\n            var start = buffer.offset,\r\n                msg = new (this.clazz)(),\r\n                tag, wireType, id, field;\r\n            while (buffer.offset < start+length || (length === -1 && buffer.remaining() > 0)) {\r\n                tag = buffer.readVarint32();\r\n                wireType = tag & 0x07;\r\n                id = tag >>> 3;\r\n                if (wireType === ProtoBuf.WIRE_TYPES.ENDGROUP) {\r\n                    if (id !== expectedGroupEndId)\r\n                        throw Error(\"Illegal group end indicator for \"+this.toString(true)+\": \"+id+\" (\"+(expectedGroupEndId ? expectedGroupEndId+\" expected\" : \"not a group\")+\")\");\r\n                    break;\r\n                }\r\n                if (!(field = this._fieldsById[id])) {\r\n                    // \"messages created by your new code can be parsed by your old code: old binaries simply ignore the new field when parsing.\"\r\n                    switch (wireType) {\r\n                        case ProtoBuf.WIRE_TYPES.VARINT:\r\n                            buffer.readVarint32();\r\n                            break;\r\n                        case ProtoBuf.WIRE_TYPES.BITS32:\r\n                            buffer.offset += 4;\r\n                            break;\r\n                        case ProtoBuf.WIRE_TYPES.BITS64:\r\n                            buffer.offset += 8;\r\n                            break;\r\n                        case ProtoBuf.WIRE_TYPES.LDELIM:\r\n                            var len = buffer.readVarint32();\r\n                            buffer.offset += len;\r\n                            break;\r\n                        case ProtoBuf.WIRE_TYPES.STARTGROUP:\r\n                            while (skipTillGroupEnd(id, buffer)) {}\r\n                            break;\r\n                        default:\r\n                            throw Error(\"Illegal wire type for unknown field \"+id+\" in \"+this.toString(true)+\"#decode: \"+wireType);\r\n                    }\r\n                    continue;\r\n                }\r\n                if (field.repeated && !field.options[\"packed\"]) {\r\n                    msg[field.name].push(field.decode(wireType, buffer));\r\n                } else if (field.map) {\r\n                    var keyval = field.decode(wireType, buffer);\r\n                    msg[field.name].set(keyval[0], keyval[1]);\r\n                } else {\r\n                    msg[field.name] = field.decode(wireType, buffer);\r\n                    if (field.oneof) { // Field is part of an OneOf (not a virtual OneOf field)\r\n                        var currentField = msg[field.oneof.name]; // Virtual field references currently set field\r\n                        if (currentField !== null && currentField !== field.name)\r\n                            msg[currentField] = null; // Clear currently set field\r\n                        msg[field.oneof.name] = field.name; // Point virtual field at this field\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Check if all required fields are present and set default values for optional fields that are not\r\n            for (var i=0, k=this._fields.length; i<k; ++i) {\r\n                field = this._fields[i];\r\n                if (msg[field.name] === null) {\r\n                    if (this.syntax === \"proto3\") { // Proto3 sets default values by specification\r\n                        msg[field.name] = field.defaultValue;\r\n                    } else if (field.required) {\r\n                        var err = Error(\"Missing at least one required field for \" + this.toString(true) + \": \" + field.name);\r\n                        err[\"decoded\"] = msg; // Still expose what we got\r\n                        throw(err);\r\n                    } else if (ProtoBuf.populateDefaults && field.defaultValue !== null)\r\n                        msg[field.name] = field.defaultValue;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Message\r\n         * @expose\r\n         */\r\n        Reflect.Message = Message;\r\n\r\n        /**\r\n         * Constructs a new Message Field.\r\n         * @exports ProtoBuf.Reflect.Message.Field\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.Message} message Message reference\r\n         * @param {string} rule Rule, one of requried, optional, repeated\r\n         * @param {string?} keytype Key data type, if any.\r\n         * @param {string} type Data type, e.g. int32\r\n         * @param {string} name Field name\r\n         * @param {number} id Unique field id\r\n         * @param {Object.<string,*>=} options Options\r\n         * @param {!ProtoBuf.Reflect.Message.OneOf=} oneof Enclosing OneOf\r\n         * @param {string?} syntax The syntax level of this definition (e.g., proto3)\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.T\r\n         */\r\n        var Field = function(builder, message, rule, keytype, type, name, id, options, oneof, syntax) {\r\n            T.call(this, builder, message, name);\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            this.className = \"Message.Field\";\r\n\r\n            /**\r\n             * Message field required flag.\r\n             * @type {boolean}\r\n             * @expose\r\n             */\r\n            this.required = rule === \"required\";\r\n\r\n            /**\r\n             * Message field repeated flag.\r\n             * @type {boolean}\r\n             * @expose\r\n             */\r\n            this.repeated = rule === \"repeated\";\r\n\r\n            /**\r\n             * Message field map flag.\r\n             * @type {boolean}\r\n             * @expose\r\n             */\r\n            this.map = rule === \"map\";\r\n\r\n            /**\r\n             * Message field key type. Type reference string if unresolved, protobuf\r\n             * type if resolved. Valid only if this.map === true, null otherwise.\r\n             * @type {string|{name: string, wireType: number}|null}\r\n             * @expose\r\n             */\r\n            this.keyType = keytype || null;\r\n\r\n            /**\r\n             * Message field type. Type reference string if unresolved, protobuf type if\r\n             * resolved. In a map field, this is the value type.\r\n             * @type {string|{name: string, wireType: number}}\r\n             * @expose\r\n             */\r\n            this.type = type;\r\n\r\n            /**\r\n             * Resolved type reference inside the global namespace.\r\n             * @type {ProtoBuf.Reflect.T|null}\r\n             * @expose\r\n             */\r\n            this.resolvedType = null;\r\n\r\n            /**\r\n             * Unique message field id.\r\n             * @type {number}\r\n             * @expose\r\n             */\r\n            this.id = id;\r\n\r\n            /**\r\n             * Message field options.\r\n             * @type {!Object.<string,*>}\r\n             * @dict\r\n             * @expose\r\n             */\r\n            this.options = options || {};\r\n\r\n            /**\r\n             * Default value.\r\n             * @type {*}\r\n             * @expose\r\n             */\r\n            this.defaultValue = null;\r\n\r\n            /**\r\n             * Enclosing OneOf.\r\n             * @type {?ProtoBuf.Reflect.Message.OneOf}\r\n             * @expose\r\n             */\r\n            this.oneof = oneof || null;\r\n\r\n            /**\r\n             * Syntax level of this definition (e.g., proto3).\r\n             * @type {string}\r\n             * @expose\r\n             */\r\n            this.syntax = syntax || 'proto2';\r\n\r\n            /**\r\n             * Original field name.\r\n             * @type {string}\r\n             * @expose\r\n             */\r\n            this.originalName = this.name; // Used to revert camelcase transformation on naming collisions\r\n\r\n            /**\r\n             * Element implementation. Created in build() after types are resolved.\r\n             * @type {ProtoBuf.Element}\r\n             * @expose\r\n             */\r\n            this.element = null;\r\n\r\n            /**\r\n             * Key element implementation, for map fields. Created in build() after\r\n             * types are resolved.\r\n             * @type {ProtoBuf.Element}\r\n             * @expose\r\n             */\r\n            this.keyElement = null;\r\n\r\n            // Convert field names to camel case notation if the override is set\r\n            if (this.builder.options['convertFieldsToCamelCase'] && !(this instanceof Message.ExtensionField))\r\n                this.name = ProtoBuf.Util.toCamelCase(this.name);\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Message.Field.prototype\r\n         * @inner\r\n         */\r\n        var FieldPrototype = Field.prototype = Object.create(T.prototype);\r\n\r\n        /**\r\n         * Builds the field.\r\n         * @override\r\n         * @expose\r\n         */\r\n        FieldPrototype.build = function() {\r\n            this.element = new Element(this.type, this.resolvedType, false, this.syntax, this.name);\r\n            if (this.map)\r\n                this.keyElement = new Element(this.keyType, undefined, true, this.syntax, this.name);\r\n\r\n            // In proto3, fields do not have field presence, and every field is set to\r\n            // its type's default value (\"\", 0, 0.0, or false).\r\n            if (this.syntax === 'proto3' && !this.repeated && !this.map)\r\n                this.defaultValue = Element.defaultFieldValue(this.type);\r\n\r\n            // Otherwise, default values are present when explicitly specified\r\n            else if (typeof this.options['default'] !== 'undefined')\r\n                this.defaultValue = this.verifyValue(this.options['default']);\r\n        };\r\n\r\n        /**\r\n         * Checks if the given value can be set for this field.\r\n         * @param {*} value Value to check\r\n         * @param {boolean=} skipRepeated Whether to skip the repeated value check or not. Defaults to false.\r\n         * @return {*} Verified, maybe adjusted, value\r\n         * @throws {Error} If the value cannot be set for this field\r\n         * @expose\r\n         */\r\n        FieldPrototype.verifyValue = function(value, skipRepeated) {\r\n            skipRepeated = skipRepeated || false;\r\n            var self = this;\r\n            function fail(val, msg) {\r\n                throw Error(\"Illegal value for \"+self.toString(true)+\" of type \"+self.type.name+\": \"+val+\" (\"+msg+\")\");\r\n            }\r\n            if (value === null) { // NULL values for optional fields\r\n                if (this.required)\r\n                    fail(typeof value, \"required\");\r\n                if (this.syntax === 'proto3' && this.type !== ProtoBuf.TYPES[\"message\"])\r\n                    fail(typeof value, \"proto3 field without field presence cannot be null\");\r\n                return null;\r\n            }\r\n            var i;\r\n            if (this.repeated && !skipRepeated) { // Repeated values as arrays\r\n                if (!Array.isArray(value))\r\n                    value = [value];\r\n                var res = [];\r\n                for (i=0; i<value.length; i++)\r\n                    res.push(this.element.verifyValue(value[i]));\r\n                return res;\r\n            }\r\n            if (this.map && !skipRepeated) { // Map values as objects\r\n                if (!(value instanceof ProtoBuf.Map)) {\r\n                    // If not already a Map, attempt to convert.\r\n                    if (!(value instanceof Object)) {\r\n                        fail(typeof value,\r\n                             \"expected ProtoBuf.Map or raw object for map field\");\r\n                    }\r\n                    return new ProtoBuf.Map(this, value);\r\n                } else {\r\n                    return value;\r\n                }\r\n            }\r\n            // All non-repeated fields expect no array\r\n            if (!this.repeated && Array.isArray(value))\r\n                fail(typeof value, \"no array expected\");\r\n\r\n            return this.element.verifyValue(value);\r\n        };\r\n\r\n        /**\r\n         * Determines whether the field will have a presence on the wire given its\r\n         * value.\r\n         * @param {*} value Verified field value\r\n         * @param {!ProtoBuf.Builder.Message} message Runtime message\r\n         * @return {boolean} Whether the field will be present on the wire\r\n         */\r\n        FieldPrototype.hasWirePresence = function(value, message) {\r\n            if (this.syntax !== 'proto3')\r\n                return (value !== null);\r\n            if (this.oneof && message[this.oneof.name] === this.name)\r\n                return true;\r\n            switch (this.type) {\r\n                case ProtoBuf.TYPES[\"int32\"]:\r\n                case ProtoBuf.TYPES[\"sint32\"]:\r\n                case ProtoBuf.TYPES[\"sfixed32\"]:\r\n                case ProtoBuf.TYPES[\"uint32\"]:\r\n                case ProtoBuf.TYPES[\"fixed32\"]:\r\n                    return value !== 0;\r\n\r\n                case ProtoBuf.TYPES[\"int64\"]:\r\n                case ProtoBuf.TYPES[\"sint64\"]:\r\n                case ProtoBuf.TYPES[\"sfixed64\"]:\r\n                case ProtoBuf.TYPES[\"uint64\"]:\r\n                case ProtoBuf.TYPES[\"fixed64\"]:\r\n                    return value.low !== 0 || value.high !== 0;\r\n\r\n                case ProtoBuf.TYPES[\"bool\"]:\r\n                    return value;\r\n\r\n                case ProtoBuf.TYPES[\"float\"]:\r\n                case ProtoBuf.TYPES[\"double\"]:\r\n                    return value !== 0.0;\r\n\r\n                case ProtoBuf.TYPES[\"string\"]:\r\n                    return value.length > 0;\r\n\r\n                case ProtoBuf.TYPES[\"bytes\"]:\r\n                    return value.remaining() > 0;\r\n\r\n                case ProtoBuf.TYPES[\"enum\"]:\r\n                    return value !== 0;\r\n\r\n                case ProtoBuf.TYPES[\"message\"]:\r\n                    return value !== null;\r\n                default:\r\n                    return true;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified field value to the specified buffer.\r\n         * @param {*} value Verified field value\r\n         * @param {ByteBuffer} buffer ByteBuffer to encode to\r\n         * @param {!ProtoBuf.Builder.Message} message Runtime message\r\n         * @return {ByteBuffer} The ByteBuffer for chaining\r\n         * @throws {Error} If the field cannot be encoded\r\n         * @expose\r\n         */\r\n        FieldPrototype.encode = function(value, buffer, message) {\r\n            if (this.type === null || typeof this.type !== 'object')\r\n                throw Error(\"[INTERNAL] Unresolved type in \"+this.toString(true)+\": \"+this.type);\r\n            if (value === null || (this.repeated && value.length == 0))\r\n                return buffer; // Optional omitted\r\n            try {\r\n                if (this.repeated) {\r\n                    var i;\r\n                    // \"Only repeated fields of primitive numeric types (types which use the varint, 32-bit, or 64-bit wire\r\n                    // types) can be declared 'packed'.\"\r\n                    if (this.options[\"packed\"] && ProtoBuf.PACKABLE_WIRE_TYPES.indexOf(this.type.wireType) >= 0) {\r\n                        // \"All of the elements of the field are packed into a single key-value pair with wire type 2\r\n                        // (length-delimited). Each element is encoded the same way it would be normally, except without a\r\n                        // tag preceding it.\"\r\n                        buffer.writeVarint32((this.id << 3) | ProtoBuf.WIRE_TYPES.LDELIM);\r\n                        buffer.ensureCapacity(buffer.offset += 1); // We do not know the length yet, so let's assume a varint of length 1\r\n                        var start = buffer.offset; // Remember where the contents begin\r\n                        for (i=0; i<value.length; i++)\r\n                            this.element.encodeValue(this.id, value[i], buffer);\r\n                        var len = buffer.offset-start,\r\n                            varintLen = ByteBuffer.calculateVarint32(len);\r\n                        if (varintLen > 1) { // We need to move the contents\r\n                            var contents = buffer.slice(start, buffer.offset);\r\n                            start += varintLen-1;\r\n                            buffer.offset = start;\r\n                            buffer.append(contents);\r\n                        }\r\n                        buffer.writeVarint32(len, start-varintLen);\r\n                    } else {\r\n                        // \"If your message definition has repeated elements (without the [packed=true] option), the encoded\r\n                        // message has zero or more key-value pairs with the same tag number\"\r\n                        for (i=0; i<value.length; i++)\r\n                            buffer.writeVarint32((this.id << 3) | this.type.wireType),\r\n                            this.element.encodeValue(this.id, value[i], buffer);\r\n                    }\r\n                } else if (this.map) {\r\n                    // Write out each map entry as a submessage.\r\n                    value.forEach(function(val, key, m) {\r\n                        // Compute the length of the submessage (key, val) pair.\r\n                        var length =\r\n                            ByteBuffer.calculateVarint32((1 << 3) | this.keyType.wireType) +\r\n                            this.keyElement.calculateLength(1, key) +\r\n                            ByteBuffer.calculateVarint32((2 << 3) | this.type.wireType) +\r\n                            this.element.calculateLength(2, val);\r\n\r\n                        // Submessage with wire type of length-delimited.\r\n                        buffer.writeVarint32((this.id << 3) | ProtoBuf.WIRE_TYPES.LDELIM);\r\n                        buffer.writeVarint32(length);\r\n\r\n                        // Write out the key and val.\r\n                        buffer.writeVarint32((1 << 3) | this.keyType.wireType);\r\n                        this.keyElement.encodeValue(1, key, buffer);\r\n                        buffer.writeVarint32((2 << 3) | this.type.wireType);\r\n                        this.element.encodeValue(2, val, buffer);\r\n                    }, this);\r\n                } else {\r\n                    if (this.hasWirePresence(value, message)) {\r\n                        buffer.writeVarint32((this.id << 3) | this.type.wireType);\r\n                        this.element.encodeValue(this.id, value, buffer);\r\n                    }\r\n                }\r\n            } catch (e) {\r\n                throw Error(\"Illegal value for \"+this.toString(true)+\": \"+value+\" (\"+e+\")\");\r\n            }\r\n            return buffer;\r\n        };\r\n\r\n        /**\r\n         * Calculates the length of this field's value on the network level.\r\n         * @param {*} value Field value\r\n         * @param {!ProtoBuf.Builder.Message} message Runtime message\r\n         * @returns {number} Byte length\r\n         * @expose\r\n         */\r\n        FieldPrototype.calculate = function(value, message) {\r\n            value = this.verifyValue(value); // May throw\r\n            if (this.type === null || typeof this.type !== 'object')\r\n                throw Error(\"[INTERNAL] Unresolved type in \"+this.toString(true)+\": \"+this.type);\r\n            if (value === null || (this.repeated && value.length == 0))\r\n                return 0; // Optional omitted\r\n            var n = 0;\r\n            try {\r\n                if (this.repeated) {\r\n                    var i, ni;\r\n                    if (this.options[\"packed\"] && ProtoBuf.PACKABLE_WIRE_TYPES.indexOf(this.type.wireType) >= 0) {\r\n                        n += ByteBuffer.calculateVarint32((this.id << 3) | ProtoBuf.WIRE_TYPES.LDELIM);\r\n                        ni = 0;\r\n                        for (i=0; i<value.length; i++)\r\n                            ni += this.element.calculateLength(this.id, value[i]);\r\n                        n += ByteBuffer.calculateVarint32(ni);\r\n                        n += ni;\r\n                    } else {\r\n                        for (i=0; i<value.length; i++)\r\n                            n += ByteBuffer.calculateVarint32((this.id << 3) | this.type.wireType),\r\n                            n += this.element.calculateLength(this.id, value[i]);\r\n                    }\r\n                } else if (this.map) {\r\n                    // Each map entry becomes a submessage.\r\n                    value.forEach(function(val, key, m) {\r\n                        // Compute the length of the submessage (key, val) pair.\r\n                        var length =\r\n                            ByteBuffer.calculateVarint32((1 << 3) | this.keyType.wireType) +\r\n                            this.keyElement.calculateLength(1, key) +\r\n                            ByteBuffer.calculateVarint32((2 << 3) | this.type.wireType) +\r\n                            this.element.calculateLength(2, val);\r\n\r\n                        n += ByteBuffer.calculateVarint32((this.id << 3) | ProtoBuf.WIRE_TYPES.LDELIM);\r\n                        n += ByteBuffer.calculateVarint32(length);\r\n                        n += length;\r\n                    }, this);\r\n                } else {\r\n                    if (this.hasWirePresence(value, message)) {\r\n                        n += ByteBuffer.calculateVarint32((this.id << 3) | this.type.wireType);\r\n                        n += this.element.calculateLength(this.id, value);\r\n                    }\r\n                }\r\n            } catch (e) {\r\n                throw Error(\"Illegal value for \"+this.toString(true)+\": \"+value+\" (\"+e+\")\");\r\n            }\r\n            return n;\r\n        };\r\n\r\n        /**\r\n         * Decode the field value from the specified buffer.\r\n         * @param {number} wireType Leading wire type\r\n         * @param {ByteBuffer} buffer ByteBuffer to decode from\r\n         * @param {boolean=} skipRepeated Whether to skip the repeated check or not. Defaults to false.\r\n         * @return {*} Decoded value: array for packed repeated fields, [key, value] for\r\n         *             map fields, or an individual value otherwise.\r\n         * @throws {Error} If the field cannot be decoded\r\n         * @expose\r\n         */\r\n        FieldPrototype.decode = function(wireType, buffer, skipRepeated) {\r\n            var value, nBytes;\r\n\r\n            // We expect wireType to match the underlying type's wireType unless we see\r\n            // a packed repeated field, or unless this is a map field.\r\n            var wireTypeOK =\r\n                (!this.map && wireType == this.type.wireType) ||\r\n                (!skipRepeated && this.repeated && this.options[\"packed\"] &&\r\n                 wireType == ProtoBuf.WIRE_TYPES.LDELIM) ||\r\n                (this.map && wireType == ProtoBuf.WIRE_TYPES.LDELIM);\r\n            if (!wireTypeOK)\r\n                throw Error(\"Illegal wire type for field \"+this.toString(true)+\": \"+wireType+\" (\"+this.type.wireType+\" expected)\");\r\n\r\n            // Handle packed repeated fields.\r\n            if (wireType == ProtoBuf.WIRE_TYPES.LDELIM && this.repeated && this.options[\"packed\"] && ProtoBuf.PACKABLE_WIRE_TYPES.indexOf(this.type.wireType) >= 0) {\r\n                if (!skipRepeated) {\r\n                    nBytes = buffer.readVarint32();\r\n                    nBytes = buffer.offset + nBytes; // Limit\r\n                    var values = [];\r\n                    while (buffer.offset < nBytes)\r\n                        values.push(this.decode(this.type.wireType, buffer, true));\r\n                    return values;\r\n                }\r\n                // Read the next value otherwise...\r\n            }\r\n\r\n            // Handle maps.\r\n            if (this.map) {\r\n                // Read one (key, value) submessage, and return [key, value]\r\n                var key = Element.defaultFieldValue(this.keyType);\r\n                value = Element.defaultFieldValue(this.type);\r\n\r\n                // Read the length\r\n                nBytes = buffer.readVarint32();\r\n                if (buffer.remaining() < nBytes)\r\n                    throw Error(\"Illegal number of bytes for \"+this.toString(true)+\": \"+nBytes+\" required but got only \"+buffer.remaining());\r\n\r\n                // Get a sub-buffer of this key/value submessage\r\n                var msgbuf = buffer.clone();\r\n                msgbuf.limit = msgbuf.offset + nBytes;\r\n                buffer.offset += nBytes;\r\n\r\n                while (msgbuf.remaining() > 0) {\r\n                    var tag = msgbuf.readVarint32();\r\n                    wireType = tag & 0x07;\r\n                    var id = tag >>> 3;\r\n                    if (id === 1) {\r\n                        key = this.keyElement.decode(msgbuf, wireType, id);\r\n                    } else if (id === 2) {\r\n                        value = this.element.decode(msgbuf, wireType, id);\r\n                    } else {\r\n                        throw Error(\"Unexpected tag in map field key/value submessage\");\r\n                    }\r\n                }\r\n\r\n                return [key, value];\r\n            }\r\n\r\n            // Handle singular and non-packed repeated field values.\r\n            return this.element.decode(buffer, wireType, this.id);\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Message.Field\r\n         * @expose\r\n         */\r\n        Reflect.Message.Field = Field;\r\n\r\n        /**\r\n         * Constructs a new Message ExtensionField.\r\n         * @exports ProtoBuf.Reflect.Message.ExtensionField\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.Message} message Message reference\r\n         * @param {string} rule Rule, one of requried, optional, repeated\r\n         * @param {string} type Data type, e.g. int32\r\n         * @param {string} name Field name\r\n         * @param {number} id Unique field id\r\n         * @param {!Object.<string,*>=} options Options\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.Message.Field\r\n         */\r\n        var ExtensionField = function(builder, message, rule, type, name, id, options) {\r\n            Field.call(this, builder, message, rule, /* keytype = */ null, type, name, id, options);\r\n\r\n            /**\r\n             * Extension reference.\r\n             * @type {!ProtoBuf.Reflect.Extension}\r\n             * @expose\r\n             */\r\n            this.extension;\r\n        };\r\n\r\n        // Extends Field\r\n        ExtensionField.prototype = Object.create(Field.prototype);\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Message.ExtensionField\r\n         * @expose\r\n         */\r\n        Reflect.Message.ExtensionField = ExtensionField;\r\n\r\n        /**\r\n         * Constructs a new Message OneOf.\r\n         * @exports ProtoBuf.Reflect.Message.OneOf\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.Message} message Message reference\r\n         * @param {string} name OneOf name\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.T\r\n         */\r\n        var OneOf = function(builder, message, name) {\r\n            T.call(this, builder, message, name);\r\n\r\n            /**\r\n             * Enclosed fields.\r\n             * @type {!Array.<!ProtoBuf.Reflect.Message.Field>}\r\n             * @expose\r\n             */\r\n            this.fields = [];\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Message.OneOf\r\n         * @expose\r\n         */\r\n        Reflect.Message.OneOf = OneOf;\r\n\r\n        /**\r\n         * Constructs a new Enum.\r\n         * @exports ProtoBuf.Reflect.Enum\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.T} parent Parent Reflect object\r\n         * @param {string} name Enum name\r\n         * @param {Object.<string,*>=} options Enum options\r\n         * @param {string?} syntax The syntax level (e.g., proto3)\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.Namespace\r\n         */\r\n        var Enum = function(builder, parent, name, options, syntax) {\r\n            Namespace.call(this, builder, parent, name, options, syntax);\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            this.className = \"Enum\";\r\n\r\n            /**\r\n             * Runtime enum object.\r\n             * @type {Object.<string,number>|null}\r\n             * @expose\r\n             */\r\n            this.object = null;\r\n        };\r\n\r\n        /**\r\n         * Gets the string name of an enum value.\r\n         * @param {!ProtoBuf.Builder.Enum} enm Runtime enum\r\n         * @param {number} value Enum value\r\n         * @returns {?string} Name or `null` if not present\r\n         * @expose\r\n         */\r\n        Enum.getName = function(enm, value) {\r\n            var keys = Object.keys(enm);\r\n            for (var i=0, key; i<keys.length; ++i)\r\n                if (enm[key = keys[i]] === value)\r\n                    return key;\r\n            return null;\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Enum.prototype\r\n         * @inner\r\n         */\r\n        var EnumPrototype = Enum.prototype = Object.create(Namespace.prototype);\r\n\r\n        /**\r\n         * Builds this enum and returns the runtime counterpart.\r\n         * @param {boolean} rebuild Whether to rebuild or not, defaults to false\r\n         * @returns {!Object.<string,number>}\r\n         * @expose\r\n         */\r\n        EnumPrototype.build = function(rebuild) {\r\n            if (this.object && !rebuild)\r\n                return this.object;\r\n            var enm = new ProtoBuf.Builder.Enum(),\r\n                values = this.getChildren(Enum.Value);\r\n            for (var i=0, k=values.length; i<k; ++i)\r\n                enm[values[i]['name']] = values[i]['id'];\r\n            if (Object.defineProperty)\r\n                Object.defineProperty(enm, '$options', {\r\n                    \"value\": this.buildOpt(),\r\n                    \"enumerable\": false\r\n                });\r\n            return this.object = enm;\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Enum\r\n         * @expose\r\n         */\r\n        Reflect.Enum = Enum;\r\n\r\n        /**\r\n         * Constructs a new Enum Value.\r\n         * @exports ProtoBuf.Reflect.Enum.Value\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.Enum} enm Enum reference\r\n         * @param {string} name Field name\r\n         * @param {number} id Unique field id\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.T\r\n         */\r\n        var Value = function(builder, enm, name, id) {\r\n            T.call(this, builder, enm, name);\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            this.className = \"Enum.Value\";\r\n\r\n            /**\r\n             * Unique enum value id.\r\n             * @type {number}\r\n             * @expose\r\n             */\r\n            this.id = id;\r\n        };\r\n\r\n        // Extends T\r\n        Value.prototype = Object.create(T.prototype);\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Enum.Value\r\n         * @expose\r\n         */\r\n        Reflect.Enum.Value = Value;\r\n\r\n        /**\r\n         * An extension (field).\r\n         * @exports ProtoBuf.Reflect.Extension\r\n         * @constructor\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.T} parent Parent object\r\n         * @param {string} name Object name\r\n         * @param {!ProtoBuf.Reflect.Message.Field} field Extension field\r\n         */\r\n        var Extension = function(builder, parent, name, field) {\r\n            T.call(this, builder, parent, name);\r\n\r\n            /**\r\n             * Extended message field.\r\n             * @type {!ProtoBuf.Reflect.Message.Field}\r\n             * @expose\r\n             */\r\n            this.field = field;\r\n        };\r\n\r\n        // Extends T\r\n        Extension.prototype = Object.create(T.prototype);\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Extension\r\n         * @expose\r\n         */\r\n        Reflect.Extension = Extension;\r\n\r\n        /**\r\n         * Constructs a new Service.\r\n         * @exports ProtoBuf.Reflect.Service\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.Namespace} root Root\r\n         * @param {string} name Service name\r\n         * @param {Object.<string,*>=} options Options\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.Namespace\r\n         */\r\n        var Service = function(builder, root, name, options) {\r\n            Namespace.call(this, builder, root, name, options);\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            this.className = \"Service\";\r\n\r\n            /**\r\n             * Built runtime service class.\r\n             * @type {?function(new:ProtoBuf.Builder.Service)}\r\n             */\r\n            this.clazz = null;\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Service.prototype\r\n         * @inner\r\n         */\r\n        var ServicePrototype = Service.prototype = Object.create(Namespace.prototype);\r\n\r\n        /**\r\n         * Builds the service and returns the runtime counterpart, which is a fully functional class.\r\n         * @see ProtoBuf.Builder.Service\r\n         * @param {boolean=} rebuild Whether to rebuild or not\r\n         * @return {Function} Service class\r\n         * @throws {Error} If the message cannot be built\r\n         * @expose\r\n         */\r\n        ServicePrototype.build = function(rebuild) {\r\n            if (this.clazz && !rebuild)\r\n                return this.clazz;\r\n\r\n            // Create the runtime Service class in its own scope\r\n            return this.clazz = (function(ProtoBuf, T) {\r\n\r\n                /**\r\n                 * Constructs a new runtime Service.\r\n                 * @name ProtoBuf.Builder.Service\r\n                 * @param {function(string, ProtoBuf.Builder.Message, function(Error, ProtoBuf.Builder.Message=))=} rpcImpl RPC implementation receiving the method name and the message\r\n                 * @class Barebone of all runtime services.\r\n                 * @constructor\r\n                 * @throws {Error} If the service cannot be created\r\n                 */\r\n                var Service = function(rpcImpl) {\r\n                    ProtoBuf.Builder.Service.call(this);\r\n\r\n                    /**\r\n                     * Service implementation.\r\n                     * @name ProtoBuf.Builder.Service#rpcImpl\r\n                     * @type {!function(string, ProtoBuf.Builder.Message, function(Error, ProtoBuf.Builder.Message=))}\r\n                     * @expose\r\n                     */\r\n                    this.rpcImpl = rpcImpl || function(name, msg, callback) {\r\n                        // This is what a user has to implement: A function receiving the method name, the actual message to\r\n                        // send (type checked) and the callback that's either provided with the error as its first\r\n                        // argument or null and the actual response message.\r\n                        setTimeout(callback.bind(this, Error(\"Not implemented, see: https://github.com/dcodeIO/ProtoBuf.js/wiki/Services\")), 0); // Must be async!\r\n                    };\r\n                };\r\n\r\n                /**\r\n                 * @alias ProtoBuf.Builder.Service.prototype\r\n                 * @inner\r\n                 */\r\n                var ServicePrototype = Service.prototype = Object.create(ProtoBuf.Builder.Service.prototype);\r\n\r\n                /**\r\n                 * Asynchronously performs an RPC call using the given RPC implementation.\r\n                 * @name ProtoBuf.Builder.Service.[Method]\r\n                 * @function\r\n                 * @param {!function(string, ProtoBuf.Builder.Message, function(Error, ProtoBuf.Builder.Message=))} rpcImpl RPC implementation\r\n                 * @param {ProtoBuf.Builder.Message} req Request\r\n                 * @param {function(Error, (ProtoBuf.Builder.Message|ByteBuffer|Buffer|string)=)} callback Callback receiving\r\n                 *  the error if any and the response either as a pre-parsed message or as its raw bytes\r\n                 * @abstract\r\n                 */\r\n\r\n                /**\r\n                 * Asynchronously performs an RPC call using the instance's RPC implementation.\r\n                 * @name ProtoBuf.Builder.Service#[Method]\r\n                 * @function\r\n                 * @param {ProtoBuf.Builder.Message} req Request\r\n                 * @param {function(Error, (ProtoBuf.Builder.Message|ByteBuffer|Buffer|string)=)} callback Callback receiving\r\n                 *  the error if any and the response either as a pre-parsed message or as its raw bytes\r\n                 * @abstract\r\n                 */\r\n\r\n                var rpc = T.getChildren(ProtoBuf.Reflect.Service.RPCMethod);\r\n                for (var i=0; i<rpc.length; i++) {\r\n                    (function(method) {\r\n\r\n                        // service#Method(message, callback)\r\n                        ServicePrototype[method.name] = function(req, callback) {\r\n                            try {\r\n                                try {\r\n                                    // If given as a buffer, decode the request. Will throw a TypeError if not a valid buffer.\r\n                                    req = method.resolvedRequestType.clazz.decode(ByteBuffer.wrap(req));\r\n                                } catch (err) {\r\n                                    if (!(err instanceof TypeError))\r\n                                        throw err;\r\n                                }\r\n                                if (req === null || typeof req !== 'object')\r\n                                    throw Error(\"Illegal arguments\");\r\n                                if (!(req instanceof method.resolvedRequestType.clazz))\r\n                                    req = new method.resolvedRequestType.clazz(req);\r\n                                this.rpcImpl(method.fqn(), req, function(err, res) { // Assumes that this is properly async\r\n                                    if (err) {\r\n                                        callback(err);\r\n                                        return;\r\n                                    }\r\n                                    // Coalesce to empty string when service response has empty content\r\n                                    if (res === null)\r\n                                        res = ''\r\n                                    try { res = method.resolvedResponseType.clazz.decode(res); } catch (notABuffer) {}\r\n                                    if (!res || !(res instanceof method.resolvedResponseType.clazz)) {\r\n                                        callback(Error(\"Illegal response type received in service method \"+ T.name+\"#\"+method.name));\r\n                                        return;\r\n                                    }\r\n                                    callback(null, res);\r\n                                });\r\n                            } catch (err) {\r\n                                setTimeout(callback.bind(this, err), 0);\r\n                            }\r\n                        };\r\n\r\n                        // Service.Method(rpcImpl, message, callback)\r\n                        Service[method.name] = function(rpcImpl, req, callback) {\r\n                            new Service(rpcImpl)[method.name](req, callback);\r\n                        };\r\n\r\n                        if (Object.defineProperty)\r\n                            Object.defineProperty(Service[method.name], \"$options\", { \"value\": method.buildOpt() }),\r\n                            Object.defineProperty(ServicePrototype[method.name], \"$options\", { \"value\": Service[method.name][\"$options\"] });\r\n                    })(rpc[i]);\r\n                }\r\n\r\n                // Properties\r\n\r\n                /**\r\n                 * Service options.\r\n                 * @name ProtoBuf.Builder.Service.$options\r\n                 * @type {Object.<string,*>}\r\n                 * @expose\r\n                 */\r\n                var $optionsS; // cc needs this\r\n\r\n                /**\r\n                 * Service options.\r\n                 * @name ProtoBuf.Builder.Service#$options\r\n                 * @type {Object.<string,*>}\r\n                 * @expose\r\n                 */\r\n                var $options;\r\n\r\n                /**\r\n                 * Reflection type.\r\n                 * @name ProtoBuf.Builder.Service.$type\r\n                 * @type {!ProtoBuf.Reflect.Service}\r\n                 * @expose\r\n                 */\r\n                var $typeS;\r\n\r\n                /**\r\n                 * Reflection type.\r\n                 * @name ProtoBuf.Builder.Service#$type\r\n                 * @type {!ProtoBuf.Reflect.Service}\r\n                 * @expose\r\n                 */\r\n                var $type;\r\n\r\n                if (Object.defineProperty)\r\n                    Object.defineProperty(Service, \"$options\", { \"value\": T.buildOpt() }),\r\n                    Object.defineProperty(ServicePrototype, \"$options\", { \"value\": Service[\"$options\"] }),\r\n                    Object.defineProperty(Service, \"$type\", { \"value\": T }),\r\n                    Object.defineProperty(ServicePrototype, \"$type\", { \"value\": T });\r\n\r\n                return Service;\r\n\r\n            })(ProtoBuf, this);\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Service\r\n         * @expose\r\n         */\r\n        Reflect.Service = Service;\r\n\r\n        /**\r\n         * Abstract service method.\r\n         * @exports ProtoBuf.Reflect.Service.Method\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.Service} svc Service\r\n         * @param {string} name Method name\r\n         * @param {Object.<string,*>=} options Options\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.T\r\n         */\r\n        var Method = function(builder, svc, name, options) {\r\n            T.call(this, builder, svc, name);\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            this.className = \"Service.Method\";\r\n\r\n            /**\r\n             * Options.\r\n             * @type {Object.<string, *>}\r\n             * @expose\r\n             */\r\n            this.options = options || {};\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Service.Method.prototype\r\n         * @inner\r\n         */\r\n        var MethodPrototype = Method.prototype = Object.create(T.prototype);\r\n\r\n        /**\r\n         * Builds the method's '$options' property.\r\n         * @name ProtoBuf.Reflect.Service.Method#buildOpt\r\n         * @function\r\n         * @return {Object.<string,*>}\r\n         */\r\n        MethodPrototype.buildOpt = NamespacePrototype.buildOpt;\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Service.Method\r\n         * @expose\r\n         */\r\n        Reflect.Service.Method = Method;\r\n\r\n        /**\r\n         * RPC service method.\r\n         * @exports ProtoBuf.Reflect.Service.RPCMethod\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.Service} svc Service\r\n         * @param {string} name Method name\r\n         * @param {string} request Request message name\r\n         * @param {string} response Response message name\r\n         * @param {boolean} request_stream Whether requests are streamed\r\n         * @param {boolean} response_stream Whether responses are streamed\r\n         * @param {Object.<string,*>=} options Options\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.Service.Method\r\n         */\r\n        var RPCMethod = function(builder, svc, name, request, response, request_stream, response_stream, options) {\r\n            Method.call(this, builder, svc, name, options);\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            this.className = \"Service.RPCMethod\";\r\n\r\n            /**\r\n             * Request message name.\r\n             * @type {string}\r\n             * @expose\r\n             */\r\n            this.requestName = request;\r\n\r\n            /**\r\n             * Response message name.\r\n             * @type {string}\r\n             * @expose\r\n             */\r\n            this.responseName = response;\r\n\r\n            /**\r\n             * Whether requests are streamed\r\n             * @type {bool}\r\n             * @expose\r\n             */\r\n            this.requestStream = request_stream;\r\n\r\n            /**\r\n             * Whether responses are streamed\r\n             * @type {bool}\r\n             * @expose\r\n             */\r\n            this.responseStream = response_stream;\r\n\r\n            /**\r\n             * Resolved request message type.\r\n             * @type {ProtoBuf.Reflect.Message}\r\n             * @expose\r\n             */\r\n            this.resolvedRequestType = null;\r\n\r\n            /**\r\n             * Resolved response message type.\r\n             * @type {ProtoBuf.Reflect.Message}\r\n             * @expose\r\n             */\r\n            this.resolvedResponseType = null;\r\n        };\r\n\r\n        // Extends Method\r\n        RPCMethod.prototype = Object.create(Method.prototype);\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Service.RPCMethod\r\n         * @expose\r\n         */\r\n        Reflect.Service.RPCMethod = RPCMethod;\r\n\r\n        return Reflect;\r\n\r\n    })(ProtoBuf);\r\n\r\n    /**\r\n     * @alias ProtoBuf.Builder\r\n     * @expose\r\n     */\r\n    ProtoBuf.Builder = (function(ProtoBuf, Lang, Reflect) {\r\n        \"use strict\";\r\n\r\n        /**\r\n         * Constructs a new Builder.\r\n         * @exports ProtoBuf.Builder\r\n         * @class Provides the functionality to build protocol messages.\r\n         * @param {Object.<string,*>=} options Options\r\n         * @constructor\r\n         */\r\n        var Builder = function(options) {\r\n\r\n            /**\r\n             * Namespace.\r\n             * @type {ProtoBuf.Reflect.Namespace}\r\n             * @expose\r\n             */\r\n            this.ns = new Reflect.Namespace(this, null, \"\"); // Global namespace\r\n\r\n            /**\r\n             * Namespace pointer.\r\n             * @type {ProtoBuf.Reflect.T}\r\n             * @expose\r\n             */\r\n            this.ptr = this.ns;\r\n\r\n            /**\r\n             * Resolved flag.\r\n             * @type {boolean}\r\n             * @expose\r\n             */\r\n            this.resolved = false;\r\n\r\n            /**\r\n             * The current building result.\r\n             * @type {Object.<string,ProtoBuf.Builder.Message|Object>|null}\r\n             * @expose\r\n             */\r\n            this.result = null;\r\n\r\n            /**\r\n             * Imported files.\r\n             * @type {Array.<string>}\r\n             * @expose\r\n             */\r\n            this.files = {};\r\n\r\n            /**\r\n             * Import root override.\r\n             * @type {?string}\r\n             * @expose\r\n             */\r\n            this.importRoot = null;\r\n\r\n            /**\r\n             * Options.\r\n             * @type {!Object.<string, *>}\r\n             * @expose\r\n             */\r\n            this.options = options || {};\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Builder.prototype\r\n         * @inner\r\n         */\r\n        var BuilderPrototype = Builder.prototype;\r\n\r\n        // ----- Definition tests -----\r\n\r\n        /**\r\n         * Tests if a definition most likely describes a message.\r\n         * @param {!Object} def\r\n         * @returns {boolean}\r\n         * @expose\r\n         */\r\n        Builder.isMessage = function(def) {\r\n            // Messages require a string name\r\n            if (typeof def[\"name\"] !== 'string')\r\n                return false;\r\n            // Messages do not contain values (enum) or rpc methods (service)\r\n            if (typeof def[\"values\"] !== 'undefined' || typeof def[\"rpc\"] !== 'undefined')\r\n                return false;\r\n            return true;\r\n        };\r\n\r\n        /**\r\n         * Tests if a definition most likely describes a message field.\r\n         * @param {!Object} def\r\n         * @returns {boolean}\r\n         * @expose\r\n         */\r\n        Builder.isMessageField = function(def) {\r\n            // Message fields require a string rule, name and type and an id\r\n            if (typeof def[\"rule\"] !== 'string' || typeof def[\"name\"] !== 'string' || typeof def[\"type\"] !== 'string' || typeof def[\"id\"] === 'undefined')\r\n                return false;\r\n            return true;\r\n        };\r\n\r\n        /**\r\n         * Tests if a definition most likely describes an enum.\r\n         * @param {!Object} def\r\n         * @returns {boolean}\r\n         * @expose\r\n         */\r\n        Builder.isEnum = function(def) {\r\n            // Enums require a string name\r\n            if (typeof def[\"name\"] !== 'string')\r\n                return false;\r\n            // Enums require at least one value\r\n            if (typeof def[\"values\"] === 'undefined' || !Array.isArray(def[\"values\"]) || def[\"values\"].length === 0)\r\n                return false;\r\n            return true;\r\n        };\r\n\r\n        /**\r\n         * Tests if a definition most likely describes a service.\r\n         * @param {!Object} def\r\n         * @returns {boolean}\r\n         * @expose\r\n         */\r\n        Builder.isService = function(def) {\r\n            // Services require a string name and an rpc object\r\n            if (typeof def[\"name\"] !== 'string' || typeof def[\"rpc\"] !== 'object' || !def[\"rpc\"])\r\n                return false;\r\n            return true;\r\n        };\r\n\r\n        /**\r\n         * Tests if a definition most likely describes an extended message\r\n         * @param {!Object} def\r\n         * @returns {boolean}\r\n         * @expose\r\n         */\r\n        Builder.isExtend = function(def) {\r\n            // Extends rquire a string ref\r\n            if (typeof def[\"ref\"] !== 'string')\r\n                return false;\r\n            return true;\r\n        };\r\n\r\n        // ----- Building -----\r\n\r\n        /**\r\n         * Resets the pointer to the root namespace.\r\n         * @returns {!ProtoBuf.Builder} this\r\n         * @expose\r\n         */\r\n        BuilderPrototype.reset = function() {\r\n            this.ptr = this.ns;\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Defines a namespace on top of the current pointer position and places the pointer on it.\r\n         * @param {string} namespace\r\n         * @return {!ProtoBuf.Builder} this\r\n         * @expose\r\n         */\r\n        BuilderPrototype.define = function(namespace) {\r\n            if (typeof namespace !== 'string' || !Lang.TYPEREF.test(namespace))\r\n                throw Error(\"illegal namespace: \"+namespace);\r\n            namespace.split(\".\").forEach(function(part) {\r\n                var ns = this.ptr.getChild(part);\r\n                if (ns === null) // Keep existing\r\n                    this.ptr.addChild(ns = new Reflect.Namespace(this, this.ptr, part));\r\n                this.ptr = ns;\r\n            }, this);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Creates the specified definitions at the current pointer position.\r\n         * @param {!Array.<!Object>} defs Messages, enums or services to create\r\n         * @returns {!ProtoBuf.Builder} this\r\n         * @throws {Error} If a message definition is invalid\r\n         * @expose\r\n         */\r\n        BuilderPrototype.create = function(defs) {\r\n            if (!defs)\r\n                return this; // Nothing to create\r\n            if (!Array.isArray(defs))\r\n                defs = [defs];\r\n            else {\r\n                if (defs.length === 0)\r\n                    return this;\r\n                defs = defs.slice();\r\n            }\r\n\r\n            // It's quite hard to keep track of scopes and memory here, so let's do this iteratively.\r\n            var stack = [defs];\r\n            while (stack.length > 0) {\r\n                defs = stack.pop();\r\n\r\n                if (!Array.isArray(defs)) // Stack always contains entire namespaces\r\n                    throw Error(\"not a valid namespace: \"+JSON.stringify(defs));\r\n\r\n                while (defs.length > 0) {\r\n                    var def = defs.shift(); // Namespaces always contain an array of messages, enums and services\r\n\r\n                    if (Builder.isMessage(def)) {\r\n                        var obj = new Reflect.Message(this, this.ptr, def[\"name\"], def[\"options\"], def[\"isGroup\"], def[\"syntax\"]);\r\n\r\n                        // Create OneOfs\r\n                        var oneofs = {};\r\n                        if (def[\"oneofs\"])\r\n                            Object.keys(def[\"oneofs\"]).forEach(function(name) {\r\n                                obj.addChild(oneofs[name] = new Reflect.Message.OneOf(this, obj, name));\r\n                            }, this);\r\n\r\n                        // Create fields\r\n                        if (def[\"fields\"])\r\n                            def[\"fields\"].forEach(function(fld) {\r\n                                if (obj.getChild(fld[\"id\"]|0) !== null)\r\n                                    throw Error(\"duplicate or invalid field id in \"+obj.name+\": \"+fld['id']);\r\n                                if (fld[\"options\"] && typeof fld[\"options\"] !== 'object')\r\n                                    throw Error(\"illegal field options in \"+obj.name+\"#\"+fld[\"name\"]);\r\n                                var oneof = null;\r\n                                if (typeof fld[\"oneof\"] === 'string' && !(oneof = oneofs[fld[\"oneof\"]]))\r\n                                    throw Error(\"illegal oneof in \"+obj.name+\"#\"+fld[\"name\"]+\": \"+fld[\"oneof\"]);\r\n                                fld = new Reflect.Message.Field(this, obj, fld[\"rule\"], fld[\"keytype\"], fld[\"type\"], fld[\"name\"], fld[\"id\"], fld[\"options\"], oneof, def[\"syntax\"]);\r\n                                if (oneof)\r\n                                    oneof.fields.push(fld);\r\n                                obj.addChild(fld);\r\n                            }, this);\r\n\r\n                        // Push children to stack\r\n                        var subObj = [];\r\n                        if (def[\"enums\"])\r\n                            def[\"enums\"].forEach(function(enm) {\r\n                                subObj.push(enm);\r\n                            });\r\n                        if (def[\"messages\"])\r\n                            def[\"messages\"].forEach(function(msg) {\r\n                                subObj.push(msg);\r\n                            });\r\n                        if (def[\"services\"])\r\n                            def[\"services\"].forEach(function(svc) {\r\n                                subObj.push(svc);\r\n                            });\r\n\r\n                        // Set extension ranges\r\n                        if (def[\"extensions\"]) {\r\n                            if (typeof def[\"extensions\"][0] === 'number') // pre 5.0.1\r\n                                obj.extensions = [ def[\"extensions\"] ];\r\n                            else\r\n                                obj.extensions = def[\"extensions\"];\r\n                        }\r\n\r\n                        // Create on top of current namespace\r\n                        this.ptr.addChild(obj);\r\n                        if (subObj.length > 0) {\r\n                            stack.push(defs); // Push the current level back\r\n                            defs = subObj; // Continue processing sub level\r\n                            subObj = null;\r\n                            this.ptr = obj; // And move the pointer to this namespace\r\n                            obj = null;\r\n                            continue;\r\n                        }\r\n                        subObj = null;\r\n\r\n                    } else if (Builder.isEnum(def)) {\r\n\r\n                        obj = new Reflect.Enum(this, this.ptr, def[\"name\"], def[\"options\"], def[\"syntax\"]);\r\n                        def[\"values\"].forEach(function(val) {\r\n                            obj.addChild(new Reflect.Enum.Value(this, obj, val[\"name\"], val[\"id\"]));\r\n                        }, this);\r\n                        this.ptr.addChild(obj);\r\n\r\n                    } else if (Builder.isService(def)) {\r\n\r\n                        obj = new Reflect.Service(this, this.ptr, def[\"name\"], def[\"options\"]);\r\n                        Object.keys(def[\"rpc\"]).forEach(function(name) {\r\n                            var mtd = def[\"rpc\"][name];\r\n                            obj.addChild(new Reflect.Service.RPCMethod(this, obj, name, mtd[\"request\"], mtd[\"response\"], !!mtd[\"request_stream\"], !!mtd[\"response_stream\"], mtd[\"options\"]));\r\n                        }, this);\r\n                        this.ptr.addChild(obj);\r\n\r\n                    } else if (Builder.isExtend(def)) {\r\n\r\n                        obj = this.ptr.resolve(def[\"ref\"], true);\r\n                        if (obj) {\r\n                            def[\"fields\"].forEach(function(fld) {\r\n                                if (obj.getChild(fld['id']|0) !== null)\r\n                                    throw Error(\"duplicate extended field id in \"+obj.name+\": \"+fld['id']);\r\n                                // Check if field id is allowed to be extended\r\n                                if (obj.extensions) {\r\n                                    var valid = false;\r\n                                    obj.extensions.forEach(function(range) {\r\n                                        if (fld[\"id\"] >= range[0] && fld[\"id\"] <= range[1])\r\n                                            valid = true;\r\n                                    });\r\n                                    if (!valid)\r\n                                        throw Error(\"illegal extended field id in \"+obj.name+\": \"+fld['id']+\" (not within valid ranges)\");\r\n                                }\r\n                                // Convert extension field names to camel case notation if the override is set\r\n                                var name = fld[\"name\"];\r\n                                if (this.options['convertFieldsToCamelCase'])\r\n                                    name = ProtoBuf.Util.toCamelCase(name);\r\n                                // see #161: Extensions use their fully qualified name as their runtime key and...\r\n                                var field = new Reflect.Message.ExtensionField(this, obj, fld[\"rule\"], fld[\"type\"], this.ptr.fqn()+'.'+name, fld[\"id\"], fld[\"options\"]);\r\n                                // ...are added on top of the current namespace as an extension which is used for\r\n                                // resolving their type later on (the extension always keeps the original name to\r\n                                // prevent naming collisions)\r\n                                var ext = new Reflect.Extension(this, this.ptr, fld[\"name\"], field);\r\n                                field.extension = ext;\r\n                                this.ptr.addChild(ext);\r\n                                obj.addChild(field);\r\n                            }, this);\r\n\r\n                        } else if (!/\\.?google\\.protobuf\\./.test(def[\"ref\"])) // Silently skip internal extensions\r\n                            throw Error(\"extended message \"+def[\"ref\"]+\" is not defined\");\r\n\r\n                    } else\r\n                        throw Error(\"not a valid definition: \"+JSON.stringify(def));\r\n\r\n                    def = null;\r\n                    obj = null;\r\n                }\r\n                // Break goes here\r\n                defs = null;\r\n                this.ptr = this.ptr.parent; // Namespace done, continue at parent\r\n            }\r\n            this.resolved = false; // Require re-resolve\r\n            this.result = null; // Require re-build\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Propagates syntax to all children.\r\n         * @param {!Object} parent\r\n         * @inner\r\n         */\r\n        function propagateSyntax(parent) {\r\n            if (parent['messages']) {\r\n                parent['messages'].forEach(function(child) {\r\n                    child[\"syntax\"] = parent[\"syntax\"];\r\n                    propagateSyntax(child);\r\n                });\r\n            }\r\n            if (parent['enums']) {\r\n                parent['enums'].forEach(function(child) {\r\n                    child[\"syntax\"] = parent[\"syntax\"];\r\n                });\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Imports another definition into this builder.\r\n         * @param {Object.<string,*>} json Parsed import\r\n         * @param {(string|{root: string, file: string})=} filename Imported file name\r\n         * @returns {!ProtoBuf.Builder} this\r\n         * @throws {Error} If the definition or file cannot be imported\r\n         * @expose\r\n         */\r\n        BuilderPrototype[\"import\"] = function(json, filename) {\r\n            var delim = '/';\r\n\r\n            // Make sure to skip duplicate imports\r\n\r\n            if (typeof filename === 'string') {\r\n\r\n                if (ProtoBuf.Util.IS_NODE)\r\n                    filename = require(\"path\")['resolve'](filename);\r\n                if (this.files[filename] === true)\r\n                    return this.reset();\r\n                this.files[filename] = true;\r\n\r\n            } else if (typeof filename === 'object') { // Object with root, file.\r\n\r\n                var root = filename.root;\r\n                if (ProtoBuf.Util.IS_NODE)\r\n                    root = require(\"path\")['resolve'](root);\r\n                if (root.indexOf(\"\\\\\") >= 0 || filename.file.indexOf(\"\\\\\") >= 0)\r\n                    delim = '\\\\';\r\n                var fname;\r\n                if (ProtoBuf.Util.IS_NODE)\r\n                    fname = require(\"path\")['join'](root, filename.file);\r\n                else\r\n                    fname = root + delim + filename.file;\r\n                if (this.files[fname] === true)\r\n                    return this.reset();\r\n                this.files[fname] = true;\r\n            }\r\n\r\n            // Import imports\r\n\r\n            if (json['imports'] && json['imports'].length > 0) {\r\n                var importRoot,\r\n                    resetRoot = false;\r\n\r\n                if (typeof filename === 'object') { // If an import root is specified, override\r\n\r\n                    this.importRoot = filename[\"root\"]; resetRoot = true; // ... and reset afterwards\r\n                    importRoot = this.importRoot;\r\n                    filename = filename[\"file\"];\r\n                    if (importRoot.indexOf(\"\\\\\") >= 0 || filename.indexOf(\"\\\\\") >= 0)\r\n                        delim = '\\\\';\r\n\r\n                } else if (typeof filename === 'string') {\r\n\r\n                    if (this.importRoot) // If import root is overridden, use it\r\n                        importRoot = this.importRoot;\r\n                    else { // Otherwise compute from filename\r\n                        if (filename.indexOf(\"/\") >= 0) { // Unix\r\n                            importRoot = filename.replace(/\\/[^\\/]*$/, \"\");\r\n                            if (/* /file.proto */ importRoot === \"\")\r\n                                importRoot = \"/\";\r\n                        } else if (filename.indexOf(\"\\\\\") >= 0) { // Windows\r\n                            importRoot = filename.replace(/\\\\[^\\\\]*$/, \"\");\r\n                            delim = '\\\\';\r\n                        } else\r\n                            importRoot = \".\";\r\n                    }\r\n\r\n                } else\r\n                    importRoot = null;\r\n\r\n                for (var i=0; i<json['imports'].length; i++) {\r\n                    if (typeof json['imports'][i] === 'string') { // Import file\r\n                        if (!importRoot)\r\n                            throw Error(\"cannot determine import root\");\r\n                        var importFilename = json['imports'][i];\r\n                        if (importFilename === \"google/protobuf/descriptor.proto\")\r\n                            continue; // Not needed and therefore not used\r\n                        if (ProtoBuf.Util.IS_NODE)\r\n                            importFilename = require(\"path\")['join'](importRoot, importFilename);\r\n                        else\r\n                            importFilename = importRoot + delim + importFilename;\r\n                        if (this.files[importFilename] === true)\r\n                            continue; // Already imported\r\n                        if (/\\.proto$/i.test(importFilename) && !ProtoBuf.DotProto)       // If this is a light build\r\n                            importFilename = importFilename.replace(/\\.proto$/, \".json\"); // always load the JSON file\r\n                        var contents = ProtoBuf.Util.fetch(importFilename);\r\n                        if (contents === null)\r\n                            throw Error(\"failed to import '\"+importFilename+\"' in '\"+filename+\"': file not found\");\r\n                        if (/\\.json$/i.test(importFilename)) // Always possible\r\n                            this[\"import\"](JSON.parse(contents+\"\"), importFilename); // May throw\r\n                        else\r\n                            this[\"import\"](ProtoBuf.DotProto.Parser.parse(contents), importFilename); // May throw\r\n                    } else // Import structure\r\n                        if (!filename)\r\n                            this[\"import\"](json['imports'][i]);\r\n                        else if (/\\.(\\w+)$/.test(filename)) // With extension: Append _importN to the name portion to make it unique\r\n                            this[\"import\"](json['imports'][i], filename.replace(/^(.+)\\.(\\w+)$/, function($0, $1, $2) { return $1+\"_import\"+i+\".\"+$2; }));\r\n                        else // Without extension: Append _importN to make it unique\r\n                            this[\"import\"](json['imports'][i], filename+\"_import\"+i);\r\n                }\r\n                if (resetRoot) // Reset import root override when all imports are done\r\n                    this.importRoot = null;\r\n            }\r\n\r\n            // Import structures\r\n\r\n            if (json['package'])\r\n                this.define(json['package']);\r\n            if (json['syntax'])\r\n                propagateSyntax(json);\r\n            var base = this.ptr;\r\n            if (json['options'])\r\n                Object.keys(json['options']).forEach(function(key) {\r\n                    base.options[key] = json['options'][key];\r\n                });\r\n            if (json['messages'])\r\n                this.create(json['messages']),\r\n                this.ptr = base;\r\n            if (json['enums'])\r\n                this.create(json['enums']),\r\n                this.ptr = base;\r\n            if (json['services'])\r\n                this.create(json['services']),\r\n                this.ptr = base;\r\n            if (json['extends'])\r\n                this.create(json['extends']);\r\n\r\n            return this.reset();\r\n        };\r\n\r\n        /**\r\n         * Resolves all namespace objects.\r\n         * @throws {Error} If a type cannot be resolved\r\n         * @returns {!ProtoBuf.Builder} this\r\n         * @expose\r\n         */\r\n        BuilderPrototype.resolveAll = function() {\r\n            // Resolve all reflected objects\r\n            var res;\r\n            if (this.ptr == null || typeof this.ptr.type === 'object')\r\n                return this; // Done (already resolved)\r\n\r\n            if (this.ptr instanceof Reflect.Namespace) { // Resolve children\r\n\r\n                this.ptr.children.forEach(function(child) {\r\n                    this.ptr = child;\r\n                    this.resolveAll();\r\n                }, this);\r\n\r\n            } else if (this.ptr instanceof Reflect.Message.Field) { // Resolve type\r\n\r\n                if (!Lang.TYPE.test(this.ptr.type)) {\r\n                    if (!Lang.TYPEREF.test(this.ptr.type))\r\n                        throw Error(\"illegal type reference in \"+this.ptr.toString(true)+\": \"+this.ptr.type);\r\n                    res = (this.ptr instanceof Reflect.Message.ExtensionField ? this.ptr.extension.parent : this.ptr.parent).resolve(this.ptr.type, true);\r\n                    if (!res)\r\n                        throw Error(\"unresolvable type reference in \"+this.ptr.toString(true)+\": \"+this.ptr.type);\r\n                    this.ptr.resolvedType = res;\r\n                    if (res instanceof Reflect.Enum) {\r\n                        this.ptr.type = ProtoBuf.TYPES[\"enum\"];\r\n                        if (this.ptr.syntax === 'proto3' && res.syntax !== 'proto3')\r\n                            throw Error(\"proto3 message cannot reference proto2 enum\");\r\n                    }\r\n                    else if (res instanceof Reflect.Message)\r\n                        this.ptr.type = res.isGroup ? ProtoBuf.TYPES[\"group\"] : ProtoBuf.TYPES[\"message\"];\r\n                    else\r\n                        throw Error(\"illegal type reference in \"+this.ptr.toString(true)+\": \"+this.ptr.type);\r\n                } else\r\n                    this.ptr.type = ProtoBuf.TYPES[this.ptr.type];\r\n\r\n                // If it's a map field, also resolve the key type. The key type can be only a numeric, string, or bool type\r\n                // (i.e., no enums or messages), so we don't need to resolve against the current namespace.\r\n                if (this.ptr.map) {\r\n                    if (!Lang.TYPE.test(this.ptr.keyType))\r\n                        throw Error(\"illegal key type for map field in \"+this.ptr.toString(true)+\": \"+this.ptr.keyType);\r\n                    this.ptr.keyType = ProtoBuf.TYPES[this.ptr.keyType];\r\n                }\r\n\r\n                // If it's a repeated and packable field then proto3 mandates it should be packed by\r\n                // default\r\n                if (\r\n                  this.ptr.syntax === 'proto3' &&\r\n                  this.ptr.repeated && this.ptr.options.packed === undefined &&\r\n                  ProtoBuf.PACKABLE_WIRE_TYPES.indexOf(this.ptr.type.wireType) !== -1\r\n                ) {\r\n                  this.ptr.options.packed = true;\r\n                }\r\n\r\n            } else if (this.ptr instanceof ProtoBuf.Reflect.Service.Method) {\r\n\r\n                if (this.ptr instanceof ProtoBuf.Reflect.Service.RPCMethod) {\r\n                    res = this.ptr.parent.resolve(this.ptr.requestName, true);\r\n                    if (!res || !(res instanceof ProtoBuf.Reflect.Message))\r\n                        throw Error(\"Illegal type reference in \"+this.ptr.toString(true)+\": \"+this.ptr.requestName);\r\n                    this.ptr.resolvedRequestType = res;\r\n                    res = this.ptr.parent.resolve(this.ptr.responseName, true);\r\n                    if (!res || !(res instanceof ProtoBuf.Reflect.Message))\r\n                        throw Error(\"Illegal type reference in \"+this.ptr.toString(true)+\": \"+this.ptr.responseName);\r\n                    this.ptr.resolvedResponseType = res;\r\n                } else // Should not happen as nothing else is implemented\r\n                    throw Error(\"illegal service type in \"+this.ptr.toString(true));\r\n\r\n            } else if (\r\n                !(this.ptr instanceof ProtoBuf.Reflect.Message.OneOf) && // Not built\r\n                !(this.ptr instanceof ProtoBuf.Reflect.Extension) && // Not built\r\n                !(this.ptr instanceof ProtoBuf.Reflect.Enum.Value) // Built in enum\r\n            )\r\n                throw Error(\"illegal object in namespace: \"+typeof(this.ptr)+\": \"+this.ptr);\r\n\r\n            return this.reset();\r\n        };\r\n\r\n        /**\r\n         * Builds the protocol. This will first try to resolve all definitions and, if this has been successful,\r\n         * return the built package.\r\n         * @param {(string|Array.<string>)=} path Specifies what to return. If omitted, the entire namespace will be returned.\r\n         * @returns {!ProtoBuf.Builder.Message|!Object.<string,*>}\r\n         * @throws {Error} If a type could not be resolved\r\n         * @expose\r\n         */\r\n        BuilderPrototype.build = function(path) {\r\n            this.reset();\r\n            if (!this.resolved)\r\n                this.resolveAll(),\r\n                this.resolved = true,\r\n                this.result = null; // Require re-build\r\n            if (this.result === null) // (Re-)Build\r\n                this.result = this.ns.build();\r\n            if (!path)\r\n                return this.result;\r\n            var part = typeof path === 'string' ? path.split(\".\") : path,\r\n                ptr = this.result; // Build namespace pointer (no hasChild etc.)\r\n            for (var i=0; i<part.length; i++)\r\n                if (ptr[part[i]])\r\n                    ptr = ptr[part[i]];\r\n                else {\r\n                    ptr = null;\r\n                    break;\r\n                }\r\n            return ptr;\r\n        };\r\n\r\n        /**\r\n         * Similar to {@link ProtoBuf.Builder#build}, but looks up the internal reflection descriptor.\r\n         * @param {string=} path Specifies what to return. If omitted, the entire namespace wiil be returned.\r\n         * @param {boolean=} excludeNonNamespace Excludes non-namespace types like fields, defaults to `false`\r\n         * @returns {?ProtoBuf.Reflect.T} Reflection descriptor or `null` if not found\r\n         */\r\n        BuilderPrototype.lookup = function(path, excludeNonNamespace) {\r\n            return path ? this.ns.resolve(path, excludeNonNamespace) : this.ns;\r\n        };\r\n\r\n        /**\r\n         * Returns a string representation of this object.\r\n         * @return {string} String representation as of \"Builder\"\r\n         * @expose\r\n         */\r\n        BuilderPrototype.toString = function() {\r\n            return \"Builder\";\r\n        };\r\n\r\n        // ----- Base classes -----\r\n        // Exist for the sole purpose of being able to \"... instanceof ProtoBuf.Builder.Message\" etc.\r\n\r\n        /**\r\n         * @alias ProtoBuf.Builder.Message\r\n         */\r\n        Builder.Message = function() {};\r\n\r\n        /**\r\n         * @alias ProtoBuf.Builder.Enum\r\n         */\r\n        Builder.Enum = function() {};\r\n\r\n        /**\r\n         * @alias ProtoBuf.Builder.Message\r\n         */\r\n        Builder.Service = function() {};\r\n\r\n        return Builder;\r\n\r\n    })(ProtoBuf, ProtoBuf.Lang, ProtoBuf.Reflect);\r\n\r\n    /**\r\n     * @alias ProtoBuf.Map\r\n     * @expose\r\n     */\r\n    ProtoBuf.Map = (function(ProtoBuf, Reflect) {\r\n        \"use strict\";\r\n\r\n        /**\r\n         * Constructs a new Map. A Map is a container that is used to implement map\r\n         * fields on message objects. It closely follows the ES6 Map API; however,\r\n         * it is distinct because we do not want to depend on external polyfills or\r\n         * on ES6 itself.\r\n         *\r\n         * @exports ProtoBuf.Map\r\n         * @param {!ProtoBuf.Reflect.Field} field Map field\r\n         * @param {Object.<string,*>=} contents Initial contents\r\n         * @constructor\r\n         */\r\n        var Map = function(field, contents) {\r\n            if (!field.map)\r\n                throw Error(\"field is not a map\");\r\n\r\n            /**\r\n             * The field corresponding to this map.\r\n             * @type {!ProtoBuf.Reflect.Field}\r\n             */\r\n            this.field = field;\r\n\r\n            /**\r\n             * Element instance corresponding to key type.\r\n             * @type {!ProtoBuf.Reflect.Element}\r\n             */\r\n            this.keyElem = new Reflect.Element(field.keyType, null, true, field.syntax);\r\n\r\n            /**\r\n             * Element instance corresponding to value type.\r\n             * @type {!ProtoBuf.Reflect.Element}\r\n             */\r\n            this.valueElem = new Reflect.Element(field.type, field.resolvedType, false, field.syntax);\r\n\r\n            /**\r\n             * Internal map: stores mapping of (string form of key) -> (key, value)\r\n             * pair.\r\n             *\r\n             * We provide map semantics for arbitrary key types, but we build on top\r\n             * of an Object, which has only string keys. In order to avoid the need\r\n             * to convert a string key back to its native type in many situations,\r\n             * we store the native key value alongside the value. Thus, we only need\r\n             * a one-way mapping from a key type to its string form that guarantees\r\n             * uniqueness and equality (i.e., str(K1) === str(K2) if and only if K1\r\n             * === K2).\r\n             *\r\n             * @type {!Object<string, {key: *, value: *}>}\r\n             */\r\n            this.map = {};\r\n\r\n            /**\r\n             * Returns the number of elements in the map.\r\n             */\r\n            Object.defineProperty(this, \"size\", {\r\n                get: function() { return Object.keys(this.map).length; }\r\n            });\r\n\r\n            // Fill initial contents from a raw object.\r\n            if (contents) {\r\n                var keys = Object.keys(contents);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    var key = this.keyElem.valueFromString(keys[i]);\r\n                    var val = this.valueElem.verifyValue(contents[keys[i]]);\r\n                    this.map[this.keyElem.valueToString(key)] =\r\n                        { key: key, value: val };\r\n                }\r\n            }\r\n        };\r\n\r\n        var MapPrototype = Map.prototype;\r\n\r\n        /**\r\n         * Helper: return an iterator over an array.\r\n         * @param {!Array<*>} arr the array\r\n         * @returns {!Object} an iterator\r\n         * @inner\r\n         */\r\n        function arrayIterator(arr) {\r\n            var idx = 0;\r\n            return {\r\n                next: function() {\r\n                    if (idx < arr.length)\r\n                        return { done: false, value: arr[idx++] };\r\n                    return { done: true };\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Clears the map.\r\n         */\r\n        MapPrototype.clear = function() {\r\n            this.map = {};\r\n        };\r\n\r\n        /**\r\n         * Deletes a particular key from the map.\r\n         * @returns {boolean} Whether any entry with this key was deleted.\r\n         */\r\n        MapPrototype[\"delete\"] = function(key) {\r\n            var keyValue = this.keyElem.valueToString(this.keyElem.verifyValue(key));\r\n            var hadKey = keyValue in this.map;\r\n            delete this.map[keyValue];\r\n            return hadKey;\r\n        };\r\n\r\n        /**\r\n         * Returns an iterator over [key, value] pairs in the map.\r\n         * @returns {Object} The iterator\r\n         */\r\n        MapPrototype.entries = function() {\r\n            var entries = [];\r\n            var strKeys = Object.keys(this.map);\r\n            for (var i = 0, entry; i < strKeys.length; i++)\r\n                entries.push([(entry=this.map[strKeys[i]]).key, entry.value]);\r\n            return arrayIterator(entries);\r\n        };\r\n\r\n        /**\r\n         * Returns an iterator over keys in the map.\r\n         * @returns {Object} The iterator\r\n         */\r\n        MapPrototype.keys = function() {\r\n            var keys = [];\r\n            var strKeys = Object.keys(this.map);\r\n            for (var i = 0; i < strKeys.length; i++)\r\n                keys.push(this.map[strKeys[i]].key);\r\n            return arrayIterator(keys);\r\n        };\r\n\r\n        /**\r\n         * Returns an iterator over values in the map.\r\n         * @returns {!Object} The iterator\r\n         */\r\n        MapPrototype.values = function() {\r\n            var values = [];\r\n            var strKeys = Object.keys(this.map);\r\n            for (var i = 0; i < strKeys.length; i++)\r\n                values.push(this.map[strKeys[i]].value);\r\n            return arrayIterator(values);\r\n        };\r\n\r\n        /**\r\n         * Iterates over entries in the map, calling a function on each.\r\n         * @param {function(this:*, *, *, *)} cb The callback to invoke with value, key, and map arguments.\r\n         * @param {Object=} thisArg The `this` value for the callback\r\n         */\r\n        MapPrototype.forEach = function(cb, thisArg) {\r\n            var strKeys = Object.keys(this.map);\r\n            for (var i = 0, entry; i < strKeys.length; i++)\r\n                cb.call(thisArg, (entry=this.map[strKeys[i]]).value, entry.key, this);\r\n        };\r\n\r\n        /**\r\n         * Sets a key in the map to the given value.\r\n         * @param {*} key The key\r\n         * @param {*} value The value\r\n         * @returns {!ProtoBuf.Map} The map instance\r\n         */\r\n        MapPrototype.set = function(key, value) {\r\n            var keyValue = this.keyElem.verifyValue(key);\r\n            var valValue = this.valueElem.verifyValue(value);\r\n            this.map[this.keyElem.valueToString(keyValue)] =\r\n                { key: keyValue, value: valValue };\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Gets the value corresponding to a key in the map.\r\n         * @param {*} key The key\r\n         * @returns {*|undefined} The value, or `undefined` if key not present\r\n         */\r\n        MapPrototype.get = function(key) {\r\n            var keyValue = this.keyElem.valueToString(this.keyElem.verifyValue(key));\r\n            if (!(keyValue in this.map))\r\n                return undefined;\r\n            return this.map[keyValue].value;\r\n        };\r\n\r\n        /**\r\n         * Determines whether the given key is present in the map.\r\n         * @param {*} key The key\r\n         * @returns {boolean} `true` if the key is present\r\n         */\r\n        MapPrototype.has = function(key) {\r\n            var keyValue = this.keyElem.valueToString(this.keyElem.verifyValue(key));\r\n            return (keyValue in this.map);\r\n        };\r\n\r\n        return Map;\r\n    })(ProtoBuf, ProtoBuf.Reflect);\r\n\r\n\r\n    /**\r\n     * Loads a .proto string and returns the Builder.\r\n     * @param {string} proto .proto file contents\r\n     * @param {(ProtoBuf.Builder|string|{root: string, file: string})=} builder Builder to append to. Will create a new one if omitted.\r\n     * @param {(string|{root: string, file: string})=} filename The corresponding file name if known. Must be specified for imports.\r\n     * @return {ProtoBuf.Builder} Builder to create new messages\r\n     * @throws {Error} If the definition cannot be parsed or built\r\n     * @expose\r\n     */\r\n    ProtoBuf.loadProto = function(proto, builder, filename) {\r\n        if (typeof builder === 'string' || (builder && typeof builder[\"file\"] === 'string' && typeof builder[\"root\"] === 'string'))\r\n            filename = builder,\r\n            builder = undefined;\r\n        return ProtoBuf.loadJson(ProtoBuf.DotProto.Parser.parse(proto), builder, filename);\r\n    };\r\n\r\n    /**\r\n     * Loads a .proto string and returns the Builder. This is an alias of {@link ProtoBuf.loadProto}.\r\n     * @function\r\n     * @param {string} proto .proto file contents\r\n     * @param {(ProtoBuf.Builder|string)=} builder Builder to append to. Will create a new one if omitted.\r\n     * @param {(string|{root: string, file: string})=} filename The corresponding file name if known. Must be specified for imports.\r\n     * @return {ProtoBuf.Builder} Builder to create new messages\r\n     * @throws {Error} If the definition cannot be parsed or built\r\n     * @expose\r\n     */\r\n    ProtoBuf.protoFromString = ProtoBuf.loadProto; // Legacy\r\n\r\n    /**\r\n     * Loads a .proto file and returns the Builder.\r\n     * @param {string|{root: string, file: string}} filename Path to proto file or an object specifying 'file' with\r\n     *  an overridden 'root' path for all imported files.\r\n     * @param {function(?Error, !ProtoBuf.Builder=)=} callback Callback that will receive `null` as the first and\r\n     *  the Builder as its second argument on success, otherwise the error as its first argument. If omitted, the\r\n     *  file will be read synchronously and this function will return the Builder.\r\n     * @param {ProtoBuf.Builder=} builder Builder to append to. Will create a new one if omitted.\r\n     * @return {?ProtoBuf.Builder|undefined} The Builder if synchronous (no callback specified, will be NULL if the\r\n     *   request has failed), else undefined\r\n     * @expose\r\n     */\r\n    ProtoBuf.loadProtoFile = function(filename, callback, builder) {\r\n        if (callback && typeof callback === 'object')\r\n            builder = callback,\r\n            callback = null;\r\n        else if (!callback || typeof callback !== 'function')\r\n            callback = null;\r\n        if (callback)\r\n            return ProtoBuf.Util.fetch(typeof filename === 'string' ? filename : filename[\"root\"]+\"/\"+filename[\"file\"], function(contents) {\r\n                if (contents === null) {\r\n                    callback(Error(\"Failed to fetch file\"));\r\n                    return;\r\n                }\r\n                try {\r\n                    callback(null, ProtoBuf.loadProto(contents, builder, filename));\r\n                } catch (e) {\r\n                    callback(e);\r\n                }\r\n            });\r\n        var contents = ProtoBuf.Util.fetch(typeof filename === 'object' ? filename[\"root\"]+\"/\"+filename[\"file\"] : filename);\r\n        return contents === null ? null : ProtoBuf.loadProto(contents, builder, filename);\r\n    };\r\n\r\n    /**\r\n     * Loads a .proto file and returns the Builder. This is an alias of {@link ProtoBuf.loadProtoFile}.\r\n     * @function\r\n     * @param {string|{root: string, file: string}} filename Path to proto file or an object specifying 'file' with\r\n     *  an overridden 'root' path for all imported files.\r\n     * @param {function(?Error, !ProtoBuf.Builder=)=} callback Callback that will receive `null` as the first and\r\n     *  the Builder as its second argument on success, otherwise the error as its first argument. If omitted, the\r\n     *  file will be read synchronously and this function will return the Builder.\r\n     * @param {ProtoBuf.Builder=} builder Builder to append to. Will create a new one if omitted.\r\n     * @return {!ProtoBuf.Builder|undefined} The Builder if synchronous (no callback specified, will be NULL if the\r\n     *   request has failed), else undefined\r\n     * @expose\r\n     */\r\n    ProtoBuf.protoFromFile = ProtoBuf.loadProtoFile; // Legacy\r\n\r\n\r\n    /**\r\n     * Constructs a new empty Builder.\r\n     * @param {Object.<string,*>=} options Builder options, defaults to global options set on ProtoBuf\r\n     * @return {!ProtoBuf.Builder} Builder\r\n     * @expose\r\n     */\r\n    ProtoBuf.newBuilder = function(options) {\r\n        options = options || {};\r\n        if (typeof options['convertFieldsToCamelCase'] === 'undefined')\r\n            options['convertFieldsToCamelCase'] = ProtoBuf.convertFieldsToCamelCase;\r\n        if (typeof options['populateAccessors'] === 'undefined')\r\n            options['populateAccessors'] = ProtoBuf.populateAccessors;\r\n        return new ProtoBuf.Builder(options);\r\n    };\r\n\r\n    /**\r\n     * Loads a .json definition and returns the Builder.\r\n     * @param {!*|string} json JSON definition\r\n     * @param {(ProtoBuf.Builder|string|{root: string, file: string})=} builder Builder to append to. Will create a new one if omitted.\r\n     * @param {(string|{root: string, file: string})=} filename The corresponding file name if known. Must be specified for imports.\r\n     * @return {ProtoBuf.Builder} Builder to create new messages\r\n     * @throws {Error} If the definition cannot be parsed or built\r\n     * @expose\r\n     */\r\n    ProtoBuf.loadJson = function(json, builder, filename) {\r\n        if (typeof builder === 'string' || (builder && typeof builder[\"file\"] === 'string' && typeof builder[\"root\"] === 'string'))\r\n            filename = builder,\r\n            builder = null;\r\n        if (!builder || typeof builder !== 'object')\r\n            builder = ProtoBuf.newBuilder();\r\n        if (typeof json === 'string')\r\n            json = JSON.parse(json);\r\n        builder[\"import\"](json, filename);\r\n        builder.resolveAll();\r\n        return builder;\r\n    };\r\n\r\n    /**\r\n     * Loads a .json file and returns the Builder.\r\n     * @param {string|!{root: string, file: string}} filename Path to json file or an object specifying 'file' with\r\n     *  an overridden 'root' path for all imported files.\r\n     * @param {function(?Error, !ProtoBuf.Builder=)=} callback Callback that will receive `null` as the first and\r\n     *  the Builder as its second argument on success, otherwise the error as its first argument. If omitted, the\r\n     *  file will be read synchronously and this function will return the Builder.\r\n     * @param {ProtoBuf.Builder=} builder Builder to append to. Will create a new one if omitted.\r\n     * @return {?ProtoBuf.Builder|undefined} The Builder if synchronous (no callback specified, will be NULL if the\r\n     *   request has failed), else undefined\r\n     * @expose\r\n     */\r\n    ProtoBuf.loadJsonFile = function(filename, callback, builder) {\r\n        if (callback && typeof callback === 'object')\r\n            builder = callback,\r\n            callback = null;\r\n        else if (!callback || typeof callback !== 'function')\r\n            callback = null;\r\n        if (callback)\r\n            return ProtoBuf.Util.fetch(typeof filename === 'string' ? filename : filename[\"root\"]+\"/\"+filename[\"file\"], function(contents) {\r\n                if (contents === null) {\r\n                    callback(Error(\"Failed to fetch file\"));\r\n                    return;\r\n                }\r\n                try {\r\n                    callback(null, ProtoBuf.loadJson(JSON.parse(contents), builder, filename));\r\n                } catch (e) {\r\n                    callback(e);\r\n                }\r\n            });\r\n        var contents = ProtoBuf.Util.fetch(typeof filename === 'object' ? filename[\"root\"]+\"/\"+filename[\"file\"] : filename);\r\n        return contents === null ? null : ProtoBuf.loadJson(JSON.parse(contents), builder, filename);\r\n    };\r\n\r\n    return ProtoBuf;\r\n});\r\n"]}